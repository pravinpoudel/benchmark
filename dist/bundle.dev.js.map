{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///src/configs.ts","webpack:///src/dataset/index.ts","webpack:///src/dataset/miserables.ts","webpack:///src/dataset/patents.ts","webpack:///src/elements/element.ts","webpack:///src/elements/link.ts","webpack:///src/elements/node.ts","webpack:///src/index.ts","webpack:///src/interaction/interaction.ts","webpack:///src/renderer/elements/render-element.ts","webpack:///src/renderer/elements/render-link.ts","webpack:///src/renderer/elements/render-node.ts","webpack:///src/renderer/index.ts","webpack:///src/renderer/shaders/link-shader.ts","webpack:///src/renderer/shaders/node-shader.ts","webpack:///src/renderer/utils.ts","webpack:///src/utils/const.js","webpack:///src/utils/is.ts","webpack:///src/utils/map2.ts","webpack:///src/utils/utils.ts"],"names":[],"mappings":"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AE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,CAAA,GAAE,CAAA,EAAM,GAAE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,CAAA,GAAE,CAAA,EAAM,GAAE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,CAAA,GAAE,CAAA,EAAM,GAAE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,CAAA,GAAE,CAAA,EAAM,GAAE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,CAAA,GAAE,CAAA,EAAM,GAAE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,CAAA,GAAE,CAAA,EAAM,GAAE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,CAAA,GAAE,CAAA,EAAM,GAAE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,CAAA,GAAE,CAAA,EAAM,GAAE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,CAAA,GAAE,CAAA,EAAM,GAAE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,CAAA,GAAE,CAAA,EAAM,GAAE,E,IACV,CAAA,EAAE,CAAA,CAAA,CAAA,CAAA,CAAA,CAAQ,C,IACV,CAAA,GAAE,CAAA,EAAM,CAAE,M,IACV,C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;;i1BAAA,C;;qXAAA,C;;;;;;;;;;;mvBAAA,C;;wVAAA,C;;yyBAAA,C;;88BAAA,C;;;0hCAAA,C;;+ZAAA,C;;y7DAAA,C;;2XAAA,C;;;;;iJAAA,C;;2jEAAA,C;;;;yNAAA,C;;0YAAA,C;;;;;;;;;;;;;;;;k3EAAA,C;;;iwCAAA,C;;0rBAAA,C;;g1DAAA,C;;;0kGAAA,C;;igBAAA,C;;qdAAA,C;;yYAAA,C;;8UAAA,C;;;;;;;;yQAAA,C;;4VAAA,C;;07BAAA,C;;;;;;;;;;8pEAAA,C;;;;;;;;;;;8+CAAA,C;;u1BAAA,C;;sTAAA,C;;;;;8sCAAA,C;;8hBAAA,C;;sVAAA,C;;;;;wqCAAA,C;;uqBAAA,C;;m+BAAA,C;;6iDAAA,C;;+0BAAA,C;;ixBAAA,C;;gsCAAA,C;;;;;;;;;;;;;4gCAAA,C;;yrFAAA,C;;isCAAA,C;;yhCAAA,C;;+5BAAA,C;;0xBAAA,C;;4tBAAA,C;;qlDAAA,C;;gvBAAA,C;;wjPAAA,C;;qXAAA,C;;mgCAAA,C;;wsBAAA,C;;wuBAAA,C;;yeAAA,C;;kgBAAA,C;;igDAAA,C;;4fAAA,C;;kuFAAA,C;;yeAAA,C;;yeAAA,C;;+5BAAA,C;;qsBAAA,C;;m7EAAA,C;;wVAAA,C;;qkFAAA,C;;qVAAA,C;;+vGAAA,C;;;;;;;;23BAAA,C;;ioDAAA,C;;4oHAAA,C;;20CAAA,C;;20CAAA,C;;gjCAAA,C;;qkBAAA,C;;;;;;;;mGAAA,C;;4mBAAA,C;;0aAAA,C;;;QAAA,C;;i1BAAA,C;;;;w1BAAA,C;;;8RAAA,C;;02CAAA,C;;sUAAA,C;;ozFAAA,C;;;;;;;;;;;;;;;;;;;;;;;;6zBAAA,C;;mkBAAA,C;;urBAAA,C;;2qBAAA,C;;;;;;;;;;uQAAA,C;;;;;;;8OAAA,C;;;;;;;;;;;;;8RAAA,C;;;;6JAAA,C;;;;;;;;;;;;sVAAA,C;;;;25DAAA,C;;;;;;;;;;4rDAAA,C;;uxBAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qOAAA,C;;o1BAAA,C;;;;;;;iXAAA,C;;o6BAAA,C;;;;;;;;;;;23BAAA,C;;;;;;;;;;;;;+uBAAA,C;;6dAAA,C;;oVAAA,C;;q3GAAA,C;;wnBAAA,C;;wyHAAA,C;;gUAAA,C;;;MAAA,C;;yhEAAA,C;;6kFAAA,C;;66GAAA,C;;mWAAA,C;;opDAAA,C;;o5BAAA,C;;;ijDAAA,C;;i0CAAA,C;;oyGAAA,C;;+7CAAA,C;;qzCAAA,C;;4pBAAA,C;;;;;;;;;;;;;;wLAAA,C;;qpBAAA,C;;;;;;;;;;;m9EAAA,C;;g0CAAA,C;;s4CAAA,C;;84CAAA,C;;wmCAAA,C;;wsFAAA,C;;;wiCAAA,C;;w9DAAA,C;;05BAAA,C;;qyDAAA,C;;00BAAA,C;;8vEAAA,C;;+2CAAA,C;;;;krDAAA,C;;;;;;;;;;+/HAAA,C;;;4wBAAA,C;;kjDAAA,C;;m3CAAA,C;;;;;;;;;omCAAA,C;;w7CAAA,C;;mkDAAA,C;;ujIAAA,C;;oyEAAA,C;;miCAAA,C;;ymBAAA,C;;0nBAAA,C;;;;yhBAAA,C;;ygBAAA,C;;yaAAA,C;;qgBAAA,C;;kaAAA,C;;8kBAAA,C;;0kBAAA,C;;yhBAAA,C;;0uHAAA,C;;qbAAA,C;;;sEAAA,C;;gvBAAA,C;;4aAAA,C;;6fAAA,C;;ylKAAA,C;;;;;8rCAAA,C;;0uEAAA,C;;;;;;;;;;;;;;sLAAA,C;;+/CAAA,C;;;0/CAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+5BAAA,C;;woCAAA,C;;ygBAAA,C;;i6GAAA,C;;4gDAAA,C;;+bAAA,C;;2gBAAA,C;;wwBAAA,C;;;;;0jBAAA,C;;otBAAA,C;;0wBAAA,C;;ysBAAA,C;;q0CAAA,C;;oWAAA,C;;0+CAAA,C;;2YAAA,C;;2aAAA,C;;8zCAAA,C;;8zCAAA,C;;0kBAAA,C;;6oPAAA,C;;kqCAAA,C;;iXAAA,C;;ytBAAA,C;;ylBAAA,C;;mbAAA,C;;4qEAAA,C;;2XAAA,C;;;;;;;;;;;;;;;;;;;;6IAAA,C;;i6BAAA,C;;;;;;8UAAA,C;;kqDAAA,C;;0pEAAA,C;;;;;;iXAAA,C;;0fAAA,C;;;;;;;;;;;;;;;;;;;8WAAA,C;;sbAAA,C;;8eAAA,C;;gjBAAA,C;;;;;;yIAAA,C;;;;;;;;;yNAAA,C;;qvDAAA,C;;ogBAAA,C;;;;;;;;;;;mEAAA,C;;;;;;;qYAAA,C;;4aAAA,C;;gdAAA,C;;;;;;yMAAA,C;;8hBAAA,C;;mYAAA,C;;wwHAAA,C;;;;;;;;;;;+RAAA,C;;0UAAA,C;;6ZAAA,C;;0nCAAA,C;;2rCAAA,C;;igBAAA,C;;igBAAA,C;;i5BAAA,C;;2VAAA,C;;4tBAAA,C;;ylEAAA,C;;2tBAAA,C;;q7BAAA,C;;;;4OAAA,C;;oxBAAA,C;;4lBAAA,C;;0lBAAA,C;;onBAAA,C;;omBAAA,C;;8lBAAA,C;;8lBAAA,C;;wlBAAA,C;;gnBAAA,C;;8mBAAA,C;;gnBAAA,C;;wcAAA,C;;4xCAAA,C;;4xCAAA,C;;4xCAAA,C;;4xCAAA,C;;4xCAAA,C;;4xCAAA,C;;gyCAAA,C;;gyCAAA,C;;oyCAAA,C;;66sBAAA,C;;ilBAAA,C;;qqCAAA,C;;qqCAAA,C;;qqCAAA,C;;qqCAAA,C;;qqCAAA,C;;yqCAAA,C;;qqCAAA,C;;qqCAAA,C;;qqCAAA,C;;yqCAAA,C;;yqCAAA,C;;yqCAAA,C;;0sBAAA,C;;w2BAAA,C;;s/CAAA,C;;stBAAA,C;;itBAAA,C;;kwOAAA,C;;yqCAAA,C;;2qCAAA,C;;yqCAAA,C;;6qCAAA,C;;6qCAAA,C;;uqCAAA,C;;mgBAAA,C;;s4FAAA,C;;wVAAA,C;;;;;yhEAAA,C;;4jIAAA,C;;i4CAAA,C;;gmOAAA,C;;61BAAA,C;;6jFAAA,C;;;gqBAAA,C;;qgBAAA,C;;gUAAA,C;;syDAAA,C;;ooEAAA,C;;87DAAA,C;;q4DAAA,C;;k4HAAA,C;;ghDAAA,C;;uoDAAA,C;;+kDAAA,C;;qpDAAA,C;;;;;;4oCAAA,C;;m9CAAA,C;;gWAAA,C;;6vBAAA,C;;+rCAAA,C;;g3LAAA,C;;2xBAAA,C;;0XAAA,C;;+yBAAA,C;;kvBAAA,C;;ynBAAA,C;;2pBAAA,C;;mxBAAA,C;;0yBAAA,C;;qqBAAA,C;;6oDAAA,C;;oaAAA,C;;stDAAA,C;;inBAAA,C;;;;;;;;;;;;;;;;yTAAA,C;;iaAAA,C;;8rCAAA,C;;ghBAAA,C;;kWAAA,C;;o+CAAA,C;;ixBAAA,C;;wiCAAA,C;;+rBAAA,C;;q7NAAA,C;;8gCAAA,C;;onBAAA,C;;+cAAA,C;;44BAAA,C;;8eAAA,C;;0aAAA,C;;;w0DAAA,C;;8kBAAA,C;;wxBAAA,C;;+aAAA,C;;2bAAA,C;;ioCAAA,C;;ijCAAA,C;;mYAAA,C;;09BAAA,C;;uXAAA,C;;61CAAA,C;;usBAAA,C;;uaAAA,C;;2bAAA,C;;+mBAAA,C;;q7BAAA,C;;u3BAAA,C;;;;;QAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;ksDAAA,C;;y+GAAA,C;;qsDAAA,C;;qXAAA,C;;iWAAA,C;;;;6MAAA,C;;0wDAAA,C;;;8PAAA,C;;itCAAA,C;;;+WAAA,C;;y+DAAA,C;;;maAAA,C;;;2hBAAA,C;;64EAAA,C;;;ylBAAA,C;;;4JAAA,C;;u6BAAA,C;;;;;;;;;;;u/BAAA,C;;;ghBAAA,C;;gsCAAA,C;;;4bAAA,C;;gWAAA,C;;oUAAA,C;;;;MAAA,C;;8oEAAA,C;;0kCAAA,C;;wzGAAA,C;;66DAAA,C;;kTAAA,C;;ikBAAA,C;;isBAAA,C;;0gBAAA,C;;ssBAAA,C;;y6BAAA,C;;quBAAA,C;;izBAAA,C;;2jBAAA,C;;u9BAAA,C;;qYAAA,C;;iiBAAA,C;;;;m/BAAA,C;;qeAAA,C;;uXAAA,C;;krEAAA,C;;s+FAAA,C;;inBAAA,C;;mpBAAA,C;;ohBAAA,C;;8YAAA,C;;w+BAAA,C;;wfAAA,C;;+vBAAA,C;;qtDAAA,C;;8rEAAA,C;;01BAAA,C;;g5BAAA,C;;;;;;;;;;28MAAA,C;;+mCAAA,C;;qgCAAA,C;;wuCAAA,C;;g9YAAA,C;;;;;uYAAA,C;;;;qbAAA,C;;krCAAA,C;;q5BAAA,C;;umCAAA,C;;siCAAA,C;;0lCAAA,C;;gnCAAA,C;;28BAAA,C;;ilGAAA,C;;;gbAAA,C;;o9FAAA,C;;;kZAAA,C;;w5CAAA,C;;kyBAAA,C;;ynBAAA,C;;;;;;;;;;4OAAA,C;;ygCAAA,C;;y1CAAA,C;;2lCAAA,C;;29BAAA,C;;0lBAAA,C;;;siCAAA,C;;oiGAAA,C;;s4CAAA,C;;g+BAAA,C;;y/BAAA,C;;wzBAAA,C;;;;;2IAAA,C;;2kCAAA,C;;kiKAAA,C;;2iCAAA,C;;w9BAAA,C;;;;;sUAAA,C;;6iBAAA,C;;;;;;;;;;;;;;;;;;;;;;;iCAAA,C;;6+CAAA,C;;q/CAAA,C;;4nBAAA,C;;;;;6tBAAA,C;;+5BAAA,C;;21BAAA,C;;qtCAAA,C;;;;;;;;s7BAAA,C;;;;00CAAA,C;;;;;;;mMAAA,C;;;ooBAAA,C;;;;2TAAA,C;;;;ixCAAA,C;;;;;;;;;2iGAAA,C;;4VAAA,C;;qhBAAA,C;;yeAAA,C;;ojEAAA,C;;sVAAA,C;;icAAA,C;;2/BAAA,C;;+0BAAA,C;;8uDAAA,C;;;;;;;;;wtDAAA,C;;okIAAA,C;;wj0FAAA,C;;knBAAA,C;;s6CAAA,C;;;;;;;;;43BAAA,C;;;;;;;;;+BAAA,C;;u6CAAA,C;;;;;;;;;;;;q+EAAA,C;;m/CAAA,C;;;;;;;;;;w3DAAA,C;;;yjBAAA,C;;+oOAAA,C;;;+NAAA,C;;;;;;;;;;;;;;;;;;;wmEAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iGAAA,C;;ynBAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iDAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAAA,C;;;;;qdAAA,C;;;;;;;;;;;;;;;;;;;;;;;gYAAA,C;;;;;;;;;;;kWAAA,C;;;;6VAAA,C;;;;;;;;;;;;;;;;;;+tBAAA,C;;;;;;;;;;qwDAAA,C;;;;;;;;;4gCAAA,C;;iuzBAAA,C;;;;;;;khBAAA,C;;swFAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6/CAAA,C;;6sCAAA,C;;;;;oNAAA,C;;;mLAAA,C;;;;;;sZAAA,C;;;;;iSAAA,C;;2zFAAA,C;;qpBAAA,C;;skDAAA,C;;;wHAAA,C;;4vFAAA,C;;06BAAA,C;;;;;;;;;;;;;;;0FAAA,C;;i7BAAA,C;;;;;;q2HAAA,C;;;;;;yQAAA,C;;6+CAAA,C;;;;uOAAA,C;;6PAAA,C;;;;;0fAAA,C;;;;;;;0bAAA,C;;6WAAA,C;;sgCAAA,C;;qKAAA,C;;g+BAAA,C;;;;svFAAA,C;;;;uhEAAA,C;;;0sCAAA,C;;;;wjDAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uTAAA,C;;gWAAA,C;;0zFAAA,C;;imBAAA,C;;;qtBAAA,C;;ujFAAA,C;;yrCAAA,C;;;;;;;;;;;;;;;;;;;;2hBAAA,C;;+lBAAA,C;;+nBAAA,C;;shFAAA,C;;mhFAAA,C;;4gBAAA,C;;oPAAA,C;;;;;;;;;;;;obAAA,C;;;;+2DAAA,C;;uTAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;+KAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;umBAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mbAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uOAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mjBAAA,C;;63DAAA,C;;;;;;8uBAAA,C;;qUAAA,C;;+SAAA,C;;y3BAAA,C;;ySAAA,C;;+TAAA,C;;;;;;;;moBAAA,C;;;4sEAAA,C;;i6CAAA,C;;w5BAAA,C;;;s3CAAA,C;;;o3CAAA,C;;;;;ywBAAA,C;;;;;;;;;;;;;;;;;;;;;;;;maAAA,C;;;;;;;0YAAA,C;;g3BAAA,C;;;;;;;;o4CAAA,C;;;;;;;;;67CAAA,C;;;;;;;;;shBAAA,C;;;;;;;;;q9CAAA,C;;21CAAA,C;;;;;qtCAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uIAAA,C;;;;;;;;sbAAA,C;;2iBAAA,C;;uWAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;4TAAA,C;;;;;;;stBAAA,C;;;;;;;;uBAAA,C;;;+QAAA,C;;qgBAAA,C;;;;;;;seAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ihBAAA,C;;;;;;;;;;;;;;;;;MAAA,C;;;;;ihBAAA,C;;;;;2MAAA,C;;u5EAAA,C;;;;;;spBAAA,C;;gnEAAA,C;;;;;;;;;;;;;;yEAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kbAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sHAAA,C;;ktEAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;6JAAA,C;;;;;;;;;;;;;;;;;yaAAA,C;;;;;;8yBAAA,C;;2WAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;woEAAA,C;;63GAAA,C;;2lDAAA,C;;o+CAAA,C;;s8GAAA,C;;gdAAA,C;;ibAAA,C;;q+CAAA,C;;s8CAAA,C;;+2EAAA,C;;6yCAAA,C;;gHAAA,C;;gHAAA,C;;kHAAA,C;;0HAAA,CAtiCJrPhB,E,CAVA","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","/**\r\n * @description default configurations in NetV\r\n * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>\r\n */\r\nexport const width = 800\r\nexport const height = 600\r\nexport const backgroundColor = { r: 1, g: 1, b: 1, a: 1 }\r\nexport const enablePanZoom = true\r\nexport const nodeLimit = 100\r\nexport const linkLimit = 1000\r\n\r\nexport const node = {\r\n    style: {\r\n        shape: 'circle', // default shape\r\n        offset: { x: 0, y: 0 },\r\n        fill: { r: 0.2, g: 0.6, b: 0.2, a: 0.8 },\r\n        strokeColor: { r: 0.9, g: 0.9, b: 0.9, a: 0.6 },\r\n        strokeWidth: 2,\r\n        /* circle shape styles */\r\n        r: 5,\r\n        /* rect shape styles */\r\n        width: 5,\r\n        height: 5,\r\n        rotate: 0, // -pi to +pi, positive value means clockwise\r\n        /* triangle shape styles */\r\n        vertexAlpha: { x: 0, y: -4 },\r\n        vertexBeta: { x: -2 * Math.sqrt(3), y: 2 },\r\n        vertexGamma: { x: 2 * Math.sqrt(3), y: 2 }\r\n    }\r\n}\r\n\r\nexport const link = {\r\n    style: {\r\n        shape: 'line',\r\n        strokeColor: { r: 0.4, g: 0.6, b: 0.8, a: 0.5 },\r\n        strokeWidth: 2\r\n    }\r\n}\r\n","/**\r\n * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>\r\n * @description build-in dataset in NetV\r\n */\r\n\r\nimport { miserables } from './miserables'\r\nimport { patents } from './patents'\r\n\r\nexport { miserables, patents }\r\n","/**\r\n * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>\r\n * @description Les Miserables relation dataset.\r\n */\r\n\r\n/**\r\n * @description generated by d3-force: https://observablehq.com/@d3/force-directed-graph\r\n */\r\n\r\nexport const miserables = {\r\n    nodes: [\r\n        { id: 'Myriel', x: 293.47145117553623, y: 356.4335718104138, group: 1 },\r\n        { id: 'Napoleon', x: 253.9025088618656, y: 374.3058116536445, group: 1 },\r\n        { id: 'Mlle.Baptistine', x: 350.92724989918077, y: 332.3325539999943, group: 1 },\r\n        { id: 'Mme.Magloire', x: 356.0916156539997, y: 352.7885799116015, group: 1 },\r\n        { id: 'CountessdeLo', x: 254.29291520989335, y: 357.3175734076417, group: 1 },\r\n        { id: 'Geborand', x: 257.857293626201, y: 335.85427628358957, group: 1 },\r\n        { id: 'Champtercier', x: 259.6255563825028, y: 383.83027469832814, group: 1 },\r\n        { id: 'Cravatte', x: 249.8596459829139, y: 346.18225516832496, group: 1 },\r\n        { id: 'Count', x: 269.96793951350924, y: 390.6800842321571, group: 1 },\r\n        { id: 'OldMan', x: 246.73952311277665, y: 364.59357494432066, group: 1 },\r\n        { id: 'Labarre', x: 443.516583315026, y: 358.29204789477683, group: 2 },\r\n        { id: 'Valjean', x: 442.16894757641506, y: 320.8315532160861, group: 2 },\r\n        { id: 'Marguerite', x: 413.3816851007931, y: 240.04091559296504, group: 3 },\r\n        { id: 'Mme.deR', x: 427.2361715950254, y: 355.10211589979514, group: 2 },\r\n        { id: 'Isabeau', x: 405.85082858191834, y: 330.5201512205085, group: 2 },\r\n        { id: 'Gervais', x: 405.2113121906881, y: 316.29125359396136, group: 2 },\r\n        { id: 'Tholomyes', x: 422.4125307781646, y: 126.07649449775806, group: 3 },\r\n        { id: 'Listolier', x: 363.1729422677979, y: 102.77890368289785, group: 3 },\r\n        { id: 'Fameuil', x: 381.7947103094028, y: 66.58133724043948, group: 3 },\r\n        { id: 'Blacheville', x: 383.1792676740261, y: 94.80320315500154, group: 3 },\r\n        { id: 'Favourite', x: 361.893731644285, y: 70.38696381384074, group: 3 },\r\n        { id: 'Dahlia', x: 398.75350988351653, y: 77.09700751527119, group: 3 },\r\n        { id: 'Zephine', x: 349.0495914601376, y: 88.80888613372713, group: 3 },\r\n        { id: 'Fantine', x: 398.01411438702473, y: 173.76444196945977, group: 3 },\r\n        { id: 'Mme.Thenardier', x: 471.2516533386725, y: 262.218701666645, group: 4 },\r\n        { id: 'Thenardier', x: 504.81672085603066, y: 283.04638900481723, group: 4 },\r\n        { id: 'Cosette', x: 472.3346941487192, y: 228.68779443303478, group: 5 },\r\n        { id: 'Javert', x: 460.05257689332836, y: 295.5578154268904, group: 4 },\r\n        { id: 'Fauchelevent', x: 385.43935764589986, y: 302.12824588622857, group: 0 },\r\n        { id: 'Bamatabois', x: 393.19041590383597, y: 345.4971667690817, group: 2 },\r\n        { id: 'Perpetue', x: 367.53833132893976, y: 194.5556482306271, group: 3 },\r\n        { id: 'Simplice', x: 401.3622252354655, y: 242.9982847994576, group: 2 },\r\n        { id: 'Scaufflaire', x: 414.67072799627573, y: 344.0547720945736, group: 2 },\r\n        { id: 'Woman1', x: 421.4167414392426, y: 293.31120219129394, group: 2 },\r\n        { id: 'Judge', x: 420.04392007841335, y: 401.03233609152744, group: 2 },\r\n        { id: 'Champmathieu', x: 377.79524254621833, y: 383.8105787115102, group: 2 },\r\n        { id: 'Brevet', x: 401.9529844469992, y: 388.8684782987411, group: 2 },\r\n        { id: 'Chenildieu', x: 400.6685707133538, y: 413.49417790523466, group: 2 },\r\n        { id: 'Cochepaille', x: 379.04969704462354, y: 404.26974059233163, group: 2 },\r\n        { id: 'Pontmercy', x: 553.1137401750198, y: 244.92830027360765, group: 4 },\r\n        { id: 'Boulatruelle', x: 490.1571086086932, y: 249.2101923835803, group: 6 },\r\n        { id: 'Eponine', x: 549.7584267571892, y: 302.9031065228431, group: 4 },\r\n        { id: 'Anzelma', x: 515.3807399395134, y: 257.0179688983911, group: 4 },\r\n        { id: 'Woman2', x: 433.6608665340514, y: 265.8174673886634, group: 5 },\r\n        { id: 'MotherInnocent', x: 403.02536257416523, y: 289.03312200121326, group: 0 },\r\n        { id: 'Gribier', x: 341.80973227456775, y: 294.212396148023, group: 0 },\r\n        { id: 'Jondrette', x: 565.1965303422186, y: 470.65950349375856, group: 7 },\r\n        { id: 'Mme.Burgon', x: 569.1896269242101, y: 426.66185053824563, group: 7 },\r\n        { id: 'Gavroche', x: 572.1619393936826, y: 364.22606766497563, group: 8 },\r\n        { id: 'Gillenormand', x: 524.5914505208005, y: 257.4012214828336, group: 5 },\r\n        { id: 'Magnon', x: 492.548393202341, y: 222.5966351328885, group: 5 },\r\n        { id: 'Mlle.Gillenormand', x: 514.3692655023644, y: 229.09670062389281, group: 5 },\r\n        { id: 'Mme.Pontmercy', x: 549.3250508171474, y: 196.14056833084936, group: 5 },\r\n        { id: 'Mlle.Vaubois', x: 517.8593572394071, y: 186.2488309111565, group: 5 },\r\n        { id: 'Lt.Gillenormand', x: 543.274961139455, y: 223.68184285180976, group: 5 },\r\n        { id: 'Marius', x: 574.2576699056139, y: 283.85211708310334, group: 8 },\r\n        { id: 'BaronessT', x: 573.7140909650625, y: 245.59311909245818, group: 5 },\r\n        { id: 'Mabeuf', x: 628.5432532486191, y: 314.22078408627164, group: 8 },\r\n        { id: 'Enjolras', x: 588.2395498093626, y: 342.0594469923279, group: 8 },\r\n        { id: 'Combeferre', x: 637.7370664614637, y: 351.69235762788395, group: 8 },\r\n        { id: 'Prouvaire', x: 650.8833522869903, y: 386.83918103509916, group: 8 },\r\n        { id: 'Feuilly', x: 626.8556606438109, y: 365.9084164593141, group: 8 },\r\n        { id: 'Courfeyrac', x: 628.3448989975013, y: 336.7666454119022, group: 8 },\r\n        { id: 'Bahorel', x: 656.7717772764985, y: 362.5885882509189, group: 8 },\r\n        { id: 'Bossuet', x: 599.0185765743107, y: 363.8286723407053, group: 8 },\r\n        { id: 'Joly', x: 656.6182923735408, y: 343.2375733559165, group: 8 },\r\n        { id: 'Grantaire', x: 638.4375855314988, y: 402.4387250378995, group: 8 },\r\n        { id: 'MotherPlutarch', x: 664.556723861883, y: 298.0336964526786, group: 9 },\r\n        { id: 'Gueulemer', x: 508.16450525817805, y: 330.4502907444367, group: 4 },\r\n        { id: 'Babet', x: 492.56005279882095, y: 325.9834092848427, group: 4 },\r\n        { id: 'Claquesous', x: 510.93855506250077, y: 309.2869380697328, group: 4 },\r\n        { id: 'Montparnasse', x: 502.7190894173557, y: 350.9275183133438, group: 4 },\r\n        { id: 'Toussaint', x: 445.1254802056807, y: 266.46242665022004, group: 5 },\r\n        { id: 'Child1', x: 588.0351552386961, y: 410.2195555961996, group: 10 },\r\n        { id: 'Child2', x: 559.2777814782705, y: 408.3533184893569, group: 10 },\r\n        { id: 'Brujon', x: 537.1787383904656, y: 337.86922775917947, group: 4 },\r\n        { id: 'Mme.Hucheloup', x: 626.3775850466164, y: 384.35202066894516, group: 8 }\r\n    ],\r\n\r\n    links: [\r\n        { source: 'Napoleon', target: 'Myriel', value: 1 },\r\n        { source: 'Mlle.Baptistine', target: 'Myriel', value: 8 },\r\n        { source: 'Mme.Magloire', target: 'Myriel', value: 10 },\r\n        { source: 'Mme.Magloire', target: 'Mlle.Baptistine', value: 6 },\r\n        { source: 'CountessdeLo', target: 'Myriel', value: 1 },\r\n        { source: 'Geborand', target: 'Myriel', value: 1 },\r\n        { source: 'Champtercier', target: 'Myriel', value: 1 },\r\n        { source: 'Cravatte', target: 'Myriel', value: 1 },\r\n        { source: 'Count', target: 'Myriel', value: 2 },\r\n        { source: 'OldMan', target: 'Myriel', value: 1 },\r\n        { source: 'Valjean', target: 'Labarre', value: 1 },\r\n        { source: 'Valjean', target: 'Mme.Magloire', value: 3 },\r\n        { source: 'Valjean', target: 'Mlle.Baptistine', value: 3 },\r\n        { source: 'Valjean', target: 'Myriel', value: 5 },\r\n        { source: 'Marguerite', target: 'Valjean', value: 1 },\r\n        { source: 'Mme.deR', target: 'Valjean', value: 1 },\r\n        { source: 'Isabeau', target: 'Valjean', value: 1 },\r\n        { source: 'Gervais', target: 'Valjean', value: 1 },\r\n        { source: 'Listolier', target: 'Tholomyes', value: 4 },\r\n        { source: 'Fameuil', target: 'Tholomyes', value: 4 },\r\n        { source: 'Fameuil', target: 'Listolier', value: 4 },\r\n        { source: 'Blacheville', target: 'Tholomyes', value: 4 },\r\n        { source: 'Blacheville', target: 'Listolier', value: 4 },\r\n        { source: 'Blacheville', target: 'Fameuil', value: 4 },\r\n        { source: 'Favourite', target: 'Tholomyes', value: 3 },\r\n        { source: 'Favourite', target: 'Listolier', value: 3 },\r\n        { source: 'Favourite', target: 'Fameuil', value: 3 },\r\n        { source: 'Favourite', target: 'Blacheville', value: 4 },\r\n        { source: 'Dahlia', target: 'Tholomyes', value: 3 },\r\n        { source: 'Dahlia', target: 'Listolier', value: 3 },\r\n        { source: 'Dahlia', target: 'Fameuil', value: 3 },\r\n        { source: 'Dahlia', target: 'Blacheville', value: 3 },\r\n        { source: 'Dahlia', target: 'Favourite', value: 5 },\r\n        { source: 'Zephine', target: 'Tholomyes', value: 3 },\r\n        { source: 'Zephine', target: 'Listolier', value: 3 },\r\n        { source: 'Zephine', target: 'Fameuil', value: 3 },\r\n        { source: 'Zephine', target: 'Blacheville', value: 3 },\r\n        { source: 'Zephine', target: 'Favourite', value: 4 },\r\n        { source: 'Zephine', target: 'Dahlia', value: 4 },\r\n        { source: 'Fantine', target: 'Tholomyes', value: 3 },\r\n        { source: 'Fantine', target: 'Listolier', value: 3 },\r\n        { source: 'Fantine', target: 'Fameuil', value: 3 },\r\n        { source: 'Fantine', target: 'Blacheville', value: 3 },\r\n        { source: 'Fantine', target: 'Favourite', value: 4 },\r\n        { source: 'Fantine', target: 'Dahlia', value: 4 },\r\n        { source: 'Fantine', target: 'Zephine', value: 4 },\r\n        { source: 'Fantine', target: 'Marguerite', value: 2 },\r\n        { source: 'Fantine', target: 'Valjean', value: 9 },\r\n        { source: 'Mme.Thenardier', target: 'Fantine', value: 2 },\r\n        { source: 'Mme.Thenardier', target: 'Valjean', value: 7 },\r\n        { source: 'Thenardier', target: 'Mme.Thenardier', value: 13 },\r\n        { source: 'Thenardier', target: 'Fantine', value: 1 },\r\n        { source: 'Thenardier', target: 'Valjean', value: 12 },\r\n        { source: 'Cosette', target: 'Mme.Thenardier', value: 4 },\r\n        { source: 'Cosette', target: 'Valjean', value: 31 },\r\n        { source: 'Cosette', target: 'Tholomyes', value: 1 },\r\n        { source: 'Cosette', target: 'Thenardier', value: 1 },\r\n        { source: 'Javert', target: 'Valjean', value: 17 },\r\n        { source: 'Javert', target: 'Fantine', value: 5 },\r\n        { source: 'Javert', target: 'Thenardier', value: 5 },\r\n        { source: 'Javert', target: 'Mme.Thenardier', value: 1 },\r\n        { source: 'Javert', target: 'Cosette', value: 1 },\r\n        { source: 'Fauchelevent', target: 'Valjean', value: 8 },\r\n        { source: 'Fauchelevent', target: 'Javert', value: 1 },\r\n        { source: 'Bamatabois', target: 'Fantine', value: 1 },\r\n        { source: 'Bamatabois', target: 'Javert', value: 1 },\r\n        { source: 'Bamatabois', target: 'Valjean', value: 2 },\r\n        { source: 'Perpetue', target: 'Fantine', value: 1 },\r\n        { source: 'Simplice', target: 'Perpetue', value: 2 },\r\n        { source: 'Simplice', target: 'Valjean', value: 3 },\r\n        { source: 'Simplice', target: 'Fantine', value: 2 },\r\n        { source: 'Simplice', target: 'Javert', value: 1 },\r\n        { source: 'Scaufflaire', target: 'Valjean', value: 1 },\r\n        { source: 'Woman1', target: 'Valjean', value: 2 },\r\n        { source: 'Woman1', target: 'Javert', value: 1 },\r\n        { source: 'Judge', target: 'Valjean', value: 3 },\r\n        { source: 'Judge', target: 'Bamatabois', value: 2 },\r\n        { source: 'Champmathieu', target: 'Valjean', value: 3 },\r\n        { source: 'Champmathieu', target: 'Judge', value: 3 },\r\n        { source: 'Champmathieu', target: 'Bamatabois', value: 2 },\r\n        { source: 'Brevet', target: 'Judge', value: 2 },\r\n        { source: 'Brevet', target: 'Champmathieu', value: 2 },\r\n        { source: 'Brevet', target: 'Valjean', value: 2 },\r\n        { source: 'Brevet', target: 'Bamatabois', value: 1 },\r\n        { source: 'Chenildieu', target: 'Judge', value: 2 },\r\n        { source: 'Chenildieu', target: 'Champmathieu', value: 2 },\r\n        { source: 'Chenildieu', target: 'Brevet', value: 2 },\r\n        { source: 'Chenildieu', target: 'Valjean', value: 2 },\r\n        { source: 'Chenildieu', target: 'Bamatabois', value: 1 },\r\n        { source: 'Cochepaille', target: 'Judge', value: 2 },\r\n        { source: 'Cochepaille', target: 'Champmathieu', value: 2 },\r\n        { source: 'Cochepaille', target: 'Brevet', value: 2 },\r\n        { source: 'Cochepaille', target: 'Chenildieu', value: 2 },\r\n        { source: 'Cochepaille', target: 'Valjean', value: 2 },\r\n        { source: 'Cochepaille', target: 'Bamatabois', value: 1 },\r\n        { source: 'Pontmercy', target: 'Thenardier', value: 1 },\r\n        { source: 'Boulatruelle', target: 'Thenardier', value: 1 },\r\n        { source: 'Eponine', target: 'Mme.Thenardier', value: 2 },\r\n        { source: 'Eponine', target: 'Thenardier', value: 3 },\r\n        { source: 'Anzelma', target: 'Eponine', value: 2 },\r\n        { source: 'Anzelma', target: 'Thenardier', value: 2 },\r\n        { source: 'Anzelma', target: 'Mme.Thenardier', value: 1 },\r\n        { source: 'Woman2', target: 'Valjean', value: 3 },\r\n        { source: 'Woman2', target: 'Cosette', value: 1 },\r\n        { source: 'Woman2', target: 'Javert', value: 1 },\r\n        { source: 'MotherInnocent', target: 'Fauchelevent', value: 3 },\r\n        { source: 'MotherInnocent', target: 'Valjean', value: 1 },\r\n        { source: 'Gribier', target: 'Fauchelevent', value: 2 },\r\n        { source: 'Mme.Burgon', target: 'Jondrette', value: 1 },\r\n        { source: 'Gavroche', target: 'Mme.Burgon', value: 2 },\r\n        { source: 'Gavroche', target: 'Thenardier', value: 1 },\r\n        { source: 'Gavroche', target: 'Javert', value: 1 },\r\n        { source: 'Gavroche', target: 'Valjean', value: 1 },\r\n        { source: 'Gillenormand', target: 'Cosette', value: 3 },\r\n        { source: 'Gillenormand', target: 'Valjean', value: 2 },\r\n        { source: 'Magnon', target: 'Gillenormand', value: 1 },\r\n        { source: 'Magnon', target: 'Mme.Thenardier', value: 1 },\r\n        { source: 'Mlle.Gillenormand', target: 'Gillenormand', value: 9 },\r\n        { source: 'Mlle.Gillenormand', target: 'Cosette', value: 2 },\r\n        { source: 'Mlle.Gillenormand', target: 'Valjean', value: 2 },\r\n        { source: 'Mme.Pontmercy', target: 'Mlle.Gillenormand', value: 1 },\r\n        { source: 'Mme.Pontmercy', target: 'Pontmercy', value: 1 },\r\n        { source: 'Mlle.Vaubois', target: 'Mlle.Gillenormand', value: 1 },\r\n        { source: 'Lt.Gillenormand', target: 'Mlle.Gillenormand', value: 2 },\r\n        { source: 'Lt.Gillenormand', target: 'Gillenormand', value: 1 },\r\n        { source: 'Lt.Gillenormand', target: 'Cosette', value: 1 },\r\n        { source: 'Marius', target: 'Mlle.Gillenormand', value: 6 },\r\n        { source: 'Marius', target: 'Gillenormand', value: 12 },\r\n        { source: 'Marius', target: 'Pontmercy', value: 1 },\r\n        { source: 'Marius', target: 'Lt.Gillenormand', value: 1 },\r\n        { source: 'Marius', target: 'Cosette', value: 21 },\r\n        { source: 'Marius', target: 'Valjean', value: 19 },\r\n        { source: 'Marius', target: 'Tholomyes', value: 1 },\r\n        { source: 'Marius', target: 'Thenardier', value: 2 },\r\n        { source: 'Marius', target: 'Eponine', value: 5 },\r\n        { source: 'Marius', target: 'Gavroche', value: 4 },\r\n        { source: 'BaronessT', target: 'Gillenormand', value: 1 },\r\n        { source: 'BaronessT', target: 'Marius', value: 1 },\r\n        { source: 'Mabeuf', target: 'Marius', value: 1 },\r\n        { source: 'Mabeuf', target: 'Eponine', value: 1 },\r\n        { source: 'Mabeuf', target: 'Gavroche', value: 1 },\r\n        { source: 'Enjolras', target: 'Marius', value: 7 },\r\n        { source: 'Enjolras', target: 'Gavroche', value: 7 },\r\n        { source: 'Enjolras', target: 'Javert', value: 6 },\r\n        { source: 'Enjolras', target: 'Mabeuf', value: 1 },\r\n        { source: 'Enjolras', target: 'Valjean', value: 4 },\r\n        { source: 'Combeferre', target: 'Enjolras', value: 15 },\r\n        { source: 'Combeferre', target: 'Marius', value: 5 },\r\n        { source: 'Combeferre', target: 'Gavroche', value: 6 },\r\n        { source: 'Combeferre', target: 'Mabeuf', value: 2 },\r\n        { source: 'Prouvaire', target: 'Gavroche', value: 1 },\r\n        { source: 'Prouvaire', target: 'Enjolras', value: 4 },\r\n        { source: 'Prouvaire', target: 'Combeferre', value: 2 },\r\n        { source: 'Feuilly', target: 'Gavroche', value: 2 },\r\n        { source: 'Feuilly', target: 'Enjolras', value: 6 },\r\n        { source: 'Feuilly', target: 'Prouvaire', value: 2 },\r\n        { source: 'Feuilly', target: 'Combeferre', value: 5 },\r\n        { source: 'Feuilly', target: 'Mabeuf', value: 1 },\r\n        { source: 'Feuilly', target: 'Marius', value: 1 },\r\n        { source: 'Courfeyrac', target: 'Marius', value: 9 },\r\n        { source: 'Courfeyrac', target: 'Enjolras', value: 17 },\r\n        { source: 'Courfeyrac', target: 'Combeferre', value: 13 },\r\n        { source: 'Courfeyrac', target: 'Gavroche', value: 7 },\r\n        { source: 'Courfeyrac', target: 'Mabeuf', value: 2 },\r\n        { source: 'Courfeyrac', target: 'Eponine', value: 1 },\r\n        { source: 'Courfeyrac', target: 'Feuilly', value: 6 },\r\n        { source: 'Courfeyrac', target: 'Prouvaire', value: 3 },\r\n        { source: 'Bahorel', target: 'Combeferre', value: 5 },\r\n        { source: 'Bahorel', target: 'Gavroche', value: 5 },\r\n        { source: 'Bahorel', target: 'Courfeyrac', value: 6 },\r\n        { source: 'Bahorel', target: 'Mabeuf', value: 2 },\r\n        { source: 'Bahorel', target: 'Enjolras', value: 4 },\r\n        { source: 'Bahorel', target: 'Feuilly', value: 3 },\r\n        { source: 'Bahorel', target: 'Prouvaire', value: 2 },\r\n        { source: 'Bahorel', target: 'Marius', value: 1 },\r\n        { source: 'Bossuet', target: 'Marius', value: 5 },\r\n        { source: 'Bossuet', target: 'Courfeyrac', value: 12 },\r\n        { source: 'Bossuet', target: 'Gavroche', value: 5 },\r\n        { source: 'Bossuet', target: 'Bahorel', value: 4 },\r\n        { source: 'Bossuet', target: 'Enjolras', value: 10 },\r\n        { source: 'Bossuet', target: 'Feuilly', value: 6 },\r\n        { source: 'Bossuet', target: 'Prouvaire', value: 2 },\r\n        { source: 'Bossuet', target: 'Combeferre', value: 9 },\r\n        { source: 'Bossuet', target: 'Mabeuf', value: 1 },\r\n        { source: 'Bossuet', target: 'Valjean', value: 1 },\r\n        { source: 'Joly', target: 'Bahorel', value: 5 },\r\n        { source: 'Joly', target: 'Bossuet', value: 7 },\r\n        { source: 'Joly', target: 'Gavroche', value: 3 },\r\n        { source: 'Joly', target: 'Courfeyrac', value: 5 },\r\n        { source: 'Joly', target: 'Enjolras', value: 5 },\r\n        { source: 'Joly', target: 'Feuilly', value: 5 },\r\n        { source: 'Joly', target: 'Prouvaire', value: 2 },\r\n        { source: 'Joly', target: 'Combeferre', value: 5 },\r\n        { source: 'Joly', target: 'Mabeuf', value: 1 },\r\n        { source: 'Joly', target: 'Marius', value: 2 },\r\n        { source: 'Grantaire', target: 'Bossuet', value: 3 },\r\n        { source: 'Grantaire', target: 'Enjolras', value: 3 },\r\n        { source: 'Grantaire', target: 'Combeferre', value: 1 },\r\n        { source: 'Grantaire', target: 'Courfeyrac', value: 2 },\r\n        { source: 'Grantaire', target: 'Joly', value: 2 },\r\n        { source: 'Grantaire', target: 'Gavroche', value: 1 },\r\n        { source: 'Grantaire', target: 'Bahorel', value: 1 },\r\n        { source: 'Grantaire', target: 'Feuilly', value: 1 },\r\n        { source: 'Grantaire', target: 'Prouvaire', value: 1 },\r\n        { source: 'MotherPlutarch', target: 'Mabeuf', value: 3 },\r\n        { source: 'Gueulemer', target: 'Thenardier', value: 5 },\r\n        { source: 'Gueulemer', target: 'Valjean', value: 1 },\r\n        { source: 'Gueulemer', target: 'Mme.Thenardier', value: 1 },\r\n        { source: 'Gueulemer', target: 'Javert', value: 1 },\r\n        { source: 'Gueulemer', target: 'Gavroche', value: 1 },\r\n        { source: 'Gueulemer', target: 'Eponine', value: 1 },\r\n        { source: 'Babet', target: 'Thenardier', value: 6 },\r\n        { source: 'Babet', target: 'Gueulemer', value: 6 },\r\n        { source: 'Babet', target: 'Valjean', value: 1 },\r\n        { source: 'Babet', target: 'Mme.Thenardier', value: 1 },\r\n        { source: 'Babet', target: 'Javert', value: 2 },\r\n        { source: 'Babet', target: 'Gavroche', value: 1 },\r\n        { source: 'Babet', target: 'Eponine', value: 1 },\r\n        { source: 'Claquesous', target: 'Thenardier', value: 4 },\r\n        { source: 'Claquesous', target: 'Babet', value: 4 },\r\n        { source: 'Claquesous', target: 'Gueulemer', value: 4 },\r\n        { source: 'Claquesous', target: 'Valjean', value: 1 },\r\n        { source: 'Claquesous', target: 'Mme.Thenardier', value: 1 },\r\n        { source: 'Claquesous', target: 'Javert', value: 1 },\r\n        { source: 'Claquesous', target: 'Eponine', value: 1 },\r\n        { source: 'Claquesous', target: 'Enjolras', value: 1 },\r\n        { source: 'Montparnasse', target: 'Javert', value: 1 },\r\n        { source: 'Montparnasse', target: 'Babet', value: 2 },\r\n        { source: 'Montparnasse', target: 'Gueulemer', value: 2 },\r\n        { source: 'Montparnasse', target: 'Claquesous', value: 2 },\r\n        { source: 'Montparnasse', target: 'Valjean', value: 1 },\r\n        { source: 'Montparnasse', target: 'Gavroche', value: 1 },\r\n        { source: 'Montparnasse', target: 'Eponine', value: 1 },\r\n        { source: 'Montparnasse', target: 'Thenardier', value: 1 },\r\n        { source: 'Toussaint', target: 'Cosette', value: 2 },\r\n        { source: 'Toussaint', target: 'Javert', value: 1 },\r\n        { source: 'Toussaint', target: 'Valjean', value: 1 },\r\n        { source: 'Child1', target: 'Gavroche', value: 2 },\r\n        { source: 'Child2', target: 'Gavroche', value: 2 },\r\n        { source: 'Child2', target: 'Child1', value: 3 },\r\n        { source: 'Brujon', target: 'Babet', value: 3 },\r\n        { source: 'Brujon', target: 'Gueulemer', value: 3 },\r\n        { source: 'Brujon', target: 'Thenardier', value: 3 },\r\n        { source: 'Brujon', target: 'Gavroche', value: 1 },\r\n        { source: 'Brujon', target: 'Eponine', value: 1 },\r\n        { source: 'Brujon', target: 'Claquesous', value: 1 },\r\n        { source: 'Brujon', target: 'Montparnasse', value: 1 },\r\n        { source: 'Mme.Hucheloup', target: 'Bossuet', value: 1 },\r\n        { source: 'Mme.Hucheloup', target: 'Joly', value: 1 },\r\n        { source: 'Mme.Hucheloup', target: 'Grantaire', value: 1 },\r\n        { source: 'Mme.Hucheloup', target: 'Bahorel', value: 1 },\r\n        { source: 'Mme.Hucheloup', target: 'Courfeyrac', value: 1 },\r\n        { source: 'Mme.Hucheloup', target: 'Gavroche', value: 1 },\r\n        { source: 'Mme.Hucheloup', target: 'Enjolras', value: 1 }\r\n    ]\r\n}\r\n","/**\r\n * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>\r\n * @description Patents dataset, from https://www.patentsview.org/web/#viz/relationships\r\n */\r\n\r\nexport const patents = {\r\n    nodes: [\r\n        {\r\n            type: 'patent',\r\n            id: '6516227',\r\n            name: 'Rechargeable spinal cord stimulator system',\r\n            numCitations: 1363,\r\n            x: -146.50722772206416,\r\n            y: 237.7898848864182\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6535909',\r\n            name: 'System and method for record and playback of collaborative Web browsing session',\r\n            numCitations: 1438,\r\n            x: 301.0880840740178,\r\n            y: 78.3544919158754\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6549908',\r\n            name:\r\n                'Methods and apparatus for interpreting user selections in the context of a relation distributed as a set of orthogonalized sub-relations',\r\n            numCitations: 1268,\r\n            x: -13.814856590741202,\r\n            y: -183.5501679350274\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6553563',\r\n            name: 'Development tool, method, and system for client server applications',\r\n            numCitations: 1351,\r\n            x: -0.5224312790142777,\r\n            y: -247.1495779627279\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6558320',\r\n            name:\r\n                'Handheld personal data assistant (PDA) with a medical device and method of using the same',\r\n            numCitations: 1514,\r\n            x: -204.64071894654788,\r\n            y: 71.57055284512312\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6558351',\r\n            name: 'Closed loop system for controlling insulin infusion',\r\n            numCitations: 1369,\r\n            x: -212.97816000219387,\r\n            y: 14.71564053417009\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6560461',\r\n            name: 'Authorized location reporting paging system',\r\n            numCitations: 1479,\r\n            x: -250.43543062905093,\r\n            y: -191.43720062406038\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6563174',\r\n            name: 'Thin film transistor and matrix display device',\r\n            numCitations: 3284,\r\n            x: -12.588249503652401,\r\n            y: -3.606638925074952\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6565509',\r\n            name: 'Analyte monitoring device and methods of use',\r\n            numCitations: 1333,\r\n            x: -105.25511612362045,\r\n            y: 157.11713360602621\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6571282',\r\n            name: 'Block-based communication in a communication services patterns environment',\r\n            numCitations: 1467,\r\n            x: 139.669746748281,\r\n            y: 253.01406501471942\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6574635',\r\n            name:\r\n                'Application instantiation based upon attributes and values stored in a meta data repository, including tiering of application layers objects and components',\r\n            numCitations: 1368,\r\n            x: 11.002027627782116,\r\n            y: -234.9180529832358\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6577726',\r\n            name: 'Computer telephony integration hotelling method and system',\r\n            numCitations: 1270,\r\n            x: -87.19153245841262,\r\n            y: -173.97644755929284\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6587835',\r\n            name: 'Shopping assistance with handheld computing device',\r\n            numCitations: 1471,\r\n            x: -279.2865813378465,\r\n            y: 110.1587912501507\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6601087',\r\n            name: 'Instant document sharing',\r\n            numCitations: 1397,\r\n            x: 210.94821350137184,\r\n            y: 92.53188786911404\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6602252',\r\n            name: 'Combined dissecting, cauterizing, and stapling device',\r\n            numCitations: 1503,\r\n            x: 147.94977165043258,\r\n            y: 170.08888855631307\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6604117',\r\n            name: 'Method of maintaining a network of partially replicated database system',\r\n            numCitations: 1261,\r\n            x: -0.888555802742035,\r\n            y: -218.23048820307227\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6604128',\r\n            name: 'Method and system for distributing objects over a network',\r\n            numCitations: 1261,\r\n            x: -56.73872742120841,\r\n            y: -243.3483841066443\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6606744',\r\n            name:\r\n                'Providing collaborative installation management in a network-based supply chain environment',\r\n            numCitations: 1271,\r\n            x: 153.9948251850397,\r\n            y: 231.46579888120272\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6609150',\r\n            name:\r\n                'Web client-server system and method for incompatible page markup and presentation languages',\r\n            numCitations: 1336,\r\n            x: 13.182867607321255,\r\n            y: -184.8342643188157\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6621834',\r\n            name: 'System and method for voice transmission over network protocols',\r\n            numCitations: 1265,\r\n            x: 85.08228149344369,\r\n            y: 105.43464571232896\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6641533',\r\n            name:\r\n                'Handheld personal data assistant (PDA) with a medical device and method of using the same',\r\n            numCitations: 1431,\r\n            x: -218.09766118001224,\r\n            y: 39.85760035797989\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6644532',\r\n            name: 'Surgical stapling apparatus',\r\n            numCitations: 1267,\r\n            x: 304.6630925316294,\r\n            y: -29.709611573491397\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6654032',\r\n            name: 'Instant sharing of documents on a remote server',\r\n            numCitations: 1413,\r\n            x: 159.30050355296015,\r\n            y: 108.98389585627005\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6656193',\r\n            name: 'Device for attachment of buttress material to a surgical fastening device',\r\n            numCitations: 1279,\r\n            x: 116.90914153158597,\r\n            y: -78.76626936858557\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6665648',\r\n            name: 'State models for monitoring process',\r\n            numCitations: 1288,\r\n            x: -19.75185273935374,\r\n            y: -126.65338912269928\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6665655',\r\n            name: 'Implicit rating of retrieved information in an information search system',\r\n            numCitations: 1294,\r\n            x: -205.5103612199467,\r\n            y: -62.615175772923976\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6684438',\r\n            name:\r\n                'Method of using cache to determine the visibility to a remote database client of a plurality of database transactions',\r\n            numCitations: 1265,\r\n            x: -70.89621190805329,\r\n            y: -211.65898126469475\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6690387',\r\n            name: 'Touch-screen image scrolling system and method',\r\n            numCitations: 1361,\r\n            x: -96.0833335861014,\r\n            y: 257.188666044209\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6693232',\r\n            name: 'Inbred corn line LH295',\r\n            numCitations: 1585,\r\n            x: 225.21362396634333,\r\n            y: -181.7023120873901\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6698643',\r\n            name: 'Expanding parallel jaw device for use with an electromechanical driver device',\r\n            numCitations: 1355,\r\n            x: 116.93380088200308,\r\n            y: 220.21419705439607\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6711565',\r\n            name: 'Method, apparatus, and system for previewing search results',\r\n            numCitations: 1388,\r\n            x: -37.50448129076735,\r\n            y: -273.41169584791356\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6716233',\r\n            name:\r\n                'Electromechanical driver and remote surgical instrument attachment having computer assisted control capabilities',\r\n            numCitations: 1244,\r\n            x: 99.98744927740107,\r\n            y: 212.59527229962606\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6718361',\r\n            name:\r\n                'Method and apparatus for reliable and scalable distribution of data files in distributed networks',\r\n            numCitations: 1349,\r\n            x: -214.4706454200155,\r\n            y: 179.76445383311545\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6724399',\r\n            name:\r\n                'Methods and apparatus for enabling keyboard accelerators in applications implemented via a browser',\r\n            numCitations: 1271,\r\n            x: -3.865437098036597,\r\n            y: -168.04665075977616\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6727522',\r\n            name: 'Transistor and semiconductor device',\r\n            numCitations: 3301,\r\n            x: 45.493009086533476,\r\n            y: -18.399336761865555\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6728702',\r\n            name:\r\n                'System and method to implement an integrated search center supporting a full-text search and query on a database',\r\n            numCitations: 1290,\r\n            x: -50.77651269647964,\r\n            y: -265.6439416642619\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6728960',\r\n            name: 'Techniques for managing multiple threads in a browser environment',\r\n            numCitations: 1287,\r\n            x: -31.86098260027274,\r\n            y: -177.09627925166075\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6732095',\r\n            name: 'Method and apparatus for mapping between XML and relational representations',\r\n            numCitations: 1318,\r\n            x: -45.17430826877544,\r\n            y: -152.23938355298804\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6732100',\r\n            name: 'Database access method and system for user role defined access',\r\n            numCitations: 1347,\r\n            x: -59.210136806292674,\r\n            y: -174.83877990849572\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6732111',\r\n            name:\r\n                'Method, apparatus, system, and program product for attaching files and other objects to a partially replicated database',\r\n            numCitations: 1294,\r\n            x: -90.7397050479451,\r\n            y: -244.71990328774314\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6754681',\r\n            name:\r\n                'Partially replicated distributed database with multiple levels of remote clients',\r\n            numCitations: 1269,\r\n            x: -79.58083870312655,\r\n            y: -228.1724054173842\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6763351',\r\n            name: 'Method, apparatus, and system for attaching search results',\r\n            numCitations: 1487,\r\n            x: -25.243474733492743,\r\n            y: -263.25740794021067\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6763501',\r\n            name: 'Remote document serving',\r\n            numCitations: 1319,\r\n            x: 158.3253837620942,\r\n            y: 93.49546231516919\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6768904',\r\n            name: 'Data communication method using mobile terminal',\r\n            numCitations: 1256,\r\n            x: -307.97606158133414,\r\n            y: 18.769756679797396\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6782383',\r\n            name: 'System and method to implement a persistent and dismissible search center frame',\r\n            numCitations: 1282,\r\n            x: -12.976177557835852,\r\n            y: -272.9194404073791\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6783524',\r\n            name: 'Robotic surgical tool with ultrasound cauterizing and cutting instrument',\r\n            numCitations: 1505,\r\n            x: 43.38231098694066,\r\n            y: 279.08217801147714\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6786382',\r\n            name:\r\n                'Surgical stapling instrument incorporating an articulation joint for a firing bar track',\r\n            numCitations: 1371,\r\n            x: 134.94078164502835,\r\n            y: -65.10082373566381\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6804330',\r\n            name: 'Method and system for accessing CRM data via voice',\r\n            numCitations: 1348,\r\n            x: 41.445251723842865,\r\n            y: -236.9915648109865\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6809653',\r\n            name: 'Telemetered characteristic monitor system and method of using the same',\r\n            numCitations: 1250,\r\n            x: -192.3665947756808,\r\n            y: 85.20039713859154\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6826565',\r\n            name: 'Method and apparatus for serving files to browsing clients',\r\n            numCitations: 1253,\r\n            x: -187.202078612142,\r\n            y: -205.8028067140975\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6826582',\r\n            name: 'Method and system for using file systems for content management',\r\n            numCitations: 1262,\r\n            x: -173.39071713434592,\r\n            y: -84.74810645391052\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6826745',\r\n            name: 'System and method for smart scripting call centers and configuration thereof',\r\n            numCitations: 1290,\r\n            x: -76.78126433121005,\r\n            y: -189.22148175125054\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6829655',\r\n            name:\r\n                'Method and system for server synchronization with a computing device via a companion device',\r\n            numCitations: 1292,\r\n            x: 54.15067210701869,\r\n            y: -193.55954311545358\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6830174',\r\n            name: 'Medical instrument',\r\n            numCitations: 1345,\r\n            x: 241.6836563040002,\r\n            y: 178.8101554942473\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6842748',\r\n            name:\r\n                'Usage based strength between related information in an information retrieval system',\r\n            numCitations: 1273,\r\n            x: -255.7671401763918,\r\n            y: -89.30941490160309\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6843403',\r\n            name: 'Surgical clamping, cutting and stapling device',\r\n            numCitations: 1278,\r\n            x: 80.62267888317515,\r\n            y: 204.67249292957572\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6850252',\r\n            name: 'Intelligent electronic appliance system and method',\r\n            numCitations: 1784,\r\n            x: -269.0939625716982,\r\n            y: 80.79152540917103\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6850895',\r\n            name: 'Assignment manager',\r\n            numCitations: 1429,\r\n            x: -104.71523172899978,\r\n            y: -237.67489051495383\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6850949',\r\n            name:\r\n                'System and method for generating a dynamic interface via a communications network',\r\n            numCitations: 1276,\r\n            x: 170.8948478666423,\r\n            y: -157.1623996387279\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6852915',\r\n            name: 'Inbred corn line LH283BtMON810',\r\n            numCitations: 1584,\r\n            x: 214.2878252666797,\r\n            y: -221.65064590625735\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6905057',\r\n            name:\r\n                'Surgical stapling instrument incorporating a firing mechanism having a linked rack transmission',\r\n            numCitations: 1398,\r\n            x: 204.244314091743,\r\n            y: -78.10023672232607\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6959852',\r\n            name:\r\n                'Surgical stapling instrument with multistroke firing incorporating an anti-backup mechanism',\r\n            numCitations: 1279,\r\n            x: 214.47741140236582,\r\n            y: -56.291587636591125\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6964363',\r\n            name:\r\n                'Surgical stapling instrument having articulation joint support plates for supporting a firing bar',\r\n            numCitations: 1330,\r\n            x: 171.89247270898028,\r\n            y: -97.41002462550293\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6978921',\r\n            name: 'Surgical stapling instrument incorporating an E-beam firing mechanism',\r\n            numCitations: 1271,\r\n            x: 220.9998003804044,\r\n            y: -71.42078135636545\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '6981628',\r\n            name: 'Surgical instrument with a lateral-moving articulation control',\r\n            numCitations: 1588,\r\n            x: 155.12209667738722,\r\n            y: -93.69628751460294\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7000818',\r\n            name:\r\n                'Surgical stapling instrument having separate distinct closing and firing systems',\r\n            numCitations: 1422,\r\n            x: 227.01768845379692,\r\n            y: 7.024056611463051\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7025743',\r\n            name:\r\n                'External infusion device with remote programming, bolus estimator and/or vibration alarm capabilities',\r\n            numCitations: 1348,\r\n            x: -139.33487275744275,\r\n            y: 46.52061115334398\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7049190',\r\n            name:\r\n                'Method for forming ZnO film, method for forming ZnO semiconductor layer, method for fabricating semiconductor device, and semiconductor device',\r\n            numCitations: 3234,\r\n            x: -289.10918833611,\r\n            y: -97.96776938549537\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7055731',\r\n            name:\r\n                'Surgical stapling instrument incorporating a tapered firing bar for increased flexibility around the articulation joint',\r\n            numCitations: 1325,\r\n            x: 230.49518386439988,\r\n            y: -59.64224567858248\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7061014',\r\n            name:\r\n                'Natural-superlattice homologous single crystal thin film, method for preparation thereof, and device using said single crystal thin film',\r\n            numCitations: 3339,\r\n            x: -5.800882044901439,\r\n            y: 68.52641595031525\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7064346',\r\n            name: 'Transistor and semiconductor device',\r\n            numCitations: 3268,\r\n            x: -3.4003031519913716,\r\n            y: 25.981356836043688\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7105868',\r\n            name: 'High-electron mobility transistor with zinc oxide',\r\n            numCitations: 3233,\r\n            x: -17.835785749785817,\r\n            y: 199.91883720210305\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7111769',\r\n            name:\r\n                'Surgical instrument incorporating an articulation mechanism having rotation about the longitudinal axis',\r\n            numCitations: 1278,\r\n            x: 151.22579832524045,\r\n            y: -37.17099074749013\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7147138',\r\n            name:\r\n                'Surgical stapling instrument having an electroactive polymer actuated buttress deployment mechanism',\r\n            numCitations: 1428,\r\n            x: 189.086143238575,\r\n            y: -73.69130392683924\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7159750',\r\n            name: 'Surgical stapling device',\r\n            numCitations: 1258,\r\n            x: -41.29995186519443,\r\n            y: 292.8462674537822\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7211825',\r\n            name: 'Indium oxide-based thin film transistors and circuits',\r\n            numCitations: 3245,\r\n            x: -312.3839057221477,\r\n            y: -5.614541567133007\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7246734',\r\n            name: 'Rotary hydraulic pump actuated multi-stroke surgical instrument',\r\n            numCitations: 1288,\r\n            x: 200.44563380086515,\r\n            y: -63.18865588076886\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7282782',\r\n            name: 'Combined binary oxide semiconductor device',\r\n            numCitations: 3273,\r\n            x: -125.8309041477986,\r\n            y: -31.277877893580488\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7297977',\r\n            name: 'Semiconductor device',\r\n            numCitations: 3318,\r\n            x: -128.28288629696726,\r\n            y: -55.26147557803329\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7323356',\r\n            name:\r\n                'LnCuO(S,Se,Te)monocrystalline thin film, its manufacturing method, and optical device or electronic device using the monocrystalline thin film',\r\n            numCitations: 3251,\r\n            x: -18.59755305395574,\r\n            y: 88.95531610838968\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7340411',\r\n            name:\r\n                'System and method for generating, capturing, and managing customer lead information over a computer network',\r\n            numCitations: 1282,\r\n            x: 171.1408315591698,\r\n            y: -202.24883708044808\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7380695',\r\n            name:\r\n                'Surgical stapling instrument having a single lockout mechanism for prevention of firing',\r\n            numCitations: 1386,\r\n            x: 186.25833530110194,\r\n            y: -21.66321873245209\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7380696',\r\n            name:\r\n                'Articulating surgical stapling instrument incorporating a two-piece E-beam firing mechanism',\r\n            numCitations: 1388,\r\n            x: 207.9029593903179,\r\n            y: -8.531533737621885\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7385224',\r\n            name:\r\n                'Thin film transistor having an etching protection film and manufacturing method thereof',\r\n            numCitations: 3224,\r\n            x: -209.82230482555335,\r\n            y: -138.5100409900293\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7402506',\r\n            name:\r\n                'Methods of making thin film transistors comprising zinc-oxide-based semiconductor materials and transistors made thereby',\r\n            numCitations: 3258,\r\n            x: 205.02475667447774,\r\n            y: 185.67878066443038\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7404508',\r\n            name: 'Surgical stapling and cutting device',\r\n            numCitations: 1517,\r\n            x: 142.8534886173237,\r\n            y: 1.3325885281748553\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7411209',\r\n            name: 'Field-effect transistor and method for manufacturing the same',\r\n            numCitations: 3255,\r\n            x: 98.46207221183528,\r\n            y: 123.03084775370279\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7453065',\r\n            name: 'Sensor and image pickup device',\r\n            numCitations: 3230,\r\n            x: -0.16573743942671854,\r\n            y: 141.28922935299022\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7453087',\r\n            name:\r\n                'Thin-film transistor and thin-film diode having amorphous-oxide semiconductor layer',\r\n            numCitations: 3242,\r\n            x: 64.92619908272222,\r\n            y: 181.84593665090443\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7462862',\r\n            name: 'Transistor using an isovalent semiconductor oxide as the active channel layer',\r\n            numCitations: 3244,\r\n            x: -69.61679142848251,\r\n            y: -17.951431766711924\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7464846',\r\n            name: 'Surgical instrument having a removable battery',\r\n            numCitations: 1287,\r\n            x: 181.84194955991686,\r\n            y: -6.130356644541759\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7468304',\r\n            name: 'Method of fabricating oxide semiconductor device',\r\n            numCitations: 3240,\r\n            x: 43.14447422876499,\r\n            y: 84.30857449883901\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7501293',\r\n            name:\r\n                'Semiconductor device in which zinc oxide is used as a semiconductor material and method for manufacturing the semiconductor device',\r\n            numCitations: 3216,\r\n            x: 100.75984495619763,\r\n            y: 263.93928117765387\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7506791',\r\n            name:\r\n                'Surgical stapling instrument with mechanical mechanism for limiting maximum tissue compression',\r\n            numCitations: 1257,\r\n            x: 162.8994374938383,\r\n            y: -13.50766436461125\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7620655',\r\n            name:\r\n                'Method, device and computer program product for identifying visitors of websites',\r\n            numCitations: 1243,\r\n            x: 273.7453257058471,\r\n            y: -134.11969716806783\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7632985',\r\n            name: 'Soybean event MON89788 and methods for detection thereof',\r\n            numCitations: 1477,\r\n            x: 25.156412731130995,\r\n            y: 232.6383745363165\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7663607',\r\n            name: 'Multipoint touchscreen',\r\n            numCitations: 2217,\r\n            x: 148.31729075714412,\r\n            y: -252.1205411729562\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7674650',\r\n            name: 'Semiconductor device and manufacturing method thereof',\r\n            numCitations: 3439,\r\n            x: 265.20775273511885,\r\n            y: 97.08753175649879\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '7732819',\r\n            name: 'Semiconductor device and manufacturing method thereof',\r\n            numCitations: 3288,\r\n            x: 241.27432475696145,\r\n            y: 92.57917159661595\r\n        },\r\n        {\r\n            type: 'patent',\r\n            id: '8053184',\r\n            name: 'Soybean event MON89788 and methods for detection thereof',\r\n            numCitations: 1249,\r\n            x: 12.74173927451986,\r\n            y: 223.33050946853854\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4082602-2',\r\n            name: 'Adam Heller',\r\n            numPatents: 278,\r\n            x: -78.97918367878395,\r\n            y: 175.83458551945697\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6551276-11',\r\n            name: 'Adrian Gut',\r\n            numPatents: 14,\r\n            x: -126.49163896882082,\r\n            y: 77.05392542894437\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6551276-3',\r\n            name: 'Alan Haubach',\r\n            numPatents: 15,\r\n            x: -133.54480618517556,\r\n            y: 13.73644337954243\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6732095-1',\r\n            name: 'Alex Warshavsky',\r\n            numPatents: 38,\r\n            x: -41.43006091014681,\r\n            y: -115.69468137064817\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4082097-1',\r\n            name: 'Alfred E. Mann',\r\n            numPatents: 73,\r\n            x: -166.25127823417688,\r\n            y: 64.21424556623339\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7402506-2',\r\n            name: 'Andrea C. Scuderi',\r\n            numPatents: 2,\r\n            x: 232.021013564944,\r\n            y: 201.54360553214553\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6295530-1',\r\n            name: 'Andrew M. Ritchie',\r\n            numPatents: 3,\r\n            x: -180.13270109380883,\r\n            y: -175.89335875039285\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5944791-1',\r\n            name: 'Andrew W. Scherpbier',\r\n            numPatents: 8,\r\n            x: 89.03596788702271,\r\n            y: 73.41966601562058\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6665648-4',\r\n            name: 'Andrzej P. Mazur',\r\n            numPatents: 1,\r\n            x: -17.75957738133269,\r\n            y: -90.04327884141138\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6577726-4',\r\n            name: 'Anil K. Annadata',\r\n            numPatents: 19,\r\n            x: -90.27237726758581,\r\n            y: -142.1198155312784\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6336137-3',\r\n            name: 'Anil Mukundan',\r\n            numPatents: 24,\r\n            x: 44.97570003882059,\r\n            y: -173.1912630521635\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6829655-3',\r\n            name: 'Anupam Singhal',\r\n            numPatents: 12,\r\n            x: 68.03341497080808,\r\n            y: -159.6164090183031\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5276262-2',\r\n            name: 'Arthur L. Johnson',\r\n            numPatents: 9,\r\n            x: 185.5095664352228,\r\n            y: -228.8419915898405\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7082832-4',\r\n            name: 'Ayanori Endo',\r\n            numPatents: 5,\r\n            x: 116.09261573010951,\r\n            y: 149.17176081875573\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6370584-1',\r\n            name: 'Azer Bestavros',\r\n            numPatents: 8,\r\n            x: -240.41292415194087,\r\n            y: 197.40201072984638\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5722997-2',\r\n            name: 'Behrad Aria',\r\n            numPatents: 75,\r\n            x: -76.88639579899268,\r\n            y: 140.59743480285144\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4972224-1',\r\n            name: 'Bennie Thompson',\r\n            numPatents: 46,\r\n            x: 129.80735052389812,\r\n            y: -4.481972559839983\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7620655-2',\r\n            name: 'Björn Sperling',\r\n            numPatents: 1,\r\n            x: 265.69802466021343,\r\n            y: -163.1748759268247\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6551276-12',\r\n            name: 'Bob Murtfeldt',\r\n            numPatents: 14,\r\n            x: -104.57602641605023,\r\n            y: 43.21929386017491\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6809653-9',\r\n            name: 'Brad T. Hite',\r\n            numPatents: 4,\r\n            x: -178.740694429597,\r\n            y: 114.56430107100311\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6665648-5',\r\n            name: 'Brian Groves',\r\n            numPatents: 3,\r\n            x: -4.063703727593559,\r\n            y: -93.24666021615177\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7000818-3',\r\n            name: 'Brian J. Hemmelgarn',\r\n            numPatents: 2,\r\n            x: 251.87825271692208,\r\n            y: 28.28980319526008\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6658577-1',\r\n            name: 'Brian Q. Huppi',\r\n            numPatents: 94,\r\n            x: 123.19631987835258,\r\n            y: -269.5549552777111\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5465895-1',\r\n            name: 'Bryan D. Knodel',\r\n            numPatents: 147,\r\n            x: 249.27159352509696,\r\n            y: 149.8942269653444\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5948006-1',\r\n            name: 'Carla M. Mann',\r\n            numPatents: 30,\r\n            x: -148.41153476987805,\r\n            y: 268.2102368533701\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6558351-8',\r\n            name: 'Cary D. Talbot',\r\n            numPatents: 51,\r\n            x: -242.1201373960085,\r\n            y: 1.0809105861722483\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5176644-1',\r\n            name: 'Chad Srisathapat',\r\n            numPatents: 28,\r\n            x: -106.59780325645289,\r\n            y: 56.72415996247363\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6732095-2',\r\n            name: 'Chandrakant Ramkrishna Bhavsar',\r\n            numPatents: 7,\r\n            x: -56.44692423602858,\r\n            y: -114.38936355952521\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6804330-5',\r\n            name: 'Chris Haven',\r\n            numPatents: 8,\r\n            x: 76.58996926607027,\r\n            y: -233.59376421774968\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5859916-3',\r\n            name: 'Christopher A. Julian',\r\n            numPatents: 35,\r\n            x: 32.49529202915526,\r\n            y: 307.85587157329917\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5963953-3',\r\n            name: 'Christopher Stauber',\r\n            numPatents: 3,\r\n            x: 38.876499177308936,\r\n            y: -254.6853371485407\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6593834-2',\r\n            name: 'Chunong Qiu',\r\n            numPatents: 30,\r\n            x: -299.51357073275767,\r\n            y: 28.693586133179505\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5703357-3',\r\n            name: 'Cindy Xing Qiu',\r\n            numPatents: 37,\r\n            x: -307.60494602088494,\r\n            y: -36.09974297692554\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5382232-1',\r\n            name: 'Cliff Hague',\r\n            numPatents: 25,\r\n            x: -158.94889170792217,\r\n            y: 75.57366125967091\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6535909-1',\r\n            name: 'David Bradley Rust',\r\n            numPatents: 10,\r\n            x: 293.89378266881215,\r\n            y: 108.24045592690449\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5713911-1',\r\n            name: 'David C. Racenet',\r\n            numPatents: 117,\r\n            x: -70.73199996729076,\r\n            y: 283.6884502132661\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5512426-1',\r\n            name: 'David H. Levy',\r\n            numPatents: 97,\r\n            x: 175.62273346829593,\r\n            y: 195.03348092042785\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5755737-3',\r\n            name: 'David Karl Lee Peterson',\r\n            numPatents: 10,\r\n            x: -116.19997593920681,\r\n            y: 235.42317467768706\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6004276-13',\r\n            name: 'David L. Rabbers',\r\n            numPatents: 9,\r\n            x: 90.05455138839467,\r\n            y: -199.76724302660992\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4127227-1',\r\n            name: 'David T. Green',\r\n            numPatents: 253,\r\n            x: 320.0538956493474,\r\n            y: -2.5674406983783777\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5329655-1',\r\n            name: 'Dean L. Garner',\r\n            numPatents: 9,\r\n            x: 82.9868378665844,\r\n            y: -75.01472155002138\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6551276-9',\r\n            name: 'Deborah Ruppert',\r\n            numPatents: 22,\r\n            x: -118.26552937451507,\r\n            y: 20.131481189101695\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6551276-10',\r\n            name: 'Dennis P. Bishop',\r\n            numPatents: 16,\r\n            x: -113.04138432659943,\r\n            y: 68.5347918156229\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5918159-2',\r\n            name: 'Denzil Willoughby Chesney',\r\n            numPatents: 8,\r\n            x: -221.3438163197732,\r\n            y: -180.31258868435725\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6912839-2',\r\n            name: 'Derek Dee Deville',\r\n            numPatents: 127,\r\n            x: 124.00562369714609,\r\n            y: 30.303518573213328\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6718361-8',\r\n            name: 'Domenic J. LaRosa',\r\n            numPatents: 7,\r\n            x: -185.1634027151588,\r\n            y: 191.49880558090896\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6850949-1',\r\n            name: 'Doug Warner',\r\n            numPatents: 1,\r\n            x: 197.4109586624888,\r\n            y: -141.51137425901277\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6530932-2',\r\n            name: 'Douglas B. Hoffman',\r\n            numPatents: 41,\r\n            x: 112.65902202678886,\r\n            y: -41.95179419340801\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6434550-1',\r\n            name: 'Douglas K. Warner',\r\n            numPatents: 11,\r\n            x: -240.213051803147,\r\n            y: -58.38534522176044\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6850895-5',\r\n            name: 'Duane Wandless',\r\n            numPatents: 3,\r\n            x: -141.77120370957505,\r\n            y: -235.84945888555336\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7632985-4',\r\n            name: 'Ellen Dickinson',\r\n            numPatents: 5,\r\n            x: -6.650712953659232,\r\n            y: 243.85922494977996\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5616532-3',\r\n            name: 'Ephraim Heller',\r\n            numPatents: 125,\r\n            x: -136.66276931786788,\r\n            y: 148.50833287306844\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6724399-1',\r\n            name: 'Ernst Katchour',\r\n            numPatents: 2,\r\n            x: 20.460705177816816,\r\n            y: -138.6316174346047\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4403687-2',\r\n            name: 'Eugene L. Timperman',\r\n            numPatents: 69,\r\n            x: 167.81405976240322,\r\n            y: 23.653794348670516\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6905057-2',\r\n            name: 'Frederick E. Shelton, IV',\r\n            numPatents: 1047,\r\n            x: 206.94055601161958,\r\n            y: -33.63794401922105\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5041086-4',\r\n            name: 'Fredric C. Colman',\r\n            numPatents: 119,\r\n            x: -93.07141522233565,\r\n            y: 187.61382791214774\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6433921-2',\r\n            name: 'G. Victor Treyz',\r\n            numPatents: 19,\r\n            x: -250.2141922087249,\r\n            y: 117.70936188128789\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6558351-1',\r\n            name: 'Garry M. Steil',\r\n            numPatents: 21,\r\n            x: -197.55033843707088,\r\n            y: -14.969054157255261\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5707369-2',\r\n            name: 'Geoffrey C. Hueil',\r\n            numPatents: 37,\r\n            x: 88.77732129975968,\r\n            y: -59.34294469090431\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6826582-2',\r\n            name: 'George Ericsson',\r\n            numPatents: 1,\r\n            x: -158.02070855249937,\r\n            y: -111.41355666075413\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: 'RE28932-2',\r\n            name: 'Graham W. Bryan',\r\n            numPatents: 17,\r\n            x: 302.15197174981995,\r\n            y: 2.971153301217186\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6144679-1',\r\n            name: 'Gregory S Herman',\r\n            numPatents: 70,\r\n            x: -107.08721212438253,\r\n            y: -22.999325980475344\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6601087-2',\r\n            name: 'Guanghong Yang',\r\n            numPatents: 8,\r\n            x: 181.9400868080221,\r\n            y: 77.6677862338119\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6577726-3',\r\n            name: 'Henry D. Jay',\r\n            numPatents: 7,\r\n            x: -122.02320476982499,\r\n            y: -157.95566732418285\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4283024-1',\r\n            name: 'Henry R. Sienkiewicz',\r\n            numPatents: 35,\r\n            x: 274.60415603712727,\r\n            y: -27.27330962584567\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7323356-5',\r\n            name: 'Hidenori Hiramatsu',\r\n            numPatents: 4,\r\n            x: -36.605424251950446,\r\n            y: 115.850089319988\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4703019-2',\r\n            name: 'Hideo Hosono',\r\n            numPatents: 68,\r\n            x: -9.859457094237333,\r\n            y: 112.18374696348913\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4253061-3',\r\n            name: 'Hideo Ohno',\r\n            numPatents: 55,\r\n            x: 16.424397835913993,\r\n            y: 1.5981290321141162\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5272069-6',\r\n            name: 'Hiromichi Ota',\r\n            numPatents: 19,\r\n            x: -42.930231233299565,\r\n            y: 72.03081578296118\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5041200-1',\r\n            name: 'Hiromitsu Ishii',\r\n            numPatents: 40,\r\n            x: -240.4509629339296,\r\n            y: -150.27601265988352\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6863363-1',\r\n            name: 'Hisato Yabuta',\r\n            numPatents: 40,\r\n            x: 60.4372147665455,\r\n            y: 56.49664921881387\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7385224-2',\r\n            name: 'Hitoshi Hokari',\r\n            numPatents: 3,\r\n            x: -241.8310333799511,\r\n            y: -133.54049779295428\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5041200-4',\r\n            name: 'Ikuhiro Yamaguchi',\r\n            numPatents: 10,\r\n            x: -228.78086701719153,\r\n            y: -162.3667158856017\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4997262-1',\r\n            name: 'Ikuo Sakono',\r\n            numPatents: 9,\r\n            x: -22.451556652393943,\r\n            y: -34.04750168418211\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5081422-1',\r\n            name: 'Ishiang Shih',\r\n            numPatents: 28,\r\n            x: -286.3270775940396,\r\n            y: -23.733105119458497\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6281898-2',\r\n            name: 'Jacquelyn A. Martino',\r\n            numPatents: 43,\r\n            x: -77.40426674630258,\r\n            y: 233.14366209397406\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6665648-3',\r\n            name: 'Jai-Jein Yu',\r\n            numPatents: 3,\r\n            x: -31.84005286492673,\r\n            y: -91.62375747364119\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4809697-1',\r\n            name: 'James D. Causey, III',\r\n            numPatents: 108,\r\n            x: -178.265216120422,\r\n            y: 51.755680930746685\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4863425-2',\r\n            name: 'James L. Henke',\r\n            numPatents: 25,\r\n            x: -229.82632326693144,\r\n            y: 81.1483918350451\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5533238-1',\r\n            name: 'James Say',\r\n            numPatents: 115,\r\n            x: -110.26514650550313,\r\n            y: 189.73841907261374\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6711565-2',\r\n            name: 'Jason Zoss',\r\n            numPatents: 14,\r\n            x: -36.79763583041338,\r\n            y: -303.3606293140057\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6551276-8',\r\n            name: 'Jay Yonemoto',\r\n            numPatents: 26,\r\n            x: -108.39060115065696,\r\n            y: 30.667530964984817\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5863326-1',\r\n            name: 'Jeffrey E. Nause',\r\n            numPatents: 7,\r\n            x: -34.97468782651399,\r\n            y: 225.53781276672427\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4951278-2',\r\n            name: 'Jeffrey I. Cohen',\r\n            numPatents: 45,\r\n            x: -106.67729256003422,\r\n            y: -275.96655765182123\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6393605-1',\r\n            name: 'Jeffrey Loomans',\r\n            numPatents: 4,\r\n            x: -12.089523280862164,\r\n            y: -146.87295689250564\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5243622-2',\r\n            name: 'Jeffrey M. Fischer',\r\n            numPatents: 23,\r\n            x: -69.11510576403663,\r\n            y: -121.59596238278911\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5897563-4',\r\n            name: 'Jeffrey S. Swayze',\r\n            numPatents: 237,\r\n            x: 182.7575218770712,\r\n            y: -42.652264875397925\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7608761-4',\r\n            name: 'Jennifer Rinehart',\r\n            numPatents: 9,\r\n            x: 14.603033717644877,\r\n            y: 258.01693807943076\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7380696-3',\r\n            name: 'Jerry R. Morgan',\r\n            numPatents: 1,\r\n            x: 240.77923512539172,\r\n            y: 0.756185655222625\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5715450-1',\r\n            name: 'Jesse Ambrose',\r\n            numPatents: 19,\r\n            x: 36.180423514508206,\r\n            y: -271.11815189166657\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6711565-3',\r\n            name: 'Jian-Jung Ying',\r\n            numPatents: 15,\r\n            x: -52.40594362916027,\r\n            y: -298.6209852446577\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6516227-4',\r\n            name: 'Joey Chen',\r\n            numPatents: 50,\r\n            x: -154.54667136290993,\r\n            y: 208.95072280734337\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6233617-2',\r\n            name: 'John Coker',\r\n            numPatents: 29,\r\n            x: -107.81893815632144,\r\n            y: -170.9074676231656\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4561444-1',\r\n            name: 'John H. Livingston',\r\n            numPatents: 31,\r\n            x: -152.85300444583956,\r\n            y: 85.10940008964967\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5237178-2',\r\n            name: 'John J. Mastrototaro',\r\n            numPatents: 77,\r\n            x: -205.49739590958532,\r\n            y: 50.31477970484868\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6424847-3',\r\n            name: 'John J. Shin',\r\n            numPatents: 6,\r\n            x: -185.37446355710384,\r\n            y: -3.2872027106235895\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5713911-2',\r\n            name: 'John W. Beardsley',\r\n            numPatents: 110,\r\n            x: -33.81475988638202,\r\n            y: 262.88267211113725\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6690387-1',\r\n            name: 'John Zimmerman',\r\n            numPatents: 16,\r\n            x: -103.86436428501,\r\n            y: 287.0324152077035\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6295530-2',\r\n            name: 'Jonathan Bradshaw',\r\n            numPatents: 7,\r\n            x: -211.8714260910478,\r\n            y: -224.50904787445123\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6964363-2',\r\n            name: 'Joseph Charles Heuil',\r\n            numPatents: 1,\r\n            x: 157.89490960975428,\r\n            y: -126.44781831975064\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6804330-4',\r\n            name: 'Joseph Harb',\r\n            numPatents: 16,\r\n            x: 61.12664822458566,\r\n            y: -268.1908816611899\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7154477-2',\r\n            name: 'Joshua A. Strickon',\r\n            numPatents: 31,\r\n            x: 143.607727645999,\r\n            y: -281.669369261142\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6665648-1',\r\n            name: 'Karen Brodersen',\r\n            numPatents: 2,\r\n            x: -52.887761617406746,\r\n            y: -135.25324601212748\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6914182-1',\r\n            name: 'Katsutoshi Takeda',\r\n            numPatents: 12,\r\n            x: -301.89433487691184,\r\n            y: -70.43324650808906\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5925224-1',\r\n            name: 'Kazuki Kobayashi',\r\n            numPatents: 22,\r\n            x: -41.900676918096416,\r\n            y: 7.301358596622912\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7061014-4',\r\n            name: 'Kazushige Ueda',\r\n            numPatents: 8,\r\n            x: -37.66496363448323,\r\n            y: 59.62475565738286\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4356455-3',\r\n            name: 'Keishi Saito',\r\n            numPatents: 60,\r\n            x: 10.219140633910085,\r\n            y: 114.60611008460567\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6175752-9',\r\n            name: 'Keith A. Friedman',\r\n            numPatents: 56,\r\n            x: -72.76478399432692,\r\n            y: 157.96280246014734\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: 'D263987-1',\r\n            name: 'Keith L. Milliman',\r\n            numPatents: 148,\r\n            x: 285.27055146309806,\r\n            y: -4.161607699952845\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: 'D304234-2',\r\n            name: 'Keith Ratcliff',\r\n            numPatents: 76,\r\n            x: 298.25438655644587,\r\n            y: -62.037733990730615\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6838397-3',\r\n            name: 'Kengo Akimoto',\r\n            numPatents: 301,\r\n            x: 233.30591089284124,\r\n            y: 118.12865814744283\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4072236-1',\r\n            name: 'Kenji Nomura',\r\n            numPatents: 72,\r\n            x: -18.491573620748454,\r\n            y: 164.3319743882085\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4890611-3',\r\n            name: 'Kenneth H. Mollenauer',\r\n            numPatents: 139,\r\n            x: 171.12139099125284,\r\n            y: 149.8278932183207\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5409498-4',\r\n            name: 'Kenneth S. Wales',\r\n            numPatents: 34,\r\n            x: 151.61506500486365,\r\n            y: -68.1715301096975\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6558351-2',\r\n            name: 'Kerstin Rebrin',\r\n            numPatents: 8,\r\n            x: -213.99832648219893,\r\n            y: -18.21020350970695\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7083075-3',\r\n            name: 'Kevin R. Doll',\r\n            numPatents: 33,\r\n            x: 195.17161861296412,\r\n            y: 21.82757190718286\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6826745-3',\r\n            name: 'Kevin R. Nix',\r\n            numPatents: 5,\r\n            x: -113.52318349679786,\r\n            y: -186.65850464097767\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4682596-2',\r\n            name: 'Kevin W. Smith',\r\n            numPatents: 245,\r\n            x: 142.01517052619224,\r\n            y: 35.31713032040018\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6336137-1',\r\n            name: 'King-Hwa Lee',\r\n            numPatents: 7,\r\n            x: 29.136416821389545,\r\n            y: -152.83892279100135\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6553563-3',\r\n            name: 'Klaus W. Strobel',\r\n            numPatents: 3,\r\n            x: 18.502269802896187,\r\n            y: -277.84229119164485\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5715675-2',\r\n            name: 'Korey Kline',\r\n            numPatents: 67,\r\n            x: 107.3928086404656,\r\n            y: 0.12497168391208881\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6718361-2',\r\n            name: 'Krishna Mangiapudi',\r\n            numPatents: 2,\r\n            x: -221.42351181095376,\r\n            y: 210.68462107621696\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6577726-1',\r\n            name: 'Kuang-Yang Huang',\r\n            numPatents: 7,\r\n            x: -110.90293474419634,\r\n            y: -144.1107477274019\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7159750-5',\r\n            name: 'Lee Ann Olson',\r\n            numPatents: 102,\r\n            x: -12.291045729816593,\r\n            y: 284.322824027671\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6718361-4',\r\n            name: 'Leroy R. Karge',\r\n            numPatents: 6,\r\n            x: -246.56898495901828,\r\n            y: 176.8643082489128\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6551276-4',\r\n            name: 'Luis J. Malave',\r\n            numPatents: 25,\r\n            x: -150.46955158412106,\r\n            y: 15.466681355594043\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6048110-3',\r\n            name: 'Lyn M. Irving',\r\n            numPatents: 50,\r\n            x: 185.89368255203638,\r\n            y: 211.73497316837444\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6718361-3',\r\n            name: 'Lynne M. Murach',\r\n            numPatents: 6,\r\n            x: -184.59731612599379,\r\n            y: 168.95459030128404\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5948789-1',\r\n            name: 'Magnus Larsson',\r\n            numPatents: 32,\r\n            x: 282.3498743492304,\r\n            y: -105.85390576839409\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6829655-2',\r\n            name: 'Magnus Vejlstrup',\r\n            numPatents: 5,\r\n            x: 84.57683420505849,\r\n            y: -211.60546591129122\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6711565-4',\r\n            name: 'Marc Caltabiano',\r\n            numPatents: 18,\r\n            x: -21.572503547031765,\r\n            y: -303.25001204800884\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7078503-3',\r\n            name: 'Marianne Malven',\r\n            numPatents: 24,\r\n            x: 39.36478912183982,\r\n            y: 204.50761088237962\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6223205-2',\r\n            name: 'Mark E. Crovella',\r\n            numPatents: 11,\r\n            x: -239.130673392076,\r\n            y: 159.5386268120703\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6621834-2',\r\n            name: 'Mark Randle Boyns',\r\n            numPatents: 9,\r\n            x: 92.9515991340844,\r\n            y: 139.72491699418129\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5534132-1',\r\n            name: 'Mark S. Vreeke',\r\n            numPatents: 99,\r\n            x: -126.17414240825202,\r\n            y: 182.14886801748534\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4892244-4',\r\n            name: 'Mark S. Zeiner',\r\n            numPatents: 112,\r\n            x: 87.86551233944792,\r\n            y: -93.61435949906866\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6829655-6',\r\n            name: 'Martin Susser',\r\n            numPatents: 8,\r\n            x: 86.5166449716311,\r\n            y: -176.3680568624842\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4486720-1',\r\n            name: 'Masahiro Hirano',\r\n            numPatents: 64,\r\n            x: -26.473941021328834,\r\n            y: 50.583877501287475\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5622653-1',\r\n            name: 'Masahiro Orita',\r\n            numPatents: 13,\r\n            x: -43.311943512469504,\r\n            y: 88.05852401092362\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6080998-3',\r\n            name: 'Masao Isomura',\r\n            numPatents: 3,\r\n            x: -277.1673968733419,\r\n            y: -69.16313590358769\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4902671-3',\r\n            name: 'Masashi Kawasaki',\r\n            numPatents: 44,\r\n            x: 25.499834981751505,\r\n            y: 12.458835962907768\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5117838-1',\r\n            name: 'Matthew A. Palmer',\r\n            numPatents: 213,\r\n            x: 111.84440719512871,\r\n            y: 17.55352243854731\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6577726-2',\r\n            name: 'Matthew S. Malden',\r\n            numPatents: 15,\r\n            x: -89.77281715762112,\r\n            y: -212.5200099480745\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6665655-2',\r\n            name: 'Michael A. Myer',\r\n            numPatents: 3,\r\n            x: -222.1548984266278,\r\n            y: -91.88370779987125\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5632432-4',\r\n            name: 'Michael E. Setser',\r\n            numPatents: 46,\r\n            x: 236.1453486905915,\r\n            y: -29.533043437416676\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5306623-3',\r\n            name: 'Michael F. Tomasco',\r\n            numPatents: 89,\r\n            x: -136.35034022301926,\r\n            y: 166.87376786095362\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6606744-1',\r\n            name: 'Michael G. Mikurak',\r\n            numPatents: 14,\r\n            x: 143.06107123828787,\r\n            y: 203.68650030864686\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6264087-1',\r\n            name: 'Michael P. Whitman',\r\n            numPatents: 134,\r\n            x: 88.31330790988822,\r\n            y: 237.10476528058422\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6665648-2',\r\n            name: 'Michael Tsunghsi Yu',\r\n            numPatents: 2,\r\n            x: 7.3045597411881005,\r\n            y: -101.62893346986323\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6081518-1',\r\n            name: 'Michel K. Bowman-Amuah',\r\n            numPatents: 56,\r\n            x: 153.55805703292674,\r\n            y: 278.7584163590403\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4224725-1',\r\n            name: 'Michio Kadota',\r\n            numPatents: 173,\r\n            x: 70.25249110067011,\r\n            y: 260.17630684500784\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6850949-2',\r\n            name: 'Mike Myer',\r\n            numPatents: 1,\r\n            x: 200.98410027290677,\r\n            y: -165.1800994159187\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5261037-2',\r\n            name: 'Min Zhu',\r\n            numPatents: 119,\r\n            x: 187.21787990519445,\r\n            y: 119.18052322241124\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6732100-4',\r\n            name: 'Mingte J. Chen',\r\n            numPatents: 1,\r\n            x: -74.89396821135054,\r\n            y: -144.48151011840986\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5176502-3',\r\n            name: 'Mitchell J. Palmer',\r\n            numPatents: 40,\r\n            x: 315.79092621337537,\r\n            y: -58.79666939419763\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7385224-3',\r\n            name: 'Motohiko Yoshida',\r\n            numPatents: 5,\r\n            x: -231.18768324847443,\r\n            y: -116.45107756791272\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5918159-1',\r\n            name: 'Mundi Fomukong',\r\n            numPatents: 12,\r\n            x: -221.62526815353186,\r\n            y: -201.75317388265475\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7632985-3',\r\n            name: 'Nancy Taylor',\r\n            numPatents: 5,\r\n            x: 50.015886492956845,\r\n            y: 227.2759540780497\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7468304-1',\r\n            name: 'Nobuyuki Kaji',\r\n            numPatents: 16,\r\n            x: 41.822376082161696,\r\n            y: 52.514246752854255\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7205716-5',\r\n            name: 'Norihito Sone',\r\n            numPatents: 19,\r\n            x: 269.115065567314,\r\n            y: 70.01224836249358\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5358514-3',\r\n            name: 'Paul M. Meadows',\r\n            numPatents: 70,\r\n            x: -171.2697553163847,\r\n            y: 256.54794390887173\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6558351-3',\r\n            name: 'Paul V. Goode',\r\n            numPatents: 154,\r\n            x: -230.16114196390936,\r\n            y: -13.410314845001913\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6711565-1',\r\n            name: 'Pavitra Subramaniam',\r\n            numPatents: 20,\r\n            x: -6.372748347947338,\r\n            y: -297.9670264909068\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: 'D423761-3',\r\n            name: 'Peter Hong',\r\n            numPatents: 25,\r\n            x: -207.02913444458756,\r\n            y: 113.2044477207746\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6152987-2',\r\n            name: 'Peter Mardilovich',\r\n            numPatents: 110,\r\n            x: -113.70541462763414,\r\n            y: -71.63866878448928\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5873096-1',\r\n            name: 'Peter S. Lim',\r\n            numPatents: 19,\r\n            x: -41.4971575994779,\r\n            y: -229.8634738486308\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6732111-4',\r\n            name: 'Peter Siam Sy Lim III',\r\n            numPatents: 1,\r\n            x: -119.68776087181291,\r\n            y: -264.7441153149242\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6850895-3',\r\n            name: 'Peter Siam Sy Lim, III',\r\n            numPatents: 3,\r\n            x: -137.51327861868992,\r\n            y: -253.05015263416013\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7159750-4',\r\n            name: 'Philip Roy',\r\n            numPatents: 45,\r\n            x: -55.915331837334584,\r\n            y: 265.4527399859059\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6103033-7',\r\n            name: 'Phillip John Plante',\r\n            numPatents: 76,\r\n            x: -89.56172634273938,\r\n            y: 128.49359954020937\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5978829-1',\r\n            name: 'Pi-Yu Chung',\r\n            numPatents: 15,\r\n            x: 79.03330309768333,\r\n            y: -166.89620301402695\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6092083-2',\r\n            name: 'Prashant Chatterjee',\r\n            numPatents: 12,\r\n            x: -127.98166248978045,\r\n            y: -226.09590322983067\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7340411-1',\r\n            name: 'Rachael L. Cook',\r\n            numPatents: 1,\r\n            x: 145.5816434953685,\r\n            y: -185.9115227848251\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4872603-1',\r\n            name: 'Ralph Stearns',\r\n            numPatents: 82,\r\n            x: -17.638261139740077,\r\n            y: 311.87440096016235\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6836540-6',\r\n            name: 'Randy Hoffman',\r\n            numPatents: 66,\r\n            x: -96.67915062271523,\r\n            y: -18.863267642338357\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4798594-1',\r\n            name: 'Richard A. Hillstead',\r\n            numPatents: 56,\r\n            x: 220.9404304325887,\r\n            y: 155.9212493217171\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5097122-2',\r\n            name: 'Richard E. Purvis',\r\n            numPatents: 22,\r\n            x: -231.6221173485312,\r\n            y: 58.532788593406465\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6268803-3',\r\n            name: 'Richard Gorman',\r\n            numPatents: 10,\r\n            x: 76.71667439228202,\r\n            y: -247.40756847543366\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5271543-1',\r\n            name: 'Richard L. Grant',\r\n            numPatents: 22,\r\n            x: 108.37790261638156,\r\n            y: -109.53429774011205\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6092083-1',\r\n            name: 'Robert A. Brodersen',\r\n            numPatents: 21,\r\n            x: -116.78677329380332,\r\n            y: -211.74312172754898\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5873096-2',\r\n            name: 'Robert Broderson',\r\n            numPatents: 3,\r\n            x: 32.470564362710334,\r\n            y: -212.3565037616904\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5963953-1',\r\n            name: 'Robert Cram',\r\n            numPatents: 3,\r\n            x: 39.731656228036044,\r\n            y: -159.70117419662853\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4362387-1',\r\n            name: 'Roy Clark',\r\n            numPatents: 23,\r\n            x: -143.38065467805583,\r\n            y: -83.18646932332894\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5417770-8',\r\n            name: 'Ryo Hayashi',\r\n            numPatents: 71,\r\n            x: 109.56900270181322,\r\n            y: 94.2690776193339\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6081875-2',\r\n            name: 'Sanjoy Chatterjee',\r\n            numPatents: 2,\r\n            x: -168.55351719373274,\r\n            y: -55.00391327710072\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5416255-1',\r\n            name: 'Scott A. Bergemann',\r\n            numPatents: 106,\r\n            x: 236.9843658437831,\r\n            y: -154.5385328936314\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6724399-2',\r\n            name: 'Shankar S. Nathan',\r\n            numPatents: 1,\r\n            x: 8.017651326713803,\r\n            y: -132.67439205632664\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6804330-1',\r\n            name: 'Shannon Jones',\r\n            numPatents: 5,\r\n            x: 71.13206981844631,\r\n            y: -258.49934239941376\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6887736-4',\r\n            name: 'Shanthi Ganesan',\r\n            numPatents: 4,\r\n            x: -36.994882107564074,\r\n            y: 176.4435210395316\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6183589-1',\r\n            name: 'Shin Kim',\r\n            numPatents: 47,\r\n            x: -287.672664666798,\r\n            y: 45.812611641390674\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6654032-4',\r\n            name: 'Songxiang Wei',\r\n            numPatents: 7,\r\n            x: 132.3199171044082,\r\n            y: 86.33369201811875\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6783524-1',\r\n            name: 'Stephen C. Anderson',\r\n            numPatents: 1,\r\n            x: 62.6200720139505,\r\n            y: 302.49618857083027\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5774357-1',\r\n            name: 'Steven M. Hoffberg',\r\n            numPatents: 106,\r\n            x: -298.14981578939944,\r\n            y: 88.5680351045039\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5594169-2',\r\n            name: 'Steven P. Hotelling',\r\n            numPatents: 306,\r\n            x: 178.31356224420756,\r\n            y: -255.43042507480578\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6526335-2',\r\n            name: 'Susan M. Treyz',\r\n            numPatents: 15,\r\n            x: -279.2338471304183,\r\n            y: 139.99257336727945\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6639246-1',\r\n            name: 'Tatsuya Honda',\r\n            numPatents: 109,\r\n            x: 250.0602077201684,\r\n            y: 66.33401322268637\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5345639-6',\r\n            name: 'Tatsuya Iwasaki',\r\n            numPatents: 116,\r\n            x: 86.3336134471773,\r\n            y: 157.82593462060743\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6324568-1',\r\n            name: 'Thanh Diec',\r\n            numPatents: 3,\r\n            x: -78.03147469125184,\r\n            y: -272.5886606861718\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5715450-2',\r\n            name: 'Thomas M. Rothwein',\r\n            numPatents: 13,\r\n            x: -19.165101013241493,\r\n            y: -208.1804640840619\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: 'RE39841-4',\r\n            name: 'Todd Phillip Omaits',\r\n            numPatents: 7,\r\n            x: 129.99306854625007,\r\n            y: -22.049901615038408\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6850949-3',\r\n            name: 'Tom Abshire',\r\n            numPatents: 1,\r\n            x: 140.26566902715228,\r\n            y: -153.3917294843958\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '7061014-6',\r\n            name: 'Toshio Kamiya',\r\n            numPatents: 25,\r\n            x: 9.126271276254377,\r\n            y: 101.82298630556326\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6718361-1',\r\n            name: 'Vijay R. Basani',\r\n            numPatents: 9,\r\n            x: -201.38227173205027,\r\n            y: 208.74327049926328\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6718361-5',\r\n            name: 'Vitaly S. Revsin',\r\n            numPatents: 13,\r\n            x: -198.70473078024983,\r\n            y: 152.4052211665943\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6978921-3',\r\n            name: 'William B. Weisenburgh, II',\r\n            numPatents: 152,\r\n            x: 248.24393906293733,\r\n            y: -90.29342524369324\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5257971-2',\r\n            name: 'William P. Van Antwerp',\r\n            numPatents: 69,\r\n            x: -243.520991916779,\r\n            y: 23.417679977911327\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '6829655-1',\r\n            name: 'Xiaofei Huang',\r\n            numPatents: 5,\r\n            x: 89.9887416103856,\r\n            y: -187.79413998163483\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5283452-1',\r\n            name: 'Yi-Chi Shih',\r\n            numPatents: 33,\r\n            x: -323.71359641871163,\r\n            y: 23.908936586494086\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5901896-1',\r\n            name: 'Yoram Gal',\r\n            numPatents: 76,\r\n            x: -107.23225510620489,\r\n            y: 124.73541739026112\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '4573472-1',\r\n            name: 'Yoshihiro Ito',\r\n            numPatents: 189,\r\n            x: 118.20250938383892,\r\n            y: 287.9615326434283\r\n        },\r\n        {\r\n            type: 'inventor',\r\n            id: '5855957-1',\r\n            name: 'Zheng Yuan',\r\n            numPatents: 58,\r\n            x: 138.0920695217319,\r\n            y: 124.0644011797693\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_Z59aUBGtZ9P5QzdFiKmZ',\r\n            name: 'Ablaise Limited',\r\n            numPatents: 2,\r\n            x: -190.4821130010742,\r\n            y: -236.53619698539487\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_4zO2Bc08x56XjDq5TeBp',\r\n            name: 'Accenture LLP',\r\n            numPatents: 210,\r\n            x: 172.86602300833957,\r\n            y: 253.70330815416585\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_bwq83jbccKqF4jJrPcaR',\r\n            name: 'Advanced Bionics AG',\r\n            numPatents: 633,\r\n            x: -176.91468472981555,\r\n            y: 233.6338835259619\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_IDUbS09ZR0JhJ8jFEptT',\r\n            name: 'Apple Inc.',\r\n            numPatents: 21023,\r\n            x: 151.68246641578867,\r\n            y: -222.1248748814489\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_EhYFPIJEmYQYRoYvsnpy',\r\n            name: 'Canon Kabushiki Kaisha',\r\n            numPatents: 74596,\r\n            x: 49.48223920573296,\r\n            y: 134.09228873115592\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_Imeg9W6P1TE6I2QutS4y',\r\n            name: 'Casio Computer Co., Ltd.',\r\n            numPatents: 4521,\r\n            x: -179.8175934120515,\r\n            y: -142.71828852921044\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_8csMgtgnN0mREZpNP1Ji',\r\n            name: 'Cerebral Vascular Applications, Inc.',\r\n            numPatents: 4,\r\n            x: 268.8004541444387,\r\n            y: 164.52369478315683\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_0eTr3XIBjAKpXkC6823r',\r\n            name: 'Cermet, Inc.',\r\n            numPatents: 7,\r\n            x: -48.40372768955156,\r\n            y: 205.44025883826066\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_107WKNPbvDDKrZBlmw8U',\r\n            name: 'Contigo Software, Inc.',\r\n            numPatents: 2,\r\n            x: 299.3174359095953,\r\n            y: 48.03492469800833\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_ppElkEtQvFtG6A4754UI',\r\n            name: 'Eastman Kodak Company',\r\n            numPatents: 21539,\r\n            x: 211.37525941352786,\r\n            y: 217.58287786532108\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_0jPWM7YqhtXm0lm3fm1Y',\r\n            name: 'EMC Corporation',\r\n            numPatents: 4976,\r\n            x: -189.70156274838973,\r\n            y: -110.01559890437628\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_Wh2cnOIzKlhzjuqVmOqY',\r\n            name: 'Enecto AB',\r\n            numPatents: 1,\r\n            x: 243.6765412246258,\r\n            y: -131.2090311866099\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_Xu6gXSsltDBZTAhMFBWD',\r\n            name: 'Ethicon Endo-Surger, Inc.',\r\n            numPatents: 3,\r\n            x: 224.71243580316477,\r\n            y: 39.60984252547865\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_NfKBB9TWF4As8TSasJ5n',\r\n            name: 'Ethicon Endo-Surgery, Inc.',\r\n            numPatents: 2194,\r\n            x: 171.0743702247664,\r\n            y: -55.03680709894609\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_vS6rcKyc2qN3rFdX0P2K',\r\n            name: 'Hewlett-Packard Development Company, L.P.',\r\n            numPatents: 35118,\r\n            x: -90.3103968526694,\r\n            y: -50.0521628929454\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'per_tX2e2yVLgyNgobEpzWKT',\r\n            name: 'Hideo Ohno',\r\n            numPatents: 4,\r\n            x: -39.53612842704436,\r\n            y: -20.270273354977252\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_MKvbnCcyPudXexUvsSwF',\r\n            name: \"Holden's Foundation Seeds, Inc.\",\r\n            numPatents: 83,\r\n            x: 240.0999059851908,\r\n            y: -206.02637614806125\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_fA0azqoBGEzoPoy85Jyv',\r\n            name: 'INTUITIVE SURGICAL OPERATIONS, INC.',\r\n            numPatents: 1202,\r\n            x: 15.378862865447624,\r\n            y: 290.2178222875223\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_DttZMvkyvW3fV6oCUMTF',\r\n            name: 'Japan Science and Technology Agency',\r\n            numPatents: 1157,\r\n            x: 13.173450731061086,\r\n            y: 56.48614099577767\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_c5vyBzK7iikkU4DjQFHT',\r\n            name: 'Japan Science and Technology Corporation',\r\n            numPatents: 418,\r\n            x: 63.56317058275,\r\n            y: 6.273673519090753\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_FvgvGFe8JZ0iYlZ80weF',\r\n            name: 'Koninklijke Philips Electronics N.V.',\r\n            numPatents: 17138,\r\n            x: -123.24179123790191,\r\n            y: 270.99746548441016\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_XcqCjtT8pi8Mk3UjQlDt',\r\n            name: 'LG Electronics Inc.',\r\n            numPatents: 32725,\r\n            x: -277.3460229984558,\r\n            y: 7.13369822254301\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'per_DIjUTM7lHhDsAz2u8jiO',\r\n            name: 'Masashi Kawasaki',\r\n            numPatents: 3,\r\n            x: 19.895436596662908,\r\n            y: -10.717178250900918\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_GVMlLVbwCDSiqP9Og8Tn',\r\n            name: 'Medtronic MiniMed, Inc.',\r\n            numPatents: 800,\r\n            x: -183.74023419057417,\r\n            y: 37.687218769839085\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_Qw8EsrN0M52nVQUM6vsV',\r\n            name: 'Monsanto Technology LLC',\r\n            numPatents: 8689,\r\n            x: 19.763901488352673,\r\n            y: 196.62236862589774\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_j5U5IEa1FIbgtr7iNsQM',\r\n            name: 'Murata Manufacturing Co., Ltd.',\r\n            numPatents: 7342,\r\n            x: 87.64878197108817,\r\n            y: 291.1023195872352\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_1p4FWEoItjyKbwTpCJol',\r\n            name: 'Network Appliance, Inc.',\r\n            numPatents: 530,\r\n            x: -222.2920372118052,\r\n            y: 149.08372155272062\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_ATOWHd4GGaoh14zutXq7',\r\n            name: 'Power Medical Interventions, Inc.',\r\n            numPatents: 30,\r\n            x: 108.88110399749706,\r\n            y: 186.8533878262659\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_k8V7c5gnmC7SVmup5Vu7',\r\n            name: 'Raindance Communications, Inc.',\r\n            numPatents: 3,\r\n            x: 65.15717694264417,\r\n            y: 83.41943637820401\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_242hJegwfQCeP9hsfwpW',\r\n            name: 'Right Now Technologies, Inc.',\r\n            numPatents: 2,\r\n            x: 186.81965281602268,\r\n            y: -183.4017025145853\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_6r9t7ZA6YT031Od4kMPg',\r\n            name: 'Rightnow Technologies, Inc.',\r\n            numPatents: 10,\r\n            x: -231.73615880122236,\r\n            y: -74.09916970934252\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_2IF97zVymSuraSnUAXmq',\r\n            name: 'Sanyo Electric Co., Ltd.',\r\n            numPatents: 8383,\r\n            x: -283.9028253608946,\r\n            y: -127.87253381969171\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_plZbLxiysESbaI9pOeym',\r\n            name: 'SEMICONDUCTOR ENERGY LABORATORY CO., LTD.',\r\n            numPatents: 13885,\r\n            x: 256.2283987637905,\r\n            y: 124.46141696066522\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_CMWcoCJWPOfisLWrKvyd',\r\n            name: 'Sharp Kabushiki Kaisha',\r\n            numPatents: 22540,\r\n            x: 4.095560406482671,\r\n            y: -32.13618482579938\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_83NNgJrP5lkIN876kNeG',\r\n            name: 'Siebel Systems, Inc.',\r\n            numPatents: 298,\r\n            x: -33.91994752314842,\r\n            y: -212.5994288988811\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_J8VnAzFqEjWgxq4ev71z',\r\n            name: 'Starion Instruments Corporation',\r\n            numPatents: 20,\r\n            x: 178.98416654116346,\r\n            y: 169.54821211190276\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_m2tNPJkA2g1AWOc7uzS1',\r\n            name: 'TheraSense, Inc.',\r\n            numPatents: 53,\r\n            x: -125.9145998460851,\r\n            y: 132.41739054516117\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_JjrM6UmeOY0Q5MmoNiP8',\r\n            name: 'TOKYO INSTITUTE OF TECHNOLOGY',\r\n            numPatents: 395,\r\n            x: 18.61413008116646,\r\n            y: 165.21253699554214\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_ewVsCutpRzD9pT07kBoE',\r\n            name: 'Tyco Healtcare Group LP',\r\n            numPatents: 5,\r\n            x: -67.25430526742107,\r\n            y: 308.6149282041579\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_5wNNrJ4zFQ5KQ8OWnzRC',\r\n            name: 'United States Surtical Corporation',\r\n            numPatents: 1,\r\n            x: 282.781009224431,\r\n            y: -52.981590115087144\r\n        },\r\n        {\r\n            type: 'assignee',\r\n            id: 'org_3vI2Z5kC1SaSlbUBoOBT',\r\n            name: 'WebEx Communications, Inc.',\r\n            numPatents: 22,\r\n            x: 187.36763951128714,\r\n            y: 101.20849847080181\r\n        }\r\n    ],\r\n    links: [\r\n        { source: '6516227', target: '5358514-3' },\r\n        { source: '6516227', target: '5755737-3' },\r\n        { source: '6516227', target: '5948006-1' },\r\n        { source: '6516227', target: '6516227-4' },\r\n        { source: '6516227', target: 'org_bwq83jbccKqF4jJrPcaR' },\r\n        { source: '6535909', target: '6535909-1' },\r\n        { source: '6535909', target: 'org_107WKNPbvDDKrZBlmw8U' },\r\n        { source: '6549908', target: '6393605-1' },\r\n        { source: '6549908', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6553563', target: '5715450-1' },\r\n        { source: '6553563', target: '5715450-2' },\r\n        { source: '6553563', target: '6553563-3' },\r\n        { source: '6553563', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6558320', target: '4809697-1' },\r\n        { source: '6558320', target: '4863425-2' },\r\n        { source: '6558320', target: '5097122-2' },\r\n        { source: '6558320', target: 'org_GVMlLVbwCDSiqP9Og8Tn' },\r\n        { source: '6558351', target: '5097122-2' },\r\n        { source: '6558351', target: '5237178-2' },\r\n        { source: '6558351', target: '5257971-2' },\r\n        { source: '6558351', target: '6424847-3' },\r\n        { source: '6558351', target: '6558351-1' },\r\n        { source: '6558351', target: '6558351-2' },\r\n        { source: '6558351', target: '6558351-3' },\r\n        { source: '6558351', target: '6558351-8' },\r\n        { source: '6558351', target: 'org_GVMlLVbwCDSiqP9Og8Tn' },\r\n        { source: '6560461', target: '5918159-1' },\r\n        { source: '6560461', target: '5918159-2' },\r\n        { source: '6563174', target: '4253061-3' },\r\n        { source: '6563174', target: '4902671-3' },\r\n        { source: '6563174', target: '4997262-1' },\r\n        { source: '6563174', target: '5925224-1' },\r\n        { source: '6563174', target: 'org_CMWcoCJWPOfisLWrKvyd' },\r\n        { source: '6563174', target: 'per_DIjUTM7lHhDsAz2u8jiO' },\r\n        { source: '6563174', target: 'per_tX2e2yVLgyNgobEpzWKT' },\r\n        { source: '6565509', target: '4082602-2' },\r\n        { source: '6565509', target: '5041086-4' },\r\n        { source: '6565509', target: '5306623-3' },\r\n        { source: '6565509', target: '5533238-1' },\r\n        { source: '6565509', target: '5534132-1' },\r\n        { source: '6565509', target: '5616532-3' },\r\n        { source: '6565509', target: '5722997-2' },\r\n        { source: '6565509', target: '5901896-1' },\r\n        { source: '6565509', target: '6103033-7' },\r\n        { source: '6565509', target: '6175752-9' },\r\n        { source: '6565509', target: 'org_m2tNPJkA2g1AWOc7uzS1' },\r\n        { source: '6571282', target: '6081518-1' },\r\n        { source: '6571282', target: 'org_4zO2Bc08x56XjDq5TeBp' },\r\n        { source: '6574635', target: '5715450-1' },\r\n        { source: '6574635', target: '5715450-2' },\r\n        { source: '6574635', target: '5963953-3' },\r\n        { source: '6574635', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6577726', target: '6577726-1' },\r\n        { source: '6577726', target: '6577726-2' },\r\n        { source: '6577726', target: '6577726-3' },\r\n        { source: '6577726', target: '6577726-4' },\r\n        { source: '6577726', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6587835', target: '6433921-2' },\r\n        { source: '6587835', target: '6526335-2' },\r\n        { source: '6601087', target: '5261037-2' },\r\n        { source: '6601087', target: '6601087-2' },\r\n        { source: '6601087', target: 'org_3vI2Z5kC1SaSlbUBoOBT' },\r\n        { source: '6602252', target: '4890611-3' },\r\n        { source: '6602252', target: 'org_J8VnAzFqEjWgxq4ev71z' },\r\n        { source: '6604117', target: '5873096-1' },\r\n        { source: '6604117', target: '5873096-2' },\r\n        { source: '6604117', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6604128', target: '6324568-1' },\r\n        { source: '6604128', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6606744', target: '6606744-1' },\r\n        { source: '6606744', target: 'org_4zO2Bc08x56XjDq5TeBp' },\r\n        { source: '6609150', target: '5963953-1' },\r\n        { source: '6609150', target: '6336137-1' },\r\n        { source: '6609150', target: '6336137-3' },\r\n        { source: '6609150', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6621834', target: '5944791-1' },\r\n        { source: '6621834', target: '6621834-2' },\r\n        { source: '6621834', target: 'org_k8V7c5gnmC7SVmup5Vu7' },\r\n        { source: '6641533', target: '4809697-1' },\r\n        { source: '6641533', target: '4863425-2' },\r\n        { source: '6641533', target: '5097122-2' },\r\n        { source: '6641533', target: 'org_GVMlLVbwCDSiqP9Og8Tn' },\r\n        { source: '6644532', target: '4127227-1' },\r\n        { source: '6644532', target: '4283024-1' },\r\n        { source: '6644532', target: '5176502-3' },\r\n        { source: '6644532', target: 'D263987-1' },\r\n        { source: '6644532', target: 'D304234-2' },\r\n        { source: '6644532', target: 'RE28932-2' },\r\n        { source: '6644532', target: 'org_5wNNrJ4zFQ5KQ8OWnzRC' },\r\n        { source: '6654032', target: '5261037-2' },\r\n        { source: '6654032', target: '5855957-1' },\r\n        { source: '6654032', target: '6601087-2' },\r\n        { source: '6654032', target: '6654032-4' },\r\n        { source: '6654032', target: 'org_3vI2Z5kC1SaSlbUBoOBT' },\r\n        { source: '6656193', target: '4892244-4' },\r\n        { source: '6656193', target: '5271543-1' },\r\n        { source: '6656193', target: '5329655-1' },\r\n        { source: '6656193', target: '5409498-4' },\r\n        { source: '6656193', target: '5707369-2' },\r\n        { source: '6656193', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '6665648', target: '6665648-1' },\r\n        { source: '6665648', target: '6665648-2' },\r\n        { source: '6665648', target: '6665648-3' },\r\n        { source: '6665648', target: '6665648-4' },\r\n        { source: '6665648', target: '6665648-5' },\r\n        { source: '6665648', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6665655', target: '6434550-1' },\r\n        { source: '6665655', target: '6665655-2' },\r\n        { source: '6665655', target: 'org_6r9t7ZA6YT031Od4kMPg' },\r\n        { source: '6684438', target: '5873096-1' },\r\n        { source: '6684438', target: '6092083-1' },\r\n        { source: '6684438', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6690387', target: '6281898-2' },\r\n        { source: '6690387', target: '6690387-1' },\r\n        { source: '6690387', target: 'org_FvgvGFe8JZ0iYlZ80weF' },\r\n        { source: '6693232', target: '5416255-1' },\r\n        { source: '6693232', target: 'org_MKvbnCcyPudXexUvsSwF' },\r\n        { source: '6698643', target: '6264087-1' },\r\n        { source: '6698643', target: 'org_ATOWHd4GGaoh14zutXq7' },\r\n        { source: '6711565', target: '6711565-1' },\r\n        { source: '6711565', target: '6711565-2' },\r\n        { source: '6711565', target: '6711565-3' },\r\n        { source: '6711565', target: '6711565-4' },\r\n        { source: '6711565', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6716233', target: '6264087-1' },\r\n        { source: '6716233', target: 'org_ATOWHd4GGaoh14zutXq7' },\r\n        { source: '6718361', target: '6223205-2' },\r\n        { source: '6718361', target: '6370584-1' },\r\n        { source: '6718361', target: '6718361-1' },\r\n        { source: '6718361', target: '6718361-2' },\r\n        { source: '6718361', target: '6718361-3' },\r\n        { source: '6718361', target: '6718361-4' },\r\n        { source: '6718361', target: '6718361-5' },\r\n        { source: '6718361', target: '6718361-8' },\r\n        { source: '6718361', target: 'org_1p4FWEoItjyKbwTpCJol' },\r\n        { source: '6724399', target: '6724399-1' },\r\n        { source: '6724399', target: '6724399-2' },\r\n        { source: '6724399', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6727522', target: '4253061-3' },\r\n        { source: '6727522', target: '4902671-3' },\r\n        { source: '6727522', target: 'org_c5vyBzK7iikkU4DjQFHT' },\r\n        { source: '6728702', target: '6577726-2' },\r\n        { source: '6728702', target: '6711565-1' },\r\n        { source: '6728702', target: '6711565-2' },\r\n        { source: '6728702', target: '6711565-3' },\r\n        { source: '6728702', target: '6711565-4' },\r\n        { source: '6728702', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6728960', target: '6393605-1' },\r\n        { source: '6728960', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6732095', target: '5243622-2' },\r\n        { source: '6732095', target: '6732095-1' },\r\n        { source: '6732095', target: '6732095-2' },\r\n        { source: '6732095', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6732100', target: '5715450-2' },\r\n        { source: '6732100', target: '6577726-2' },\r\n        { source: '6732100', target: '6577726-4' },\r\n        { source: '6732100', target: '6665648-1' },\r\n        { source: '6732100', target: '6732100-4' },\r\n        { source: '6732100', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6732111', target: '4951278-2' },\r\n        { source: '6732111', target: '6092083-1' },\r\n        { source: '6732111', target: '6092083-2' },\r\n        { source: '6732111', target: '6732111-4' },\r\n        { source: '6732111', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6754681', target: '5873096-1' },\r\n        { source: '6754681', target: '6092083-1' },\r\n        { source: '6754681', target: '6092083-2' },\r\n        { source: '6754681', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6763351', target: '6711565-1' },\r\n        { source: '6763351', target: '6711565-2' },\r\n        { source: '6763351', target: '6711565-3' },\r\n        { source: '6763351', target: '6711565-4' },\r\n        { source: '6763351', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6763501', target: '5261037-2' },\r\n        { source: '6763501', target: '5855957-1' },\r\n        { source: '6763501', target: '6601087-2' },\r\n        { source: '6763501', target: '6654032-4' },\r\n        { source: '6763501', target: 'org_3vI2Z5kC1SaSlbUBoOBT' },\r\n        { source: '6768904', target: '6183589-1' },\r\n        { source: '6768904', target: 'org_XcqCjtT8pi8Mk3UjQlDt' },\r\n        { source: '6782383', target: '6711565-1' },\r\n        { source: '6782383', target: '6711565-2' },\r\n        { source: '6782383', target: '6711565-3' },\r\n        { source: '6782383', target: '6711565-4' },\r\n        { source: '6782383', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6783524', target: '5859916-3' },\r\n        { source: '6783524', target: '6783524-1' },\r\n        { source: '6783524', target: 'org_fA0azqoBGEzoPoy85Jyv' },\r\n        { source: '6786382', target: '6530932-2' },\r\n        { source: '6786382', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '6804330', target: '5715450-1' },\r\n        { source: '6804330', target: '6268803-3' },\r\n        { source: '6804330', target: '6804330-1' },\r\n        { source: '6804330', target: '6804330-4' },\r\n        { source: '6804330', target: '6804330-5' },\r\n        { source: '6804330', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6809653', target: '4082097-1' },\r\n        { source: '6809653', target: '4561444-1' },\r\n        { source: '6809653', target: '4809697-1' },\r\n        { source: '6809653', target: '4863425-2' },\r\n        { source: '6809653', target: '5097122-2' },\r\n        { source: '6809653', target: '5237178-2' },\r\n        { source: '6809653', target: '5382232-1' },\r\n        { source: '6809653', target: '6809653-9' },\r\n        { source: '6809653', target: 'D423761-3' },\r\n        { source: '6809653', target: 'org_GVMlLVbwCDSiqP9Og8Tn' },\r\n        { source: '6826565', target: '6295530-1' },\r\n        { source: '6826565', target: '6295530-2' },\r\n        { source: '6826565', target: 'org_Z59aUBGtZ9P5QzdFiKmZ' },\r\n        { source: '6826582', target: '4362387-1' },\r\n        { source: '6826582', target: '6081875-2' },\r\n        { source: '6826582', target: '6826582-2' },\r\n        { source: '6826582', target: 'org_0jPWM7YqhtXm0lm3fm1Y' },\r\n        { source: '6826745', target: '6233617-2' },\r\n        { source: '6826745', target: '6577726-2' },\r\n        { source: '6826745', target: '6826745-3' },\r\n        { source: '6826745', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6829655', target: '5978829-1' },\r\n        { source: '6829655', target: '6004276-13' },\r\n        { source: '6829655', target: '6829655-1' },\r\n        { source: '6829655', target: '6829655-2' },\r\n        { source: '6829655', target: '6829655-3' },\r\n        { source: '6829655', target: '6829655-6' },\r\n        { source: '6829655', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6830174', target: '4798594-1' },\r\n        { source: '6830174', target: '5465895-1' },\r\n        { source: '6830174', target: 'org_8csMgtgnN0mREZpNP1Ji' },\r\n        { source: '6842748', target: '6434550-1' },\r\n        { source: '6842748', target: '6665655-2' },\r\n        { source: '6842748', target: 'org_6r9t7ZA6YT031Od4kMPg' },\r\n        { source: '6843403', target: '6264087-1' },\r\n        { source: '6843403', target: 'org_ATOWHd4GGaoh14zutXq7' },\r\n        { source: '6850252', target: '5774357-1' },\r\n        { source: '6850895', target: '6092083-1' },\r\n        { source: '6850895', target: '6092083-2' },\r\n        { source: '6850895', target: '6577726-2' },\r\n        { source: '6850895', target: '6850895-3' },\r\n        { source: '6850895', target: '6850895-5' },\r\n        { source: '6850895', target: 'org_83NNgJrP5lkIN876kNeG' },\r\n        { source: '6850949', target: '6850949-1' },\r\n        { source: '6850949', target: '6850949-2' },\r\n        { source: '6850949', target: '6850949-3' },\r\n        { source: '6850949', target: 'org_242hJegwfQCeP9hsfwpW' },\r\n        { source: '6852915', target: '5276262-2' },\r\n        { source: '6852915', target: 'org_MKvbnCcyPudXexUvsSwF' },\r\n        { source: '6905057', target: '5897563-4' },\r\n        { source: '6905057', target: '6905057-2' },\r\n        { source: '6905057', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '6959852', target: '5632432-4' },\r\n        { source: '6959852', target: '6905057-2' },\r\n        { source: '6959852', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '6964363', target: '5409498-4' },\r\n        { source: '6964363', target: '6964363-2' },\r\n        { source: '6964363', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '6978921', target: '5632432-4' },\r\n        { source: '6978921', target: '6905057-2' },\r\n        { source: '6978921', target: '6978921-3' },\r\n        { source: '6978921', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '6981628', target: '5409498-4' },\r\n        { source: '6981628', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '7000818', target: '5632432-4' },\r\n        { source: '7000818', target: '6905057-2' },\r\n        { source: '7000818', target: '7000818-3' },\r\n        { source: '7000818', target: 'org_Xu6gXSsltDBZTAhMFBWD' },\r\n        { source: '7025743', target: '4082097-1' },\r\n        { source: '7025743', target: '4561444-1' },\r\n        { source: '7025743', target: '4809697-1' },\r\n        { source: '7025743', target: '5176644-1' },\r\n        { source: '7025743', target: '5382232-1' },\r\n        { source: '7025743', target: '6551276-10' },\r\n        { source: '7025743', target: '6551276-11' },\r\n        { source: '7025743', target: '6551276-12' },\r\n        { source: '7025743', target: '6551276-3' },\r\n        { source: '7025743', target: '6551276-4' },\r\n        { source: '7025743', target: '6551276-8' },\r\n        { source: '7025743', target: '6551276-9' },\r\n        { source: '7025743', target: 'org_GVMlLVbwCDSiqP9Og8Tn' },\r\n        { source: '7049190', target: '6080998-3' },\r\n        { source: '7049190', target: '6914182-1' },\r\n        { source: '7049190', target: 'org_2IF97zVymSuraSnUAXmq' },\r\n        { source: '7055731', target: '5632432-4' },\r\n        { source: '7055731', target: '6905057-2' },\r\n        { source: '7055731', target: '6978921-3' },\r\n        { source: '7055731', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '7061014', target: '4486720-1' },\r\n        { source: '7061014', target: '4703019-2' },\r\n        { source: '7061014', target: '5272069-6' },\r\n        { source: '7061014', target: '5622653-1' },\r\n        { source: '7061014', target: '7061014-4' },\r\n        { source: '7061014', target: '7061014-6' },\r\n        { source: '7061014', target: 'org_DttZMvkyvW3fV6oCUMTF' },\r\n        { source: '7064346', target: '4253061-3' },\r\n        { source: '7064346', target: '4902671-3' },\r\n        { source: '7064346', target: 'org_DttZMvkyvW3fV6oCUMTF' },\r\n        { source: '7105868', target: '5863326-1' },\r\n        { source: '7105868', target: '6887736-4' },\r\n        { source: '7105868', target: 'org_0eTr3XIBjAKpXkC6823r' },\r\n        { source: '7111769', target: '5409498-4' },\r\n        { source: '7111769', target: '5897563-4' },\r\n        { source: '7111769', target: '6530932-2' },\r\n        { source: '7111769', target: '6905057-2' },\r\n        { source: '7111769', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '7147138', target: '6905057-2' },\r\n        { source: '7147138', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '7159750', target: '4872603-1' },\r\n        { source: '7159750', target: '5713911-1' },\r\n        { source: '7159750', target: '5713911-2' },\r\n        { source: '7159750', target: '7159750-4' },\r\n        { source: '7159750', target: '7159750-5' },\r\n        { source: '7159750', target: 'org_ewVsCutpRzD9pT07kBoE' },\r\n        { source: '7211825', target: '5081422-1' },\r\n        { source: '7211825', target: '5283452-1' },\r\n        { source: '7211825', target: '5703357-3' },\r\n        { source: '7211825', target: '6593834-2' },\r\n        { source: '7246734', target: '6905057-2' },\r\n        { source: '7246734', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '7282782', target: '6144679-1' },\r\n        { source: '7282782', target: '6152987-2' },\r\n        { source: '7282782', target: '6836540-6' },\r\n        { source: '7282782', target: 'org_vS6rcKyc2qN3rFdX0P2K' },\r\n        { source: '7297977', target: '6144679-1' },\r\n        { source: '7297977', target: '6152987-2' },\r\n        { source: '7297977', target: '6836540-6' },\r\n        { source: '7297977', target: 'org_vS6rcKyc2qN3rFdX0P2K' },\r\n        { source: '7323356', target: '4486720-1' },\r\n        { source: '7323356', target: '4703019-2' },\r\n        { source: '7323356', target: '5272069-6' },\r\n        { source: '7323356', target: '5622653-1' },\r\n        { source: '7323356', target: '7061014-4' },\r\n        { source: '7323356', target: '7323356-5' },\r\n        { source: '7323356', target: 'org_DttZMvkyvW3fV6oCUMTF' },\r\n        { source: '7340411', target: '7340411-1' },\r\n        { source: '7380695', target: '5409498-4' },\r\n        { source: '7380695', target: '5632432-4' },\r\n        { source: '7380695', target: '6905057-2' },\r\n        { source: '7380695', target: '7083075-3' },\r\n        { source: '7380695', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '7380696', target: '5632432-4' },\r\n        { source: '7380696', target: '6905057-2' },\r\n        { source: '7380696', target: '7083075-3' },\r\n        { source: '7380696', target: '7380696-3' },\r\n        { source: '7380696', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '7385224', target: '5041200-1' },\r\n        { source: '7385224', target: '5041200-4' },\r\n        { source: '7385224', target: '7385224-2' },\r\n        { source: '7385224', target: '7385224-3' },\r\n        { source: '7385224', target: 'org_Imeg9W6P1TE6I2QutS4y' },\r\n        { source: '7402506', target: '5512426-1' },\r\n        { source: '7402506', target: '6048110-3' },\r\n        { source: '7402506', target: '7402506-2' },\r\n        { source: '7402506', target: 'org_ppElkEtQvFtG6A4754UI' },\r\n        { source: '7404508', target: '4682596-2' },\r\n        { source: '7404508', target: '5117838-1' },\r\n        { source: '7404508', target: '5715675-2' },\r\n        { source: '7404508', target: '6912839-2' },\r\n        { source: '7404508', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '7411209', target: '5345639-6' },\r\n        { source: '7411209', target: '5417770-8' },\r\n        { source: '7411209', target: '7082832-4' },\r\n        { source: '7411209', target: 'org_EhYFPIJEmYQYRoYvsnpy' },\r\n        { source: '7453065', target: '4072236-1' },\r\n        { source: '7453065', target: '4356455-3' },\r\n        { source: '7453065', target: '4703019-2' },\r\n        { source: '7453065', target: '7061014-6' },\r\n        { source: '7453065', target: 'org_EhYFPIJEmYQYRoYvsnpy' },\r\n        { source: '7453065', target: 'org_JjrM6UmeOY0Q5MmoNiP8' },\r\n        { source: '7453087', target: '5345639-6' },\r\n        { source: '7453087', target: 'org_EhYFPIJEmYQYRoYvsnpy' },\r\n        { source: '7462862', target: '6144679-1' },\r\n        { source: '7462862', target: '6836540-6' },\r\n        { source: '7462862', target: 'org_vS6rcKyc2qN3rFdX0P2K' },\r\n        { source: '7464846', target: '4403687-2' },\r\n        { source: '7464846', target: '5897563-4' },\r\n        { source: '7464846', target: '6905057-2' },\r\n        { source: '7464846', target: '7083075-3' },\r\n        { source: '7464846', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '7468304', target: '6863363-1' },\r\n        { source: '7468304', target: '7468304-1' },\r\n        { source: '7468304', target: 'org_EhYFPIJEmYQYRoYvsnpy' },\r\n        { source: '7501293', target: '4224725-1' },\r\n        { source: '7501293', target: '4573472-1' },\r\n        { source: '7501293', target: 'org_j5U5IEa1FIbgtr7iNsQM' },\r\n        { source: '7506791', target: '4403687-2' },\r\n        { source: '7506791', target: '4972224-1' },\r\n        { source: '7506791', target: '6905057-2' },\r\n        { source: '7506791', target: 'RE39841-4' },\r\n        { source: '7506791', target: 'org_NfKBB9TWF4As8TSasJ5n' },\r\n        { source: '7620655', target: '5948789-1' },\r\n        { source: '7620655', target: '7620655-2' },\r\n        { source: '7620655', target: 'org_Wh2cnOIzKlhzjuqVmOqY' },\r\n        { source: '7632985', target: '7078503-3' },\r\n        { source: '7632985', target: '7608761-4' },\r\n        { source: '7632985', target: '7632985-3' },\r\n        { source: '7632985', target: '7632985-4' },\r\n        { source: '7632985', target: 'org_Qw8EsrN0M52nVQUM6vsV' },\r\n        { source: '7663607', target: '5594169-2' },\r\n        { source: '7663607', target: '6658577-1' },\r\n        { source: '7663607', target: '7154477-2' },\r\n        { source: '7663607', target: 'org_IDUbS09ZR0JhJ8jFEptT' },\r\n        { source: '7674650', target: '6639246-1' },\r\n        { source: '7674650', target: '6838397-3' },\r\n        { source: '7674650', target: '7205716-5' },\r\n        { source: '7674650', target: 'org_plZbLxiysESbaI9pOeym' },\r\n        { source: '7732819', target: '6639246-1' },\r\n        { source: '7732819', target: '6838397-3' },\r\n        { source: '7732819', target: '7205716-5' },\r\n        { source: '7732819', target: 'org_plZbLxiysESbaI9pOeym' },\r\n        { source: '8053184', target: '7078503-3' },\r\n        { source: '8053184', target: '7608761-4' },\r\n        { source: '8053184', target: '7632985-3' },\r\n        { source: '8053184', target: '7632985-4' },\r\n        { source: '8053184', target: 'org_Qw8EsrN0M52nVQUM6vsV' }\r\n    ]\r\n}\r\n","import * as interfaces from '../interfaces'\r\nimport NetV from '../index'\r\nimport { override } from '../utils/utils'\r\nimport { EMPTY_FUNCTION } from '../utils/const'\r\n\r\nexport default class Element {\r\n    public $_style: interfaces.NodeStyle | interfaces.LinkStyle = {}\r\n    public $_mousedownCallbackSet: Set<(e: any) => void> = new Set()\r\n    public $_mouseupCallbackSet: Set<(e: any) => void> = new Set()\r\n    public $_mouseoverCallbackSet: Set<(e: any) => void> = new Set()\r\n    public $_mouseoutCallbackSet: Set<(e: any) => void> = new Set()\r\n    public $_mousemoveCallbackSet: Set<(e: any) => void> = new Set()\r\n    public $_clickCallbackSet: Set<(e: any) => void> = new Set()\r\n\r\n    protected $_core: NetV\r\n    protected $_changeRenderAttribute: (element: Element, key: string) => void\r\n\r\n    protected $_attributes = {}\r\n\r\n    public constructor(core: NetV, data: interfaces.NodeData | interfaces.LinkData) {\r\n        const type = this.constructor.name.toLowerCase()\r\n        this.$_core = core\r\n        const defaultConfigs = this.$_core.$_configs\r\n\r\n        // override default style with user specified style in data\r\n        this.$_style = override(defaultConfigs[type].style, data.style)\r\n\r\n        const renderManager = this.$_core.$_renderer[`${type}Manager`]\r\n        this.$_changeRenderAttribute = renderManager.changeAttribute.bind(renderManager)\r\n\r\n        // generate style methods, e.g.: node.r(), link.strokeWidth()\r\n        Object.keys(this.$_style).forEach((key) => {\r\n            // generate style functions\r\n            this[key] = this.generateElementStyleGetterSetter(key)\r\n        })\r\n    }\r\n\r\n    /**\r\n     * @param {string} eventName\r\n     * @param {(e: any) => any} callback\r\n     * @memberof Element\r\n     */\r\n    public on(eventName: string, callback?: (e: any) => any) {\r\n        if (\r\n            eventName.slice(0, 4) !== 'drag' ||\r\n            (eventName.slice(0, 4) === 'drag' && this.constructor.name === 'Node') // only node can be dragged\r\n        ) {\r\n            const callbackSetName = `$_${eventName}CallbackSet`\r\n            this[callbackSetName]?.add(callback ? callback : EMPTY_FUNCTION)\r\n            if (this[callbackSetName]) {\r\n                this.$_core.$_interactionManager.increaseMouseEventCallbackCountBy(1)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @param {string} eventName\r\n     * @param {(e: any) => any} callback\r\n     * @memberof Element\r\n     */\r\n    public off(eventName: string, callback: (e: any) => any) {\r\n        if (\r\n            eventName.slice(0, 4) !== 'drag' ||\r\n            (eventName.slice(0, 4) === 'drag' && this.constructor.name === 'Node') // only node can be dragged\r\n        ) {\r\n            const callbackSetName = `$_${eventName}CallbackSet`\r\n            this[callbackSetName]?.delete(callback ? callback : EMPTY_FUNCTION)\r\n            if (this[callbackSetName]) {\r\n                this.$_core.$_interactionManager.decreaseMouseEventCallbackCountBy(1)\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get/set custom attributes\r\n     * @param key\r\n     * @param value\r\n     */\r\n    public attr(key: string, value?: any) {\r\n        if (arguments.length === 2) {\r\n            this.$_attributes[key] = value\r\n        } else if (arguments.length === 1) {\r\n            return this.$_attributes[key]\r\n        } else if (arguments.length === 0) {\r\n            return JSON.parse(JSON.stringify(this.$_attributes))\r\n        }\r\n    }\r\n\r\n    private generateElementStyleGetterSetter(key: string) {\r\n        return (value?: any) => {\r\n            if (value !== undefined) {\r\n                if (value === Object(value)) {\r\n                    // value is an object\r\n                    this.$_style[key] = override(this.$_style[key], value) // { ...this.$_style[key], ...value }\r\n                } else {\r\n                    this.$_style[key] = value\r\n                }\r\n                this.$_changeRenderAttribute(this, key)\r\n            }\r\n            return this.$_style[key]\r\n        }\r\n    }\r\n}\r\n","/**\r\n * @author Jiacheng Pan <jackieanxis@gmail.com>\r\n * @description Provide a Link class.\r\n * @dependences interfaces.ts, utils/is.ts\r\n */\r\n\r\nimport Node from './node'\r\nimport * as interfaces from '../interfaces'\r\nimport Element from './element'\r\n\r\nclass Link extends Element {\r\n    // style getter/setter\r\n    public shape: (value?: interfaces.LinkShape) => interfaces.LinkShape\r\n    public strokeWidth: (value?: number) => number\r\n    public strokeColor: (value?: interfaces.Color) => interfaces.Color\r\n\r\n    public $_source: Node\r\n    public $_target: Node\r\n\r\n    private $_elementReservedKeys = new Set(['source', 'target', 'style'])\r\n\r\n    public constructor(core, linkData: interfaces.LinkData) {\r\n        super(core, linkData)\r\n\r\n        // set attributes\r\n        for (const key in linkData) {\r\n            if (!this.$_elementReservedKeys.has(key)) {\r\n                this.$_attributes[key] = linkData[key]\r\n            }\r\n        }\r\n\r\n        const sourceNode = this.$_core.getNodeById(linkData.source)\r\n        const targetNode = this.$_core.getNodeById(linkData.target)\r\n        this.sourceTarget({\r\n            source: sourceNode,\r\n            target: targetNode\r\n        })\r\n    }\r\n\r\n    /**\r\n     * getter/setter of the source\r\n     * @param {Node} [node]\r\n     * @returns {Node} a source Node Object\r\n     * @memberof Link\r\n     */\r\n    public source(node?: Node): Node {\r\n        if (arguments.length === 1) {\r\n            // setter\r\n            this.sourceTarget({\r\n                source: node,\r\n                target: this.$_target\r\n            })\r\n        }\r\n        return this.$_source\r\n    }\r\n\r\n    /**\r\n     * getter/setter of the target\r\n     * @param {Node} [node]\r\n     * @returns {Node} a target Node Object\r\n     * @memberof Link\r\n     */\r\n    public target(node?: Node): Node {\r\n        if (arguments.length === 1) {\r\n            // setter\r\n            this.sourceTarget({\r\n                source: this.$_source,\r\n                target: node\r\n            })\r\n        }\r\n        return this.$_target\r\n    }\r\n\r\n    /**\r\n     * getter/setter of source and target\r\n     *\r\n     * @param {sourceTargetObj} [{source: Node, target: Node}]\r\n     * @returns Object {source: Node, target: Node}\r\n     * @memberof Link\r\n     */\r\n    public sourceTarget(sourceTargetObj?: { source: Node; target: Node }) {\r\n        if (arguments.length > 0) {\r\n            const oldSource: Node = this.$_source\r\n            const oldTarget: Node = this.$_target\r\n            const newSource = sourceTargetObj.source\r\n            const newTarget = sourceTargetObj.target\r\n            const newSourceId = newSource.id()\r\n            const newTargetId = newTarget.id()\r\n\r\n            if (newSource === newTarget) {\r\n                // error: self loop\r\n                throw new Error(`Self loop (${newSourceId} <=> ${newTargetId}) is not allowed.`)\r\n            }\r\n\r\n            if (this.$_core.$_ends2link.has([newSourceId, newTargetId])) {\r\n                // error: multiple link\r\n                throw new Error(`Multiple link (${newSourceId} <=> ${newTargetId}) is not allowd.`)\r\n            }\r\n\r\n            if (oldSource && oldTarget) {\r\n                // delete old Map\r\n                this.$_core.$_ends2link.delete([oldSource.id(), oldTarget.id()])\r\n\r\n                this.$_core.$_sourceId2links.get(oldSource.id())?.delete(this)\r\n                this.$_core.$_targetId2links.get(oldTarget.id())?.delete(this)\r\n            }\r\n\r\n            this.$_source = newSource\r\n            this.$_target = newTarget\r\n            this.$_core.$_ends2link.set([newSourceId, newTargetId], this)\r\n\r\n            if (!this.$_core.$_sourceId2links.has(newSourceId)) {\r\n                this.$_core.$_sourceId2links.set(newSourceId, new Set([this]))\r\n            } else {\r\n                this.$_core.$_sourceId2links.get(newSourceId).add(this)\r\n            }\r\n            if (!this.$_core.$_targetId2links.has(newTargetId)) {\r\n                this.$_core.$_targetId2links.set(newTargetId, new Set([this]))\r\n            } else {\r\n                this.$_core.$_targetId2links.get(newTargetId).add(this)\r\n            }\r\n        }\r\n        return {\r\n            source: this.$_source,\r\n            target: this.$_target\r\n        }\r\n    }\r\n}\r\n\r\nexport default Link\r\n","/**\r\n * @author Jiacheng Pan <jackieanxis@gmail.com>\r\n * @description Provide a Node class.\r\n * @dependences interfaces.ts, utils/is.ts\r\n */\r\n\r\nimport * as interfaces from '../interfaces'\r\nimport { isValidId } from '../utils/is'\r\nimport { LinkAttr } from '../renderer/interfaces'\r\nimport Link from './link'\r\nimport Element from './element'\r\n\r\nclass Node extends Element {\r\n    // style getter/setter\r\n    public shape: (value?: interfaces.NodeShape) => interfaces.NodeShape\r\n    public offset: (value?: interfaces.Position) => interfaces.Position\r\n    public strokeWidth: (value?: number) => number\r\n    public strokeColor: (value?: interfaces.Color) => interfaces.Color\r\n    public fill: (value?: interfaces.Color) => interfaces.Color\r\n    /* circle shape styles */\r\n    public r?: (value?: number) => number\r\n    /* rect shape styles */\r\n    public width?: (value?: number) => number\r\n    public height?: (value?: number) => number\r\n    public rotate?: (value?: number) => number\r\n    /* triangle shape styles */\r\n    public vertexAlpha: (value?: interfaces.Position) => interfaces.Position\r\n    public vertexBeta: (value?: interfaces.Position) => interfaces.Position\r\n    public vertexGamma: (value?: interfaces.Position) => interfaces.Position\r\n\r\n    public $_dragstartCallbackSet: Set<(e: any) => void> = new Set()\r\n    public $_draggingCallbackSet: Set<(e: any) => void> = new Set()\r\n    public $_dragendCallbackSet: Set<(e: any) => void> = new Set()\r\n\r\n    public $_position = {\r\n        x: 0,\r\n        y: 0\r\n    }\r\n\r\n    private $_id: string\r\n\r\n    private $_elementReservedKeys = new Set(['id', 'x', 'y', 'style'])\r\n\r\n    public constructor(core, nodeData: interfaces.NodeData) {\r\n        super(core, nodeData)\r\n\r\n        // set attributes\r\n        for (const key in nodeData) {\r\n            if (!this.$_elementReservedKeys.has(key)) {\r\n                this.$_attributes[key] = nodeData[key]\r\n            }\r\n        }\r\n\r\n        const data = {\r\n            ...{\r\n                x: this.$_position.x,\r\n                y: this.$_position.y\r\n            },\r\n            ...nodeData\r\n        }\r\n\r\n        this.$_setId(data.id)\r\n        this.$_position = {\r\n            x: data.x,\r\n            y: data.y\r\n        }\r\n    }\r\n\r\n    /**\r\n     * getter of private property $_id\r\n     * @memberof Node\r\n     */\r\n    public id() {\r\n        return this.$_id\r\n    }\r\n\r\n    /**\r\n     * get neighbor nodes for current node\r\n     */\r\n    public neighborNodes() {\r\n        // NOTE: currently API not intent to support directed graph\r\n        let sourceLinks = this.$_core.$_sourceId2links.get(this.$_id)\r\n        if (!sourceLinks) sourceLinks = new Set()\r\n        let targetLinks = this.$_core.$_targetId2links.get(this.$_id)\r\n        if (!targetLinks) targetLinks = new Set()\r\n\r\n        const nodeSet = new Set([\r\n            ...[...sourceLinks].map((link) => link.$_target),\r\n            ...[...targetLinks].map((link) => link.$_source)\r\n        ])\r\n\r\n        return Array.from(nodeSet)\r\n    }\r\n\r\n    /**\r\n     * get neighbor links for current node\r\n     */\r\n    public neighborLinks() {\r\n        // NOTE: currently API not intent to support directed graph\r\n        let sourceLinks = this.$_core.$_sourceId2links.get(this.$_id)\r\n        if (!sourceLinks) sourceLinks = new Set()\r\n        let targetLinks = this.$_core.$_targetId2links.get(this.$_id)\r\n        if (!targetLinks) targetLinks = new Set()\r\n\r\n        const linkSet = new Set([...sourceLinks, ...targetLinks])\r\n        return Array.from(linkSet)\r\n    }\r\n\r\n    /**\r\n     * set/get x postion\r\n     * @param {number} [value]\r\n     * @memberof Node\r\n     */\r\n    public x(value?: number) {\r\n        if (arguments.length > 0) {\r\n            this.position({\r\n                x: value\r\n            })\r\n        }\r\n        return this.$_position.x\r\n    }\r\n\r\n    /**\r\n     * set/get y postion\r\n     * @param {number} [value]\r\n     * @memberof Node\r\n     */\r\n    public y(value?: number) {\r\n        if (arguments.length > 0) {\r\n            this.position({\r\n                y: value\r\n            })\r\n        }\r\n        return this.$_position.y\r\n    }\r\n\r\n    /**\r\n     * set/get postion\r\n     * @memberof Node\r\n     */\r\n    public position(position?: interfaces.Position) {\r\n        let linkSets = {}\r\n\r\n        if (arguments.length > 0 && ('x' in position || 'y' in position)) {\r\n            if ('x' in position) {\r\n                this.$_position['x'] = position.x\r\n            }\r\n            if ('y' in position) {\r\n                this.$_position['y'] = position.y\r\n            }\r\n\r\n            if (this.$_core.$_renderer.shouldLazyUpdate) {\r\n                return this.$_position\r\n            } else {\r\n                linkSets = {\r\n                    // find links from/to this node\r\n                    source: this.$_core.$_sourceId2links.get(this.$_id),\r\n                    target: this.$_core.$_targetId2links.get(this.$_id)\r\n                }\r\n\r\n                Object.entries(linkSets).forEach((entry) => {\r\n                    // entry[0]: 'source' / 'target'\r\n                    // entry[1]: the link set\r\n                    const key = entry[0] as LinkAttr\r\n                    const set = entry[1] as Set<Link>\r\n                    if (set) {\r\n                        this.$_core.$_renderer.increaseModifiedElementsCountBy(set.size)\r\n                        for (const link of set) {\r\n                            this.$_core.$_renderer.linkManager.changeAttribute(link, key)\r\n                        }\r\n                    }\r\n                })\r\n\r\n                this.$_core.$_renderer.increaseModifiedElementsCountBy(1)\r\n                this.$_core.$_renderer.nodeManager.changeAttribute(this, 'position')\r\n            }\r\n        }\r\n\r\n        return this.$_position\r\n    }\r\n\r\n    /**\r\n     * set the id of this node.\r\n     * it is only used for constructor\r\n     * because a node's id is not allowed to be changed.\r\n     * @private\r\n     * @param {string} value\r\n     * @returns nothing\r\n     * @memberof Node\r\n     */\r\n    private $_setId(value: string) {\r\n        if (isValidId(value)) {\r\n            if (this.$_core.$_id2node.has(value)) {\r\n                throw new Error(`Duplicate node (${value}) is not allowed.`)\r\n            }\r\n            if (isValidId(this.$_id)) {\r\n                throw new Error('Can not change the id of an exist node.')\r\n            }\r\n            this.$_core.$_id2node.set(value, this)\r\n            this.$_id = value\r\n        } else {\r\n            throw new Error(`Invalid ID ${value}`)\r\n        }\r\n    }\r\n}\r\n\r\nexport default Node\r\n","/**\r\n * @author Jiacheng Pan <jackieanxis@gmail.com>\r\n * @description Provide the entrance of NetV.js.\r\n * @dependences interfaces.ts, utils/map2.js, node.ts, link.ts\r\n */\r\n\r\nimport * as interfaces from './interfaces'\r\nimport Map2 from './utils/map2'\r\nimport Node from './elements/node'\r\nimport Link from './elements/link'\r\nimport * as defaultConfigs from './configs'\r\nimport * as dataset from './dataset'\r\nimport { Renderer } from './renderer'\r\nimport { InteractionManager } from './interaction/interaction'\r\nimport * as Utils from './utils/utils'\r\nimport { Position } from './interfaces'\r\nimport { EMPTY_FUNCTION } from './utils/const'\r\n\r\nexport default class NetV {\r\n    public static Utils = Utils\r\n\r\n    public $_id2node = new Map()\r\n    public $_ends2link = new Map2()\r\n    public $_sourceId2links: Map<string, Set<Link>> = new Map()\r\n    public $_targetId2links: Map<string, Set<Link>> = new Map()\r\n    public $_container: HTMLDivElement\r\n    public $_canvas: HTMLCanvasElement\r\n    public $_renderer: Renderer\r\n    public $_configs = JSON.parse(JSON.stringify(defaultConfigs)) // NOTE: deep copy configs\r\n\r\n    public $_transform: interfaces.Transform = { x: 0, y: 0, k: 1 }\r\n\r\n    public $_lazyUpdate = false // flag to control lazy update\r\n\r\n    public $_interactionManager: InteractionManager\r\n    private $_data: interfaces.NodeLinkData = { nodes: [], links: [] }\r\n\r\n    /**\r\n     * @description create NetV object.\r\n     * @param configs configurations of NetV, must include a `container: HTMLDivElement` term\r\n     */\r\n    public constructor(configs: any) {\r\n        if (!('container' in configs) || configs.container.tagName !== 'DIV') {\r\n            throw Error('Container should be specified as a div element!')\r\n        }\r\n        this.$_container = configs.container\r\n\r\n        this.$_configs = Utils.override(this.$_configs, configs)\r\n        delete this.$_configs['container']\r\n\r\n        const canvas = document.createElement('canvas') // TODO: consider node enviroment, document not defined\r\n        const pixelRatio = window.devicePixelRatio || 1\r\n        canvas.style.width = this.$_configs.width + 'px'\r\n        canvas.style.height = this.$_configs.height + 'px'\r\n        canvas.setAttribute('width', String(this.$_configs.width * pixelRatio))\r\n        canvas.setAttribute('height', String(this.$_configs.height * pixelRatio))\r\n        this.$_container.appendChild(canvas)\r\n        this.$_canvas = canvas\r\n\r\n        this.$_renderer = new Renderer({\r\n            canvas,\r\n            width: this.$_configs.width,\r\n            height: this.$_configs.height,\r\n            backgroundColor: this.$_configs.backgroundColor,\r\n            nodeLimit: this.$_configs.nodeLimit,\r\n            linkLimit: this.$_configs.linkLimit,\r\n            getAllNodes: this.nodes.bind(this),\r\n            getAllLinks: this.links.bind(this)\r\n        })\r\n\r\n        this.$_interactionManager = new InteractionManager(this)\r\n    }\r\n\r\n    /**\r\n     * get/set canvas's background color\r\n     * @param color\r\n     */\r\n    public backgroundColor(color?: interfaces.Color) {\r\n        if (color) {\r\n            this.$_configs.backgroundColor = color\r\n            this.$_renderer.setBackgroundColor(color)\r\n        }\r\n        return this.$_configs.backgroundColor\r\n    }\r\n\r\n    /**\r\n     * @description data getter setter\r\n     * @param nodeLinkData? the node-link-data of a graph, provided?setter:getter;\r\n     */\r\n    public data(nodeLinkData?: interfaces.NodeLinkData) {\r\n        if (nodeLinkData === undefined) {\r\n            return this.$_data\r\n        } else {\r\n            // delete old data\r\n            this.$_data = { ...this.$_data, ...nodeLinkData }\r\n            this.$_id2node = new Map()\r\n            this.$_ends2link = new Map2()\r\n            this.$_sourceId2links = new Map()\r\n            this.$_targetId2links = new Map()\r\n\r\n            this.$_renderer.clearData()\r\n\r\n            this.addNodes(this.$_data.nodes)\r\n            this.addLinks(this.$_data.links)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description initialize and add a node\r\n     * @param nodeData the data of a node, include id, styles...\r\n     */\r\n    public addNode(nodeData: interfaces.NodeData) {\r\n        return this.addNodes([nodeData])[0]\r\n    }\r\n\r\n    /**\r\n     * @description initialize and add a link\r\n     * @param linkData the data of a link, include source, target, and styles...\r\n     */\r\n    public addLink(linkData: interfaces.LinkData) {\r\n        return this.addLinks([linkData])[0]\r\n    }\r\n\r\n    /**\r\n     * @description initialize and add an array of nodes.\r\n     * @param {interfaces.NodeData[]} nodesData: a data array of nodes tobe added\r\n     * @memberof NetV\r\n     */\r\n    public addNodes(nodesData: interfaces.NodeData[]) {\r\n        const newNodes = nodesData.map((nodeData) => {\r\n            nodeData.id = nodeData.id.toString()\r\n            const node = new Node(this, nodeData)\r\n\r\n            return node\r\n        })\r\n        this.$_renderer.addNodes(newNodes)\r\n        return newNodes\r\n    }\r\n\r\n    /**\r\n     * @description initialize and add an array of links.\r\n     * @param {interfaces.LinkData[]} linksData: a data array of links tobe added\r\n     * @memberof NetV\r\n     */\r\n    public addLinks(linksData: interfaces.LinkData[]) {\r\n        const newLinks = linksData.map((linkData) => {\r\n            linkData.source = linkData.source.toString()\r\n            linkData.target = linkData.target.toString()\r\n\r\n            const link = new Link(this, linkData)\r\n            return link\r\n        })\r\n        // this.$_renderer.addLinks(newLinks)\r\n        this.$_renderer.addLinks([...this.$_ends2link.values()]) // NOTE: preserve link order, not elegant\r\n        return newLinks\r\n    }\r\n\r\n    /**\r\n     * @description get a Node object from the id2node Map data structure\r\n     * @param id node id\r\n     */\r\n    public getNodeById(id: string) {\r\n        return this.$_id2node.get(id)\r\n    }\r\n\r\n    /**\r\n     * @description get a Link object from the ends2link Map2 data structure\r\n     * @param endId1 one end id of the link (source or target)\r\n     * @param endId2 another end id of the link (source or target)\r\n     */\r\n    public getLinkByEnds(endId1: string, endId2: string) {\r\n        return this.$_ends2link.get([endId1, endId2])\r\n    }\r\n\r\n    /**\r\n     * @description get all nodes\r\n     */\r\n    public nodes(): Node[] {\r\n        return [...this.$_id2node.values()]\r\n    }\r\n\r\n    /**\r\n     * @description get all links\r\n     */\r\n    public links(): Link[] {\r\n        return [...this.$_ends2link.values()]\r\n    }\r\n\r\n    /**\r\n     * @description wipe all the data in the instance\r\n     * @memberof NetV\r\n     */\r\n    public wipe() {\r\n        this.$_data = undefined\r\n        this.$_id2node = new Map()\r\n        this.$_ends2link = new Map2()\r\n        this.$_sourceId2links = new Map()\r\n        this.$_targetId2links = new Map()\r\n        this.$_renderer.clearData()\r\n    }\r\n\r\n    /**\r\n     * dispose NetV object, clear all stuffs\r\n     */\r\n    public dispose() {\r\n        this.wipe()\r\n        this.$_renderer.dispose()\r\n        this.$_canvas.remove()\r\n    }\r\n\r\n    /**\r\n     * @description return build-in dataset according to name\r\n     * @param name dataset name\r\n     */\r\n    public loadDataset(name: string) {\r\n        if (name in dataset) return dataset[name]\r\n\r\n        console.error(`NetV does not have build-in dataset: ${name}`)\r\n        return { nodes: [], links: [] }\r\n    }\r\n\r\n    /**\r\n     * given position, return element on this pixel if exists\r\n     * @param x x pos\r\n     * @param y y pos\r\n     */\r\n    public getElementByPosition(\r\n        position: interfaces.Position\r\n    ): { type: 'node' | 'link'; element: Node | Link } | undefined {\r\n        const id = this.$_renderer.getIdByPosition(position)\r\n        if (id) {\r\n            if (typeof id === 'string') {\r\n                const node = this.getNodeById(id)\r\n                return {\r\n                    type: 'node',\r\n                    element: node\r\n                }\r\n            }\r\n            if (Array.isArray(id)) {\r\n                const link = this.getLinkByEnds(id[0], id[1])\r\n                return {\r\n                    type: 'link',\r\n                    element: link\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description draw elements\r\n     */\r\n    public draw() {\r\n        this.$_renderer.draw()\r\n    }\r\n\r\n    /**\r\n     * @description transition between different transforms\r\n     */\r\n    public transition(\r\n        transforms: interfaces.Transform[],\r\n        durationsMS: number[],\r\n        callback?: (e: any) => {}\r\n    ) {\r\n        // interpolation\r\n        const STEPS_PER_SECOND = 60\r\n        const MS_PER_SECOND = 1000\r\n        const STEPS_PER_MS = STEPS_PER_SECOND / MS_PER_SECOND\r\n        const MS_PER_STEP = 1 / STEPS_PER_MS\r\n        const transitionFromTransforms = (index: number) => {\r\n            if (index >= transforms.length - 1) {\r\n                return\r\n            }\r\n            const TOTAL_STEPS = Math.max(STEPS_PER_MS * durationsMS[index], 1)\r\n            const newTransform = {\r\n                ...transforms[index]\r\n            }\r\n            const difference = {\r\n                x: transforms[index + 1].x - transforms[index].x,\r\n                y: transforms[index + 1].y - transforms[index].y,\r\n                k: transforms[index + 1].k - transforms[index].k\r\n            }\r\n            const originTranslate = {\r\n                x: transforms[index].x,\r\n                y: transforms[index].y,\r\n                k: transforms[index].k\r\n            }\r\n            const ease = (x: number) => {\r\n                return x * x\r\n            }\r\n            let step = 1\r\n            const animation = setInterval(() => {\r\n                newTransform.x = originTranslate.x + difference.x * ease(step / TOTAL_STEPS)\r\n                newTransform.y = originTranslate.y + difference.y * ease(step / TOTAL_STEPS)\r\n                newTransform.k = originTranslate.k + difference.k * ease(step / TOTAL_STEPS)\r\n                this.transform(newTransform)\r\n                this.draw()\r\n                if (callback) callback({ transform: newTransform })\r\n                step += 1\r\n                if (step >= TOTAL_STEPS) {\r\n                    clearInterval(animation)\r\n                    transitionFromTransforms(index + 1)\r\n                }\r\n            }, MS_PER_STEP)\r\n        }\r\n        transitionFromTransforms(0)\r\n    }\r\n\r\n    /**\r\n     * pan on canvas to get given node centered\r\n     * @param node\r\n     */\r\n    public centerOn(node: Node): interfaces.Transform {\r\n        const pos = node.position()\r\n        return this.$_interactionManager.centerPosition(pos)\r\n    }\r\n\r\n    /**\r\n     * progmatically pan\r\n     * @param x\r\n     * @param y\r\n     */\r\n    public panBy(x: number, y: number) {\r\n        return this.$_interactionManager.panBy(x, y)\r\n    }\r\n\r\n    /**\r\n     * progmatically zoom\r\n     * @param factor zoom factor\r\n     * @param center optional, zoom center position\r\n     */\r\n    public zoomBy(factor: number, center?: Position) {\r\n        return this.$_interactionManager.zoomBy(factor, center)\r\n    }\r\n\r\n    /**\r\n     * get/set netv's transform\r\n     * @param value optional, transform to set\r\n     */\r\n    public transform(value?: interfaces.Transform) {\r\n        if (value === undefined) {\r\n            return this.$_transform\r\n        }\r\n        this.$_transform = value\r\n        this.$_renderer.setTransform(this.$_transform)\r\n        return this.$_transform\r\n    }\r\n    /**\r\n     * @description event listener\r\n     * @memberof NetV\r\n     */\r\n    public on(eventName: string, callback: (e: any) => any) {\r\n        if (eventName.toLowerCase() === 'zoom') {\r\n            this.$_interactionManager.onZoom(callback ? callback : EMPTY_FUNCTION)\r\n        } else if (eventName.toLowerCase() === 'pan') {\r\n            this.$_interactionManager.onPan(callback ? callback : EMPTY_FUNCTION)\r\n        } else if (eventName.toLowerCase() === 'mousedown') {\r\n            this.$_interactionManager.onMousedown(callback ? callback : EMPTY_FUNCTION)\r\n        } else if (eventName.toLowerCase() === 'mouseup') {\r\n            this.$_interactionManager.onMouseup(callback ? callback : EMPTY_FUNCTION)\r\n        } else if (eventName.toLowerCase() === 'click') {\r\n            this.$_interactionManager.onClick(callback ? callback : EMPTY_FUNCTION)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description turn off event listener\r\n     *\r\n     * @memberof NetV\r\n     */\r\n    public off(eventName: string, callback?: (e: any) => any) {\r\n        if (eventName.toLowerCase() === 'zoom') {\r\n            this.$_interactionManager.offZoom(callback ? callback : EMPTY_FUNCTION)\r\n        } else if (eventName.toLowerCase() === 'pan') {\r\n            this.$_interactionManager.offPan(callback ? callback : EMPTY_FUNCTION)\r\n        } else if (eventName.toLowerCase() === 'mousedown') {\r\n            this.$_interactionManager.offMousedown(callback ? callback : EMPTY_FUNCTION)\r\n        } else if (eventName.toLowerCase() === 'mouseup') {\r\n            this.$_interactionManager.offMouseup(callback ? callback : EMPTY_FUNCTION)\r\n        } else if (eventName.toLowerCase() === 'click') {\r\n            this.$_interactionManager.offClick(callback ? callback : EMPTY_FUNCTION)\r\n        }\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    // to ensure window.NetV will not report ts error\r\n    interface Window {\r\n        NetV: any\r\n    }\r\n}\r\n\r\nwindow.NetV = NetV\r\n","/**\r\n * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>\r\n * @description handle all interaction in NetV\r\n */\r\n\r\nimport { Position } from '../interfaces'\r\nimport NetV from '../index'\r\nimport Node from '../elements/node'\r\nimport Element from '../elements/element'\r\n\r\nexport class InteractionManager {\r\n    private netv: NetV\r\n    private canvas: HTMLCanvasElement\r\n\r\n    private isZoomListened = false\r\n    private isMouseListened = false\r\n    private mouseEventCallbackCount = 0\r\n\r\n    // map user defined callback => handlers, can be use to remove listeners\r\n    private zoomCallbackSet: Set<(e: any) => any>\r\n    private panCallbackSet: Set<(e: any) => any>\r\n    private clickCallbackSet: Set<(e: any) => any>\r\n    private mousedownCallbackSet: Set<(e: any) => any>\r\n    private mouseupCallbackSet: Set<(e: any) => any>\r\n\r\n    private isMouseDown = false\r\n    private isMouseMove = false\r\n    private mouseDownElement\r\n    private mouseMoveElement\r\n    private mouseDownElementOriginPos: { x: number; y: number } // NOTE: record pos, only support node's drag\r\n\r\n    private mouseDownPos: { x: number; y: number }\r\n    private dragStartTransform: { x: number; y: number; k: number }\r\n\r\n    public constructor(netv: NetV) {\r\n        this.netv = netv\r\n        this.canvas = this.netv.$_container.querySelector('canvas')\r\n        this.zoomCallbackSet = new Set()\r\n        this.panCallbackSet = new Set()\r\n        this.clickCallbackSet = new Set()\r\n        this.mousedownCallbackSet = new Set()\r\n        this.mouseupCallbackSet = new Set()\r\n    }\r\n\r\n    /**\r\n     * progmatically pan\r\n     * @param x\r\n     * @param y\r\n     */\r\n    public panBy(x: number, y: number) {\r\n        const newTransform = { ...this.netv.$_transform }\r\n        newTransform.x += x\r\n        newTransform.y += y\r\n        return this.netv.transform(newTransform)\r\n    }\r\n\r\n    /**\r\n     * progmatically zoom\r\n     * @param factor zoom factor\r\n     * @param center optional, zoom center position\r\n     */\r\n    public zoomBy(factor: number, center?: Position) {\r\n        const newTransform = { ...this.netv.$_transform }\r\n        let centerPos = center\r\n        if (!centerPos) {\r\n            centerPos = { x: this.netv.$_configs.width / 2, y: this.netv.$_configs.height / 2 }\r\n        }\r\n        const { x, y } = centerPos\r\n\r\n        newTransform.x = (1 - factor) * x + factor * newTransform.x\r\n        newTransform.y = (1 - factor) * y + factor * newTransform.y\r\n\r\n        newTransform.k *= factor\r\n\r\n        return this.netv.transform(newTransform)\r\n    }\r\n\r\n    /**\r\n     * move current position to center of canvas\r\n     * @param pos\r\n     */\r\n    public centerPosition(pos: Position) {\r\n        const newTransform = { ...this.netv.$_transform }\r\n        const x = pos.x * newTransform.k + newTransform.x\r\n        const y = pos.y * newTransform.k + newTransform.y\r\n\r\n        const center = {\r\n            x: this.netv.$_configs.width / 2,\r\n            y: this.netv.$_configs.height / 2\r\n        }\r\n        newTransform.x += center.x - x\r\n        newTransform.y += center.y - y\r\n        this.netv.transform(newTransform)\r\n        return newTransform\r\n    }\r\n\r\n    /**\r\n     * init zoom interaction\r\n     */\r\n    public onZoom(callback: (e: any) => any) {\r\n        this.zoomCallbackSet.add(callback)\r\n\r\n        if (!this.isZoomListened) {\r\n            this.addWheelListeners()\r\n            this.isZoomListened = true\r\n        }\r\n    }\r\n\r\n    public offZoom(callback: (e: any) => any) {\r\n        this.zoomCallbackSet.delete(callback)\r\n\r\n        if (!this.zoomCallbackSet.size) {\r\n            this.removeWheelListeners()\r\n            this.isZoomListened = false\r\n        }\r\n    }\r\n\r\n    public onClick(callback: (e: any) => any) {\r\n        this.clickCallbackSet.add(callback)\r\n        this.increaseMouseEventCallbackCountBy(1)\r\n    }\r\n\r\n    public offClick(callback: (e: any) => any) {\r\n        this.clickCallbackSet.delete(callback)\r\n        this.decreaseMouseEventCallbackCountBy(1)\r\n    }\r\n\r\n    public onMousedown(callback: (e: any) => any) {\r\n        this.mousedownCallbackSet.add(callback)\r\n        this.increaseMouseEventCallbackCountBy(1)\r\n    }\r\n\r\n    public offMousedown(callback: (e: any) => any) {\r\n        this.mousedownCallbackSet.delete(callback)\r\n        this.decreaseMouseEventCallbackCountBy(1)\r\n    }\r\n\r\n    public onMouseup(callback: (e: any) => any) {\r\n        this.mouseupCallbackSet.add(callback)\r\n        this.increaseMouseEventCallbackCountBy(1)\r\n    }\r\n\r\n    public offMouseup(callback: (e: any) => any) {\r\n        this.mouseupCallbackSet.delete(callback)\r\n        this.decreaseMouseEventCallbackCountBy(1)\r\n    }\r\n\r\n    public onPan(callback: (e: any) => any) {\r\n        this.panCallbackSet.add(callback)\r\n        this.increaseMouseEventCallbackCountBy(1)\r\n    }\r\n\r\n    public offPan(callback: (e: any) => any) {\r\n        this.panCallbackSet.delete(callback)\r\n        this.decreaseMouseEventCallbackCountBy(1)\r\n    }\r\n\r\n    public increaseMouseEventCallbackCountBy(n: number) {\r\n        this.mouseEventCallbackCount += n\r\n        if (!this.isMouseListened && this.mouseEventCallbackCount > 0) {\r\n            // there is some mouse event listened elements\r\n            this.addMouseListeners()\r\n            this.isMouseListened = true\r\n        }\r\n    }\r\n\r\n    public decreaseMouseEventCallbackCountBy(n: number) {\r\n        this.mouseEventCallbackCount -= n\r\n        if (this.mouseEventCallbackCount <= 0 && !this.panCallbackSet.size) {\r\n            // no pan callback functions and no mouse event listened elements\r\n            this.removeMouseListeners()\r\n            this.isMouseListened = false\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private handle zoom (mouse wheel) event\r\n     * @param {WheelEvent} evt\r\n     * @memberof InteractionManager\r\n     */\r\n    private handleZoom(evt: WheelEvent) {\r\n        const newTransform = { ...this.netv.$_transform }\r\n        const x = evt.offsetX || evt.pageX - this.canvas.offsetLeft\r\n        const y = evt.offsetY || evt.pageY - this.canvas.offsetTop\r\n        const delta = evt.deltaY ? evt.deltaY / 40 : evt.detail ? -evt.detail : 0\r\n        if (delta) {\r\n            const k = Math.pow(1.1, delta)\r\n            newTransform.x = (1 - k) * x + k * newTransform.x\r\n            newTransform.y = (1 - k) * y + k * newTransform.y\r\n\r\n            newTransform.k *= k\r\n\r\n            this.netv.transform(newTransform)\r\n            this.netv.draw()\r\n\r\n            this.zoomCallbackSet.forEach((callback) =>\r\n                callback({\r\n                    event: evt,\r\n                    name: 'zoom',\r\n                    transform: newTransform\r\n                })\r\n            )\r\n        }\r\n\r\n        evt.preventDefault()\r\n    }\r\n\r\n    /**\r\n     * @private handle mouse down event\r\n     * @param {MouseEvent} evt\r\n     * @memberof InteractionManager\r\n     */\r\n    private handleMouseDown(evt: MouseEvent) {\r\n        const x = evt.offsetX || evt.pageX - this.canvas.offsetLeft\r\n        const y = evt.offsetY || evt.pageY - this.canvas.offsetTop\r\n        const yInv = this.netv.$_configs.height - y\r\n\r\n        const newTransform = { ...this.netv.$_transform }\r\n\r\n        this.isMouseDown = true\r\n        this.mouseDownPos = { x, y }\r\n        this.dragStartTransform = JSON.parse(JSON.stringify(newTransform))\r\n\r\n        this.mouseDownElement = this.netv.getElementByPosition({\r\n            x,\r\n            y: yInv\r\n        })\r\n\r\n        if (this.mouseDownElement?.element) {\r\n            const element = this.mouseDownElement.element\r\n            if (element?.constructor.name === 'Node') {\r\n                // only node can be dragged\r\n                // record orgin position for drag\r\n                this.mouseDownElementOriginPos = { ...element.position() }\r\n            }\r\n            element.$_mousedownCallbackSet.forEach((callback) => {\r\n                callback({\r\n                    event: evt,\r\n                    name: 'mousedown',\r\n                    element\r\n                })\r\n            })\r\n        } else {\r\n            this.mousedownCallbackSet.forEach((callback) => {\r\n                callback({\r\n                    event: evt,\r\n                    name: 'mousedown'\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private handle mouse move event\r\n     * @param {MouseEvent} evt\r\n     * @memberof InteractionManager\r\n     */\r\n    private handleMouseMove(evt: MouseEvent) {\r\n        let newTransform = { ...this.netv.$_transform }\r\n        const x = evt.offsetX || evt.pageX - this.canvas.offsetLeft\r\n        const y = evt.offsetY || evt.pageY - this.canvas.offsetTop\r\n\r\n        const lastIsMouseMove = this.isMouseMove\r\n        const lastMouseMoveElement = this.mouseMoveElement\r\n\r\n        if (this.isMouseDown) {\r\n            this.isMouseMove = true\r\n            const element = this.mouseDownElement?.element as Node\r\n            // drag a node: 1. mousedown on a Node; and 2. the node is listened;\r\n            // else pan\r\n            if (\r\n                element?.constructor.name === 'Node' &&\r\n                element.$_dragstartCallbackSet.size +\r\n                    element.$_draggingCallbackSet.size +\r\n                    element.$_dragendCallbackSet.size\r\n            ) {\r\n                // drag a listened node\r\n                if (!lastIsMouseMove) {\r\n                    // last time, the mouse is not move\r\n                    element.$_dragstartCallbackSet.forEach((callback) => {\r\n                        callback({\r\n                            event: evt,\r\n                            name: 'dragstart',\r\n                            element\r\n                        })\r\n                    })\r\n                }\r\n\r\n                // change node position\r\n                element.position({\r\n                    x:\r\n                        this.mouseDownElementOriginPos.x +\r\n                        (x - this.mouseDownPos.x) / newTransform.k,\r\n                    y: this.mouseDownElementOriginPos.y + (y - this.mouseDownPos.y) / newTransform.k\r\n                })\r\n\r\n                this.netv.draw()\r\n\r\n                element.$_draggingCallbackSet.forEach((callback) => {\r\n                    callback({\r\n                        event: evt,\r\n                        name: 'dragging',\r\n                        element\r\n                    })\r\n                })\r\n            } else {\r\n                // pan, when not dragging node\r\n                newTransform.x = this.dragStartTransform.x + x - this.mouseDownPos.x\r\n                newTransform.y = this.dragStartTransform.y + y - this.mouseDownPos.y\r\n                if (this.panCallbackSet.size) {\r\n                    this.netv.transform(newTransform)\r\n                    this.netv.draw()\r\n                    this.panCallbackSet.forEach((callback) =>\r\n                        callback({\r\n                            event: evt,\r\n                            name: 'pan',\r\n                            transform: newTransform\r\n                        })\r\n                    )\r\n                }\r\n            }\r\n        } else {\r\n            // hover\r\n            const yInv = this.netv.$_configs.height - y\r\n            const element = this.netv.getElementByPosition({ x, y: yInv })?.element\r\n            this.mouseMoveElement = element\r\n            if (lastMouseMoveElement === element) {\r\n                element?.$_mousemoveCallbackSet.forEach((callback) =>\r\n                    callback({\r\n                        event: evt,\r\n                        name: 'mousemove',\r\n                        element\r\n                    })\r\n                )\r\n            } else {\r\n                element?.$_mouseoverCallbackSet.forEach((callback) =>\r\n                    callback({\r\n                        event: evt,\r\n                        name: 'mouseover',\r\n                        element\r\n                    })\r\n                )\r\n                lastMouseMoveElement?.$_mouseoutCallbackSet.forEach((callback) =>\r\n                    callback({\r\n                        event: evt,\r\n                        name: 'mouseout',\r\n                        element: lastMouseMoveElement\r\n                    })\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @private handle mouse up event\r\n     * @param {MouseEvent} evt\r\n     * @memberof InteractionManager\r\n     */\r\n    private handleMouseUp(evt: MouseEvent) {\r\n        if (this.mouseDownElement) {\r\n            if (this.isMouseMove) {\r\n                // drag\r\n                if (this.mouseDownElement?.element.$_dragendCallbackSet) {\r\n                    const element = this.mouseDownElement.element as Node\r\n                    element.$_dragendCallbackSet.forEach((callback) =>\r\n                        callback({\r\n                            event: evt,\r\n                            name: 'dragend',\r\n                            element\r\n                        })\r\n                    )\r\n                }\r\n            } else {\r\n                // click\r\n                const element = this.mouseDownElement.element\r\n                element.$_clickCallbackSet.forEach((callback) =>\r\n                    callback({\r\n                        event: evt,\r\n                        name: 'click',\r\n                        element\r\n                    })\r\n                )\r\n            }\r\n            // mouseup\r\n            if (this.mouseDownElement?.element.$_mouseupCallbackSet) {\r\n                const element = this.mouseDownElement.element as Element\r\n                element.$_mouseupCallbackSet.forEach((callback) =>\r\n                    callback({\r\n                        event: evt,\r\n                        name: 'mouseup',\r\n                        element\r\n                    })\r\n                )\r\n            }\r\n        } else {\r\n            // canvas mouseup\r\n            this.mouseupCallbackSet.forEach((callback) =>\r\n                callback({\r\n                    event: evt,\r\n                    name: 'mouseup'\r\n                })\r\n            )\r\n            if (!this.isMouseMove) {\r\n                // click, not pan\r\n\r\n                this.clickCallbackSet.forEach((callback) =>\r\n                    callback({\r\n                        event: evt,\r\n                        name: 'click'\r\n                    })\r\n                )\r\n            }\r\n        }\r\n        this.isMouseDown = false\r\n        this.isMouseMove = false\r\n        this.mouseDownElement = undefined\r\n    }\r\n\r\n    private addWheelListeners() {\r\n        this.canvas.addEventListener('DOMMouseScroll', this.handleZoom.bind(this), false)\r\n        this.canvas.addEventListener('mousewheel', this.handleZoom.bind(this), false)\r\n    }\r\n\r\n    private removeWheelListeners() {\r\n        this.canvas.removeEventListener('DOMMouseScroll', this.handleZoom.bind(this))\r\n        this.canvas.removeEventListener('mousewheel', this.handleZoom.bind(this))\r\n    }\r\n\r\n    private addMouseListeners() {\r\n        const canvas = this.canvas\r\n        canvas.addEventListener('mousedown', this.handleMouseDown.bind(this))\r\n        canvas.addEventListener('mousemove', this.handleMouseMove.bind(this))\r\n        canvas.addEventListener('mouseup', this.handleMouseUp.bind(this))\r\n    }\r\n\r\n    private removeMouseListeners() {\r\n        const canvas = this.canvas\r\n        canvas.removeEventListener('mousedown', this.handleMouseDown.bind(this))\r\n        canvas.removeEventListener('mousemove', this.handleMouseMove.bind(this))\r\n        canvas.removeEventListener('mouseup', this.handleMouseUp.bind(this))\r\n    }\r\n}\r\n","import { RenderAttribute, ShaderSeries } from '../interfaces'\r\nimport {\r\n    createProgram,\r\n    createArrayBuffer,\r\n    extractAttributesFromShader,\r\n    encodeRenderId\r\n} from '../utils'\r\nimport { Transform } from '../../interfaces'\r\nimport Node from '../../elements/node'\r\nimport Link from '../../elements/link'\r\n\r\nexport class RenderElementManager {\r\n    protected gl: WebGL2RenderingContext\r\n    // the capablity of the render manager,\r\n    // which means how many elements can be rendered\r\n    protected capacity: number\r\n    protected count = 0\r\n    protected width: number\r\n    protected height: number\r\n    protected pixelRatio: number\r\n\r\n    protected program: WebGLProgram\r\n    protected attributes: Map<string, RenderAttribute>\r\n    protected vao: WebGLVertexArrayObject\r\n\r\n    // id shaders are design for mapping canvas pixels to elements\r\n    protected idProgram: WebGLProgram\r\n    protected idAttributes: Map<string, RenderAttribute>\r\n    protected idTexture: WebGLTexture\r\n\r\n    protected renderIdToElement: { [key: number]: Node | Link }\r\n    protected elementToRenderId = new Map()\r\n\r\n    public constructor(\r\n        gl: WebGL2RenderingContext,\r\n        params: any,\r\n        shaderSeries: ShaderSeries,\r\n        idTexture: WebGLTexture\r\n    ) {\r\n        const { limit, width, height, instanceVerteces } = params\r\n        this.gl = gl\r\n        this.capacity = limit\r\n        this.width = width\r\n        this.height = height\r\n        this.pixelRatio = window.devicePixelRatio || 1\r\n\r\n        this.attributes = extractAttributesFromShader(shaderSeries.vertex)\r\n        this.program = createProgram(\r\n            this.gl,\r\n            shaderSeries.vertex,\r\n            shaderSeries.fragment,\r\n            this.attributes\r\n        )\r\n\r\n        this.idAttributes = extractAttributesFromShader(shaderSeries.idVertex)\r\n        this.idProgram = createProgram(\r\n            this.gl,\r\n            shaderSeries.idVertex,\r\n            shaderSeries.idFragment,\r\n            this.idAttributes\r\n        )\r\n\r\n        this.idTexture = idTexture\r\n\r\n        // initial attributes arrays and buffers\r\n        this.attributes.forEach((attr) => {\r\n            if (!attr.isBuildIn) {\r\n                attr.array = new Float32Array(attr.size * this.capacity)\r\n            } else {\r\n                // build in attribute: veteces positions\r\n                // four verteces of one element (https://panjiacheng.site/wiki/2019/06/06/webGL/WebGL-BatchDraw%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB+%E7%90%86%E8%A7%A3/)\r\n                // prettier-ignore\r\n                attr.array = new Float32Array(instanceVerteces)\r\n            }\r\n\r\n            attr.buffer = createArrayBuffer(this.gl, attr.array)\r\n        })\r\n\r\n        // init id attributes and buffers\r\n        this.idAttributes.forEach((attr, name) => {\r\n            if (name === 'in_id') {\r\n                // TODO: hardcode check, need refactor\r\n                if (!attr.isBuildIn) {\r\n                    attr.array = new Float32Array(attr.size * this.capacity)\r\n                    attr.buffer = createArrayBuffer(this.gl, attr.array)\r\n                } else {\r\n                    // use static draw\r\n                    const gl = this.gl\r\n                    const buffer = gl.createBuffer()\r\n                    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n                    gl.bufferData(gl.ARRAY_BUFFER, attr.array, gl.STATIC_DRAW)\r\n                    attr.buffer = buffer\r\n                }\r\n            } else {\r\n                this.idAttributes.set(name, this.attributes.get(name))\r\n            }\r\n        })\r\n\r\n        this.vao = this.gl.createVertexArray()\r\n        this.gl.bindVertexArray(this.vao)\r\n\r\n        this.attributes.forEach((attr, i) => {\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer)\r\n            this.gl.enableVertexAttribArray(attr.location)\r\n            this.gl.vertexAttribPointer(\r\n                attr.location,\r\n                attr.size,\r\n                this.gl.FLOAT,\r\n                false,\r\n                attr.size * attr.array.BYTES_PER_ELEMENT,\r\n                0\r\n            )\r\n            if (!attr.isBuildIn) this.gl.vertexAttribDivisor(attr.location, 1)\r\n        })\r\n\r\n        const attr = this.idAttributes.get('in_id') // ! HARDCODE CHECK\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer)\r\n        this.gl.enableVertexAttribArray(attr.location)\r\n        this.gl.vertexAttribPointer(\r\n            attr.location,\r\n            attr.size,\r\n            this.gl.FLOAT,\r\n            false,\r\n            attr.size * attr.array.BYTES_PER_ELEMENT,\r\n            0\r\n        )\r\n        this.gl.vertexAttribDivisor(attr.location, 1)\r\n\r\n        // init uniforms\r\n        this.gl.useProgram(this.program)\r\n        // get uniform locations in Memory\r\n        const projectionLocation = this.gl.getUniformLocation(this.program, 'projection')\r\n        const scaleLocation = this.gl.getUniformLocation(this.program, 'scale')\r\n        const translateLocation = this.gl.getUniformLocation(this.program, 'translate')\r\n        const viewportLocation = this.gl.getUniformLocation(this.program, 'viewport')\r\n        const pixelRatioLocation = this.gl.getUniformLocation(this.program, 'pixelRatio')\r\n\r\n        // set uniform values\r\n        // prettier-ignore\r\n        const projection = new Float32Array([\r\n            2 / this.width,                0, 0,\r\n                         0, -2 / this.height, 0,\r\n                        -1,                1, 1\r\n        ])\r\n        projectionLocation !== null &&\r\n            this.gl.uniformMatrix3fv(projectionLocation, false, projection)\r\n\r\n        const scale = new Float32Array([1, 1])\r\n        scaleLocation !== null && this.gl.uniform2fv(scaleLocation, scale)\r\n\r\n        const translate = new Float32Array([0, 0])\r\n        translateLocation !== null && this.gl.uniform2fv(translateLocation, translate)\r\n\r\n        const viewport = new Float32Array([this.width, this.height])\r\n        viewportLocation !== null && this.gl.uniform2fv(viewportLocation, viewport)\r\n\r\n        pixelRatioLocation !== null && this.gl.uniform1f(pixelRatioLocation, this.pixelRatio)\r\n\r\n        // id uniforms, identical to node\r\n        // TODO: need refactor too\r\n        this.gl.useProgram(this.idProgram)\r\n        const idProjectionLocation = this.gl.getUniformLocation(this.idProgram, 'projection')\r\n        const idScaleLocation = this.gl.getUniformLocation(this.idProgram, 'scale')\r\n        const idTranslateLocation = this.gl.getUniformLocation(this.idProgram, 'translate')\r\n        const idViewportLocation = this.gl.getUniformLocation(this.idProgram, 'viewport')\r\n        const idPixelRatioLocation = this.gl.getUniformLocation(this.idProgram, 'pixelRatio')\r\n\r\n        idProjectionLocation !== null &&\r\n            this.gl.uniformMatrix3fv(idProjectionLocation, false, projection)\r\n        idScaleLocation !== null && this.gl.uniform2fv(idScaleLocation, scale)\r\n        idTranslateLocation !== null && this.gl.uniform2fv(idTranslateLocation, translate)\r\n        idViewportLocation !== null && this.gl.uniform2fv(idViewportLocation, viewport)\r\n        idPixelRatioLocation !== null && this.gl.uniform1f(idPixelRatioLocation, this.pixelRatio)\r\n    }\r\n\r\n    public setRenderIdOf(element: Node | Link, renderId: number) {\r\n        this.renderIdToElement[renderId] = element\r\n        this.elementToRenderId.set(element, renderId)\r\n    }\r\n\r\n    public getRenderIdOf(element: Node | Link): number {\r\n        return this.elementToRenderId.get(element)\r\n    }\r\n\r\n    /**\r\n     * render id to link ids(source and target)\r\n     * @param renderId\r\n     */\r\n    public getElementByRenderId(renderId: number): Node | Link {\r\n        return this.renderIdToElement[renderId]\r\n    }\r\n\r\n    /**\r\n     * set Transform in Render Link\r\n     * @param transform current transform(pan&zoom condition)\r\n     */\r\n    public setTransform(transform: Transform) {\r\n        this.gl.useProgram(this.program)\r\n        const scaleLoc = this.gl.getUniformLocation(this.program, 'scale')\r\n        const translateLoc = this.gl.getUniformLocation(this.program, 'translate')\r\n\r\n        const scale = new Float32Array([transform.k, transform.k])\r\n        this.gl.uniform2fv(scaleLoc, scale)\r\n\r\n        const translate = new Float32Array([transform.x, transform.y])\r\n        this.gl.uniform2fv(translateLoc, translate)\r\n\r\n        // id uniforms, identical to link\r\n        // TODO: need refactor too\r\n        this.gl.useProgram(this.idProgram)\r\n        const idScaleLoc = this.gl.getUniformLocation(this.idProgram, 'scale')\r\n        const idTranslateLoc = this.gl.getUniformLocation(this.idProgram, 'translate')\r\n\r\n        this.gl.uniform2fv(idScaleLoc, scale)\r\n        this.gl.uniform2fv(idTranslateLoc, translate)\r\n    }\r\n\r\n    public draw() {\r\n        if (this.count <= 0) return\r\n\r\n        this.gl.enable(this.gl.BLEND)\r\n        this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA)\r\n\r\n        this.gl.bindVertexArray(this.vao)\r\n\r\n        this.gl.useProgram(this.program)\r\n\r\n        this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP, 0, 4, this.count)\r\n\r\n        // draw id\r\n        this.gl.blendFunc(this.gl.ONE, this.gl.ZERO)\r\n        this.gl.useProgram(this.idProgram)\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.idTexture)\r\n        this.gl.drawArraysInstanced(this.gl.TRIANGLE_STRIP, 0, 4, this.count)\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null)\r\n\r\n        this.gl.enable(this.gl.BLEND)\r\n        this.gl.blendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA)\r\n    }\r\n\r\n    /**\r\n     * add element data to engine\r\n     * @param elements elements data\r\n     */\r\n    public addData(elements: Node[] | Link[]) {\r\n        // set array\r\n        elements.forEach((element: Node | Link, i) => {\r\n            const index = this.count + i\r\n            // link attribute => webgl attribute\r\n            this.attributes.forEach((attr) => {\r\n                if (!attr.isBuildIn) {\r\n                    const value = attr.extractAttributeValueFrom(element)\r\n                    value.forEach((v, j) => {\r\n                        // inject into the Buffer Array\r\n                        attr.array[attr.size * index + j] = v\r\n                    })\r\n                }\r\n            })\r\n\r\n            const offset = element.constructor.name === 'Node' ? 0 : 1 // NOTE: node render id, use even integer\r\n            const renderId = 2 * index + offset\r\n            const renderIdColor = encodeRenderId(renderId)\r\n            this.idAttributes.get('in_id').array[4 * index] = renderIdColor.r\r\n            this.idAttributes.get('in_id').array[4 * index + 1] = renderIdColor.g\r\n            this.idAttributes.get('in_id').array[4 * index + 2] = renderIdColor.b\r\n            this.idAttributes.get('in_id').array[4 * index + 3] = renderIdColor.a\r\n\r\n            this.setRenderIdOf(element, renderId)\r\n        })\r\n\r\n        this.attributes.forEach((attr) => {\r\n            if (!attr.isBuildIn) {\r\n                this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer)\r\n                this.gl.bufferSubData(\r\n                    this.gl.ARRAY_BUFFER,\r\n                    attr.size * this.count * attr.array.BYTES_PER_ELEMENT,\r\n                    attr.array,\r\n                    attr.size * this.count,\r\n                    attr.size * elements.length\r\n                )\r\n            }\r\n        })\r\n\r\n        // id buffer data\r\n        const attr = this.idAttributes.get('in_id')\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer)\r\n        this.gl.bufferSubData(\r\n            this.gl.ARRAY_BUFFER,\r\n            attr.size * this.count * attr.array.BYTES_PER_ELEMENT,\r\n            attr.array,\r\n            attr.size * this.count,\r\n            attr.size * elements.length\r\n        )\r\n\r\n        this.count += elements.length\r\n    }\r\n\r\n    /**\r\n     * change an element's attribute\r\n     * @param element link/node data\r\n     * @param attribute attribute key to change\r\n     */\r\n    public changeAttribute(element: Node | Link, attribute: string) {\r\n        const renderId = this.getRenderIdOf(element)\r\n        const index = Math.floor(renderId / 2)\r\n        const attr = this.attributes.get(`in_${attribute}`)\r\n        if (attr === undefined) {\r\n            console.error(\r\n                `Attribute: ${attribute} is not supported in a ${element.constructor.name} instance.`\r\n            )\r\n        }\r\n        const data = attr.extractAttributeValueFrom(element)\r\n        attr.array.set(data, attr.size * index)\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer)\r\n        this.gl.bufferSubData(\r\n            this.gl.ARRAY_BUFFER,\r\n            attr.size * index * attr.array.BYTES_PER_ELEMENT,\r\n            attr.array,\r\n            attr.size * index,\r\n            attr.size\r\n        )\r\n    }\r\n\r\n    /**\r\n     * clear data\r\n     * not actually erase data, but reset count\r\n     */\r\n    public clearData() {\r\n        this.count = 0\r\n    }\r\n}\r\n","/**\r\n * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>\r\n * @description Link used in renderer\r\n */\r\nimport { LinkManagerConfigs, ShaderSeries } from '../interfaces'\r\nimport Link from '../../elements/link'\r\nimport { RenderElementManager } from './render-element'\r\n\r\nexport class RenderLinkManager extends RenderElementManager {\r\n    /**\r\n     * create render link manager\r\n     * @param gl WebGL context\r\n     * @param params nessesary configs for link manager\r\n     * @param idTexture texture store elements id of each pixel\r\n     */\r\n    public constructor(\r\n        gl: WebGL2RenderingContext,\r\n        params: LinkManagerConfigs,\r\n        shaders: ShaderSeries,\r\n        idTexture: WebGLTexture\r\n    ) {\r\n        super(\r\n            /* webgl context */ gl,\r\n            // prettier-ignore\r\n            /* parameters */ {...params, instanceVerteces: [\r\n                -0.5, 0.5, 1.0,\r\n                -0.5, -0.5, 1.0,\r\n                0.5, 0.5, 1.0,\r\n                0.5, -0.5, 1.0,\r\n            ]},\r\n            /* shader series */ {\r\n                ...shaders\r\n            },\r\n            /* idTexture */ idTexture\r\n        )\r\n        this.renderIdToElement = {}\r\n\r\n        this.attributes.forEach((attr) => {\r\n            if (attr.name === 'in_source') {\r\n                attr.extractAttributeValueFrom = (link: Link) => {\r\n                    const sourcePosition = link.source().position()\r\n                    return [sourcePosition.x, sourcePosition.y]\r\n                }\r\n            } else if (attr.name === 'in_target') {\r\n                attr.extractAttributeValueFrom = (link: Link) => {\r\n                    const targetPosition = link.target().position()\r\n                    return [targetPosition.x, targetPosition.y]\r\n                }\r\n            } else if (attr.name === 'in_strokeWidth') {\r\n                attr.extractAttributeValueFrom = (link: Link) => {\r\n                    return [link.strokeWidth() * this.pixelRatio]\r\n                }\r\n            } else if (attr.name === 'in_strokeColor') {\r\n                attr.extractAttributeValueFrom = (link: Link) => {\r\n                    const strokeColor = link.strokeColor()\r\n                    return [strokeColor.r, strokeColor.g, strokeColor.b, strokeColor.a]\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * refresh all position of edges\r\n     * @param links all link data\r\n     */\r\n    public refreshPosition(links: Link[]) {\r\n        const sourceAttr = this.attributes.get('in_source')\r\n        const targetAttr = this.attributes.get('in_target')\r\n\r\n        const sourceArray = sourceAttr.array\r\n        const targetArray = targetAttr.array\r\n        for (let i = 0; i < links.length; ++i) {\r\n            const link = links[i]\r\n            const source = link.$_source\r\n            const sourcePosition = source.$_position\r\n            sourceArray[2 * i] = sourcePosition.x\r\n            sourceArray[2 * i + 1] = sourcePosition.y\r\n\r\n            const target = link.$_target\r\n            const targetPosition = target.$_position\r\n            targetArray[2 * i] = targetPosition.x\r\n            targetArray[2 * i + 1] = targetPosition.y\r\n        }\r\n\r\n        const arr = [sourceAttr, targetAttr]\r\n\r\n        arr.forEach((attr) => {\r\n            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, attr.buffer)\r\n            this.gl.bufferSubData(this.gl.ARRAY_BUFFER, 0, attr.array, 0, attr.size * links.length)\r\n        })\r\n    }\r\n}\r\n","/**\r\n * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>\r\n * @description Node using in Renderer\r\n */\r\n\r\nimport { NodeManagerConfigs, ShaderSeries } from '../interfaces'\r\nimport Node from '../../elements/node'\r\nimport { RenderElementManager } from './render-element'\r\n\r\nexport class RenderNodeManager extends RenderElementManager {\r\n    // private idToIndex: { [key: string]: number }\r\n\r\n    /**\r\n     * create render node manager\r\n     * @param gl WebGL context\r\n     * @param params nessesary configs for node manager\r\n     * @param idTexture texture store elements id of each pixel\r\n     */\r\n    public constructor(\r\n        gl: WebGL2RenderingContext,\r\n        params: NodeManagerConfigs,\r\n        shaders: ShaderSeries,\r\n        idTexture: WebGLTexture\r\n    ) {\r\n        super(\r\n            /* webgl context */ gl,\r\n            // prettier-ignore\r\n            /* parameters */ {...params, instanceVerteces: [\r\n                -0.5, 0.5, 1.0,\r\n                -0.5, -0.5, 1.0,\r\n                0.5, 0.5, 1.0,\r\n                0.5, -0.5, 1.0,\r\n            ]},\r\n            /* shader series */ {\r\n                ...shaders\r\n            },\r\n            /* idTexture */ idTexture\r\n        )\r\n        this.renderIdToElement = {}\r\n        // this.idToIndex = {}\r\n\r\n        this.attributes.forEach((attr) => {\r\n            if (attr.name === 'in_position') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    const position = node.position()\r\n                    return [position.x, position.y]\r\n                }\r\n            } else if (attr.name === 'in_r') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    return [node.r() * this.pixelRatio]\r\n                }\r\n            } else if (attr.name === 'in_width') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    return [node.width() * this.pixelRatio]\r\n                }\r\n            } else if (attr.name === 'in_height') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    return [node.height() * this.pixelRatio]\r\n                }\r\n            } else if (attr.name === 'in_rotate') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    return [node.rotate()]\r\n                }\r\n            } else if (attr.name === 'in_fill') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    const fill = node.fill()\r\n                    return [fill.r, fill.g, fill.b, fill.a]\r\n                }\r\n            } else if (attr.name === 'in_strokeWidth') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    return [node.strokeWidth() * this.pixelRatio]\r\n                }\r\n            } else if (attr.name === 'in_strokeColor') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    const strokeColor = node.strokeColor()\r\n                    return [strokeColor.r, strokeColor.g, strokeColor.b, strokeColor.a]\r\n                }\r\n            } else if (attr.name === 'in_shape') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    const shape = node.shape()\r\n                    if (shape === 'rect') {\r\n                        return [1]\r\n                    } else if (shape === 'triangle') {\r\n                        return [2]\r\n                    } else {\r\n                        return [0]\r\n                    }\r\n                }\r\n            } else if (attr.name === 'in_vertexAlpha') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    const vertexAlpha = node.vertexAlpha()\r\n                    return [vertexAlpha.x, vertexAlpha.y]\r\n                }\r\n            } else if (attr.name === 'in_vertexBeta') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    const vertexAlpha = node.vertexBeta()\r\n                    return [vertexAlpha.x, vertexAlpha.y]\r\n                }\r\n            } else if (attr.name === 'in_vertexGamma') {\r\n                attr.extractAttributeValueFrom = (node: Node) => {\r\n                    const vertexAlpha = node.vertexGamma()\r\n                    return [vertexAlpha.x, vertexAlpha.y]\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * refresh all nodes position after lazy update\r\n     * @param nodes all node data\r\n     */\r\n    public refreshPosition(nodes: Node[]) {\r\n        // set array\r\n        const posAttr = this.attributes.get('in_position')\r\n        const array = posAttr.array\r\n        for (let i = 0; i < nodes.length; ++i) {\r\n            const node = nodes[i]\r\n            const position = node.$_position\r\n            array[2 * i] = position.x\r\n            array[2 * i + 1] = position.y\r\n        }\r\n\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, posAttr.buffer)\r\n        this.gl.bufferSubData(\r\n            this.gl.ARRAY_BUFFER,\r\n            0,\r\n            posAttr.array,\r\n            0,\r\n            posAttr.size * nodes.length\r\n        )\r\n    }\r\n}\r\n","/**\r\n * @description render graph using webgl\r\n * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>\r\n */\r\n\r\nimport * as nodeShaders from './shaders/node-shader'\r\nimport * as linkShaders from './shaders/link-shader'\r\nimport { RenderNodeManager } from './elements/render-node'\r\nimport Node from '../elements/node'\r\nimport Link from '../elements/link'\r\nimport { RenderLinkManager } from './elements/render-link'\r\nimport { Transform, Position } from '../interfaces'\r\nimport { RendererConfigs } from './interfaces'\r\nimport { Color } from '../interfaces'\r\nimport { decodeRenderId } from './utils'\r\n\r\nconst MODIFIED_ELEMENTS_COUNT_UPPER_THRESHOLD = 10 // when modifiedElementCount is larger than it, $_shouldLazyUpdate will be true\r\n\r\nexport class Renderer {\r\n    public nodeManager: RenderNodeManager\r\n    public linkManager: RenderLinkManager\r\n\r\n    public modifiedElementsCount = 0 // record modified link num to control lazy update\r\n    public shouldLazyUpdate = false // flag to control lazy update\r\n\r\n    private gl: WebGL2RenderingContext\r\n    private backgroundColor: Color\r\n    private width: number\r\n    private height: number\r\n    private idTexture: WebGLTexture\r\n\r\n    private getAllNodes: () => Node[]\r\n    private getAllLinks: () => Link[]\r\n\r\n    /**\r\n     * create renderer object\r\n     * @param configs {canvas: HTMLCanvasElement, width: number, height: number, backgroundColor: Color, defaultConfigs: Object} configs passed to renderer\r\n     */\r\n    public constructor(configs: RendererConfigs) {\r\n        const {\r\n            canvas,\r\n            width,\r\n            height,\r\n            backgroundColor,\r\n            nodeLimit,\r\n            linkLimit,\r\n            getAllNodes,\r\n            getAllLinks\r\n        } = configs\r\n\r\n        try {\r\n            this.gl = canvas.getContext('webgl2')\r\n        } catch {\r\n            throw new Error('NetV requires WebGL2 supported by your browser')\r\n        }\r\n\r\n        this.backgroundColor = backgroundColor\r\n        this.width = width\r\n        this.height = height\r\n\r\n        this.getAllNodes = getAllNodes\r\n        this.getAllLinks = getAllLinks\r\n\r\n        this.initIdTexture()\r\n\r\n        const nodeShaderSeriels = {\r\n            vertex: nodeShaders.vertex.connect(),\r\n            fragment: nodeShaders.fragment.connect(),\r\n            idVertex: nodeShaders.idVertex.connect(),\r\n            idFragment: nodeShaders.idFragment.connect()\r\n        }\r\n\r\n        const linkShaderSeriels = {\r\n            vertex: linkShaders.vertex.connect(),\r\n            fragment: linkShaders.fragment.connect(),\r\n            idVertex: linkShaders.idVertex.connect(),\r\n            idFragment: linkShaders.idFragment.connect()\r\n        }\r\n\r\n        this.nodeManager = new RenderNodeManager(\r\n            this.gl,\r\n            { width, height, limit: nodeLimit },\r\n            nodeShaderSeriels,\r\n            this.idTexture\r\n        )\r\n        this.linkManager = new RenderLinkManager(\r\n            this.gl,\r\n            { width, height, limit: linkLimit },\r\n            linkShaderSeriels,\r\n            this.idTexture\r\n        )\r\n    }\r\n\r\n    /**\r\n     * dispose renderer stuffs\r\n     */\r\n    public dispose() {\r\n        // refer: https://stackoverflow.com/a/23606581\r\n        const numTextureUnits = this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS)\r\n        for (let unit = 0; unit < numTextureUnits; ++unit) {\r\n            this.gl.activeTexture(this.gl.TEXTURE0 + unit)\r\n            this.gl.bindTexture(this.gl.TEXTURE_2D, null)\r\n            this.gl.bindTexture(this.gl.TEXTURE_CUBE_MAP, null)\r\n        }\r\n        this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null)\r\n        this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, null)\r\n        this.gl.bindRenderbuffer(this.gl.RENDERBUFFER, null)\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null)\r\n        this.gl.getExtension('WEBGL_lose_context').loseContext()\r\n        // TODO: maybe need free more buffers or something else\r\n    }\r\n\r\n    /**\r\n     * set clearColor for renderer\r\n     * @param color\r\n     */\r\n    public setBackgroundColor(color: Color) {\r\n        this.backgroundColor = color\r\n    }\r\n\r\n    /**\r\n     * clear data in renderer\r\n     */\r\n    public clearData() {\r\n        this.nodeManager.clearData()\r\n        this.linkManager.clearData()\r\n    }\r\n\r\n    /**\r\n     * add nodes to node manager\r\n     * @param nodes node data in NetV\r\n     */\r\n    public addNodes(nodes: Node[]) {\r\n        this.nodeManager.addData(nodes)\r\n    }\r\n\r\n    /**\r\n     * add links to link manager\r\n     * @param links link data in NetV\r\n     */\r\n    public addLinks(links: Link[]) {\r\n        this.linkManager.addData(links)\r\n    }\r\n\r\n    public setTransform(transform: Transform) {\r\n        this.nodeManager.setTransform(transform)\r\n        this.linkManager.setTransform(transform)\r\n    }\r\n\r\n    /**\r\n     * draw all elements\r\n     */\r\n    public draw() {\r\n        if (this.shouldLazyUpdate) {\r\n            // TODO: not only position needs to be refreshed, but also other styles\r\n            this.nodeManager.refreshPosition(this.getAllNodes())\r\n\r\n            this.linkManager.refreshPosition(this.getAllLinks())\r\n            this.shouldLazyUpdate = false\r\n            this.modifiedElementsCount = 0\r\n        }\r\n\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.idTexture)\r\n        this.gl.clearColor(1, 1, 1, 1)\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT)\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null)\r\n\r\n        this.gl.clearColor(\r\n            this.backgroundColor.r,\r\n            this.backgroundColor.g,\r\n            this.backgroundColor.b,\r\n            this.backgroundColor.a\r\n        )\r\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT)\r\n        this.linkManager.draw()\r\n        this.nodeManager.draw()\r\n    }\r\n\r\n    /**\r\n     * get element's id at (x, y) of canvas if exists\r\n     * @param x x pos\r\n     * @param y y pos\r\n     */\r\n    public getIdByPosition(position: Position): string | [string, string] {\r\n        const renderId = this.readIdTexture(position)\r\n        if (renderId >= 0) {\r\n            if (renderId % 2 === 0) {\r\n                // NOTE: node has even render id, link has odd render id\r\n                const node = this.nodeManager.getElementByRenderId(renderId) as Node\r\n                return node.id()\r\n            } else {\r\n                const link = this.linkManager.getElementByRenderId(renderId) as Link\r\n                const sourceTarget = link.sourceTarget()\r\n                return [sourceTarget.source.id(), sourceTarget.target.id()]\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * read pixel value at (x, y) of texture\r\n     * @param x x pos\r\n     * @param y y pos\r\n     */\r\n    public readIdTexture(position: Position): number {\r\n        const ratio = window.devicePixelRatio || 1\r\n        this.gl.bindFramebuffer(this.gl.READ_FRAMEBUFFER, this.idTexture)\r\n        const readPixelBuffer = new Uint8Array([255, 255, 255, 255]) // -1\r\n        this.gl.readPixels(\r\n            // !Warning: x and y are optional in Position, need to check them\r\n            position.x * ratio,\r\n            position.y * ratio,\r\n            1,\r\n            1,\r\n            this.gl.RGBA,\r\n            this.gl.UNSIGNED_BYTE,\r\n            readPixelBuffer\r\n        )\r\n        const objectID = decodeRenderId(readPixelBuffer)\r\n\r\n        return objectID\r\n    }\r\n\r\n    /**\r\n     * increase modified elements count\r\n     * When it is larger than a threshold, the lazy update mode will be turned on.\r\n     */\r\n    public increaseModifiedElementsCountBy(n: number) {\r\n        this.modifiedElementsCount += n\r\n        if (this.modifiedElementsCount > MODIFIED_ELEMENTS_COUNT_UPPER_THRESHOLD) {\r\n            this.shouldLazyUpdate = true\r\n        }\r\n    }\r\n\r\n    /**\r\n     * init WebGL texture for recording position of elements\r\n     */\r\n    private initIdTexture() {\r\n        const gl = this.gl\r\n        const pixelRatio = window.devicePixelRatio || 1\r\n        const screenWidth = this.width * pixelRatio\r\n        const screenHeight = this.height * pixelRatio\r\n\r\n        const fbo = gl.createFramebuffer()\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, fbo)\r\n\r\n        const idTexture = gl.createTexture()\r\n        gl.bindTexture(gl.TEXTURE_2D, idTexture)\r\n        gl.texImage2D(\r\n            gl.TEXTURE_2D,\r\n            0,\r\n            gl.RGBA,\r\n            screenWidth,\r\n            screenHeight,\r\n            0,\r\n            gl.RGBA,\r\n            gl.UNSIGNED_BYTE,\r\n            null\r\n        )\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR)\r\n        gl.bindTexture(gl.TEXTURE_2D, null)\r\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, idTexture, 0)\r\n\r\n        // TODO: need simplify\r\n        gl.drawBuffers([0].map((v) => v + gl.COLOR_ATTACHMENT0))\r\n\r\n        const rbo = gl.createRenderbuffer()\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, rbo)\r\n        gl.clearColor(1, 1, 1, 1)\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH24_STENCIL8, screenWidth, screenHeight)\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null)\r\n        gl.framebufferRenderbuffer(\r\n            gl.FRAMEBUFFER,\r\n            gl.DEPTH_STENCIL_ATTACHMENT,\r\n            gl.RENDERBUFFER,\r\n            rbo\r\n        )\r\n\r\n        if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\r\n            throw new Error('Framebuffer generate failed')\r\n        }\r\n\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null)\r\n\r\n        this.idTexture = fbo\r\n    }\r\n}\r\n","import { Shader } from '../utils'\r\n\r\nconst vertex = new Shader()\r\nvertex.inputs = {\r\n    inVertexPos: 'vec3',\r\n    in_shape: 'float',\r\n    in_source: 'vec2',\r\n    in_target: 'vec2',\r\n    in_strokeWidth: 'float',\r\n    in_strokeColor: 'vec4'\r\n}\r\nvertex.outputs = {\r\n    shape: 'float',\r\n    strokeColor: 'vec4'\r\n}\r\nvertex.uniforms = {\r\n    projection: 'mat3',\r\n    scale: 'vec2',\r\n    translate: 'vec2'\r\n}\r\nvertex.main = [\r\n    `void main(void) {`,\r\n    `    strokeColor = in_strokeColor;`,\r\n    `    shape = in_shape;`,\r\n    `    vec2 source = in_source * scale + translate;`,\r\n    `    vec2 target = in_target * scale + translate;`,\r\n    `    vec2 delta = source - target;`,\r\n    `    vec2 center = 0.5 * (source + target);`,\r\n    `    float len = length(delta);`,\r\n    `    float phi = atan(delta.y / delta.x);`,\r\n    ``,\r\n    `    mat3 line_scale = mat3(`,\r\n    `        len, 0, 0,`,\r\n    `        0, in_strokeWidth, 0,`,\r\n    `        0, 0, 1`,\r\n    `    );`,\r\n    `    mat3 line_rotate = mat3(`,\r\n    `        cos(phi), sin(phi), 0,`,\r\n    `        -sin(phi), cos(phi), 0,`,\r\n    `        0, 0, 1`,\r\n    `    );`,\r\n    `    mat3 line_translate = mat3(`,\r\n    `        1, 0, 0,`,\r\n    `        0, 1, 0,`,\r\n    `        center.x, center.y, 1`,\r\n    `    );`,\r\n    `    `,\r\n    `    mat3 transform = line_translate * line_rotate * line_scale;`,\r\n    ``,\r\n    `    gl_Position = vec4(projection * transform * inVertexPos, 1.);`,\r\n    `}`\r\n]\r\n\r\nconst idVertex = vertex.copy()\r\nidVertex.inputs['in_id'] = 'vec4'\r\nidVertex.outputs['id'] = 'vec4'\r\nidVertex.main.splice(1, 0, `id = in_id;`)\r\n\r\nconst fragment = new Shader()\r\nfragment.inputs = { ...vertex.outputs }\r\nfragment.outputs = {\r\n    fragmentColor: 'vec4'\r\n}\r\nfragment.main = [\r\n    `void main(void) {`,\r\n    `    fragmentColor = vec4(strokeColor.rgb * strokeColor.a, strokeColor.a);`,\r\n    `}`\r\n]\r\n\r\nconst idFragment = fragment.copy()\r\nidFragment.inputs['id'] = 'vec4'\r\nidFragment.main[1] = `fragmentColor = id;`\r\n\r\nexport { vertex, idVertex, fragment, idFragment }\r\n","import { Shader } from '../utils'\r\n\r\nconst vertex = new Shader()\r\nvertex.inputs = {\r\n    inVertexPos: 'vec3',\r\n    in_shape: 'float',\r\n    in_position: 'vec2',\r\n    in_offset: 'vec2',\r\n    in_width: 'float',\r\n    in_height: 'float',\r\n    in_rotate: 'float',\r\n    in_r: 'float',\r\n    in_vertexAlpha: 'vec2',\r\n    in_vertexBeta: 'vec2',\r\n    in_vertexGamma: 'vec2',\r\n    in_fill: 'vec4',\r\n    in_strokeWidth: 'float',\r\n    in_strokeColor: 'vec4'\r\n}\r\nvertex.outputs = {\r\n    position: 'vec2',\r\n    shape: 'float',\r\n    width: 'float', // rect\r\n    height: 'float', // rect\r\n    rotate: 'float', // rect\r\n    r: 'float', // circle\r\n    vertexAlpha: 'vec2', // triangle\r\n    vertexBeta: 'vec2', // triangle\r\n    vertexGamma: 'vec2', // triangle\r\n    fill: 'vec4',\r\n    strokeWidth: 'float',\r\n    strokeColor: 'vec4'\r\n}\r\nvertex.uniforms = {\r\n    projection: 'mat3',\r\n    scale: 'vec2',\r\n    translate: 'vec2',\r\n    viewport: 'vec2',\r\n    pixelRatio: 'float'\r\n}\r\nvertex.methods = [\r\n    [\r\n        `vec2 calculate_inner_point (vec2 p1, vec2 p2, vec2 p3) {`,\r\n        `   float inner_p1 = sqrt(dot(p1, p1));`,\r\n        `   float inner_p2 = sqrt(dot(p2, p2));`,\r\n        `   float inner_p3 = sqrt(dot(p3, p3));`,\r\n        `   vec2 inner = (p1 * inner_p1 + p2 * inner_p2 + p3 * inner_p3) / (inner_p1 + inner_p2 + inner_p3);`,\r\n        `   return inner;`,\r\n        `}`\r\n    ],\r\n    [\r\n        `float calculate_stroke_scale (vec2 p1, vec2 p2, vec2 p3) {`,\r\n        `   vec2 inner = calculate_inner_point(p1, p2, p3);`,\r\n        `   float a = distance(p1, inner);`,\r\n        `   float b = distance(p2, inner);`,\r\n        `   float c = distance(p1, p2);`,\r\n        `   float cos_alpha = (pow(b, 2.0) + pow(c, 2.0) - pow(a, 2.0)) / (2.0 * b * c);`,\r\n        `   float sin_alpha = sqrt(1.0 - pow(cos_alpha, 2.0));`,\r\n        `   float normal_length = sin_alpha * a;`,\r\n        `   float stroke_scale = 1.0 + strokeWidth / 2.0 * pixelRatio / normal_length;`,\r\n        `   return stroke_scale;`,\r\n        `}`\r\n    ]\r\n]\r\nvertex.main = [\r\n    `void main(void) {`,\r\n    `   r = in_r;`,\r\n    `   width = in_width;`,\r\n    `   height = in_height;`,\r\n    `   shape = in_shape;`,\r\n    `   fill = in_fill;`,\r\n    `   strokeColor = in_strokeColor;`,\r\n    `   strokeWidth = in_strokeWidth;`,\r\n    `   rotate = in_rotate;`,\r\n    `   position = scale * (in_position + in_offset) + translate;`,\r\n    `   vertexAlpha = in_vertexAlpha * pixelRatio;`,\r\n    `   vertexBeta = in_vertexBeta * pixelRatio;`,\r\n    `   vertexGamma = in_vertexGamma * pixelRatio;`,\r\n    `   mat3 scale_mat = mat3(`,\r\n    `       1, 0, 0,`,\r\n    `       0, 1, 0,`,\r\n    `       0, 0, 1`,\r\n    `   );`,\r\n    `   mat3 rotate_mat = mat3(`,\r\n    `       1, 0, 0,`,\r\n    `       0, 1, 0,`,\r\n    `       0, 0, 1`,\r\n    `   );`,\r\n    `   mat3 translate_mat = mat3(`,\r\n    `       1, 0, 0,`,\r\n    `       0, 1, 0,`,\r\n    `       position.x, position.y, 1`,\r\n    `   );`,\r\n    `   if (shape == 0.0) {`, // circle shape\r\n    `       float size = (r + strokeWidth / 2.) * 2. * 1.5;`, // NOTE: multiply 2. to make radius to diameter; multiply 1.5 to prevent border factor\r\n    `       scale_mat = mat3(`,\r\n    `           size, 0, 0,`,\r\n    `           0, size, 0,`,\r\n    `           0, 0, 1`,\r\n    `           );`,\r\n    `   } else if (shape == 1.0) {`, // rect shape\r\n    `       scale_mat = mat3(`,\r\n    `           width + strokeWidth, 0, 0,`,\r\n    `           0, height + strokeWidth, 0,`,\r\n    `           0, 0, 1`,\r\n    `       );`,\r\n    `       rotate_mat = mat3(`,\r\n    `           cos(rotate), sin(rotate), 0,`,\r\n    `           -sin(rotate), cos(rotate), 0,`,\r\n    `           0, 0, 1`,\r\n    `       );`,\r\n    `   } else if (shape == 2.0) {`, // triangle shape\r\n    // calculate the normal of the edge: alpha => beta\r\n    `       vec2 inner = calculate_inner_point(vertexAlpha, vertexBeta, vertexGamma);`,\r\n    `       float stroke_scale = calculate_stroke_scale(vertexAlpha, vertexBeta, vertexGamma);`,\r\n    `       vec2 outer_vertexAlpha = (vertexAlpha - inner) * stroke_scale + inner;`, // consider stroke in\r\n    `       vec2 outer_vertexBeta = (vertexBeta - inner) * stroke_scale + inner;`, // consider stroke in\r\n    `       vec2 outer_vertexGamma = (vertexGamma - inner) * stroke_scale + inner;`, // consider stroke in\r\n    // to ensure the fragment cutting is within the rectangle\r\n    `       width = 1.5 * (max(max(outer_vertexAlpha.x, outer_vertexBeta.x), outer_vertexGamma.x) - min(min(outer_vertexAlpha.x, outer_vertexBeta.x), outer_vertexGamma.x));`,\r\n    `       height = 1.5 * (max(max(outer_vertexAlpha.y, outer_vertexBeta.y), outer_vertexGamma.y)- min(min(outer_vertexAlpha.y, outer_vertexBeta.y), outer_vertexGamma.y));`,\r\n    `       scale_mat = mat3(`,\r\n    `           width, 0, 0,`,\r\n    `           0, height, 0,`,\r\n    `           0, 0, 1`,\r\n    `       );`,\r\n    `   }`,\r\n    `   mat3 transform = translate_mat * rotate_mat * scale_mat;`,\r\n    `   gl_Position = vec4(projection * transform * inVertexPos, 1.);`,\r\n    `}`\r\n]\r\n\r\nconst idVertex = vertex.copy()\r\nidVertex.inputs['in_id'] = 'vec4'\r\nidVertex.outputs['id'] = 'vec4'\r\nidVertex.main.splice(1, 0, `id = in_id;`)\r\n\r\nconst fragment = new Shader()\r\nfragment.inputs = { ...vertex.outputs }\r\nfragment.outputs = {\r\n    fragmentColor: 'vec4'\r\n}\r\nfragment.uniforms = {\r\n    viewport: 'vec2',\r\n    pixelRatio: 'float'\r\n}\r\nfragment.methods = [\r\n    [\r\n        `vec2 calculate_inner_point (vec2 p1, vec2 p2, vec2 p3) {`,\r\n        `    float inner_p1 = sqrt(dot(p1, p1));`,\r\n        `    float inner_p2 = sqrt(dot(p2, p2));`,\r\n        `    float inner_p3 = sqrt(dot(p3, p3));`,\r\n        `    vec2 inner = (p1 * inner_p1 + p2 * inner_p2 + p3 * inner_p3) / (inner_p1 + inner_p2 + inner_p3);`,\r\n        `    return inner;`,\r\n        `}`\r\n    ],\r\n    [\r\n        `float calculate_stroke_scale (vec2 p1, vec2 p2, vec2 p3) {`,\r\n        `    vec2 inner = calculate_inner_point(p1, p2, p3);`,\r\n        `    float a = distance(p1, inner);`,\r\n        `    float b = distance(p2, inner);`,\r\n        `    float c = distance(p1, p2);`,\r\n        `    float cos_alpha = (pow(b, 2.0) + pow(c, 2.0) - pow(a, 2.0)) / (2.0 * b * c);`,\r\n        `    float sin_alpha = sqrt(1.0 - pow(cos_alpha, 2.0));`,\r\n        `    float normal_length = sin_alpha * a;`,\r\n        `    float stroke_scale = 1.0 + strokeWidth / 2.0 * pixelRatio / normal_length;`,\r\n        `    return stroke_scale;`,\r\n        `}`\r\n    ],\r\n    [\r\n        `float sign (vec2 p1, vec2 p2, vec2 p3) {`,\r\n        `    return (p1.x - p3.x) * (p2.y - p3.y) - (p2.x - p3.x) * (p1.y - p3.y);`,\r\n        `}`\r\n    ],\r\n    [\r\n        `float inTriangle() {`,\r\n        `    float stroke_scale = calculate_stroke_scale(vertexAlpha, vertexBeta, vertexGamma);`,\r\n        `    vec2 flip_pos = vec2(position.x, viewport.y - position.y);`,\r\n        `    vec2 flip_vertexAlpha = vec2(vertexAlpha.x, - vertexAlpha.y) / stroke_scale;`,\r\n        `    vec2 flip_vertexBeta = vec2(vertexBeta.x, - vertexBeta.y) / stroke_scale;`,\r\n        `    vec2 flip_vertexGamma = vec2(vertexGamma.x, - vertexGamma.y) / stroke_scale;`,\r\n        `    float d1 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexAlpha, flip_vertexBeta);`,\r\n        `    float d2 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexBeta, flip_vertexGamma);`,\r\n        `    float d3 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexGamma, flip_vertexAlpha);`,\r\n        `    bool has_neg = (d1 <= 0.0) || (d2 <= 0.0) || (d3 <= 0.0);`,\r\n        `    bool has_pos = (d1 >= 0.0) || (d2 >= 0.0) || (d3 >= 0.0);`,\r\n        `    if (!(has_neg && has_pos)) {`,\r\n        `        return 1.0;`,\r\n        `    } else {`,\r\n        `        return 0.0;`,\r\n        `    }`,\r\n        `}`\r\n    ],\r\n    [\r\n        `float inTriangleBorder() {`,\r\n        `    float stroke_scale = calculate_stroke_scale(vertexAlpha, vertexBeta, vertexGamma);`,\r\n        `    vec2 flip_pos = vec2(position.x, viewport.y - position.y);`,\r\n        `    vec2 flip_vertexAlpha = stroke_scale * vec2(vertexAlpha.x, - vertexAlpha.y);`,\r\n        `    vec2 flip_vertexBeta = stroke_scale * vec2(vertexBeta.x, - vertexBeta.y);`,\r\n        `    vec2 flip_vertexGamma = stroke_scale * vec2(vertexGamma.x, - vertexGamma.y);`,\r\n        ``,\r\n        `    float d1 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexAlpha, flip_vertexBeta);`,\r\n        `    float d2 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexBeta, flip_vertexGamma);`,\r\n        `    float d3 = sign(gl_FragCoord.xy / pixelRatio - flip_pos, flip_vertexGamma, flip_vertexAlpha);`,\r\n        ``,\r\n        `    bool has_neg = (d1 <= 0.0) || (d2 <= 0.0) || (d3 <= 0.0);`,\r\n        `    bool has_pos = (d1 >= 0.0) || (d2 >= 0.0) || (d3 >= 0.0);`,\r\n        ``,\r\n        `    bool inTriangle = inTriangle() == 1.0;`,\r\n        `    bool inTriangleBorder = !(has_neg && has_pos);`,\r\n        ``,\r\n        `    if (!inTriangle && inTriangleBorder) {`,\r\n        `        return 1.0;`,\r\n        `    } else {`,\r\n        `        return 0.0;`,\r\n        `    }`,\r\n        `}`\r\n    ],\r\n\r\n    [\r\n        `float inRect() {`,\r\n        `    vec2 flip_pos = position;`,\r\n        `    flip_pos.y = viewport.y - position.y;`,\r\n        `    mat2 rotate_mat = mat2(`,\r\n        `        cos(rotate), sin(rotate),`,\r\n        `        -sin(rotate), cos(rotate)`,\r\n        `    );`,\r\n        `    vec2 rotate_related_FragCoord = rotate_mat * (gl_FragCoord.xy / pixelRatio - flip_pos);`,\r\n        `    float x_in = step(rotate_related_FragCoord.x, width / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - width / 2.0 + strokeWidth / 2.0));`,\r\n        `    float y_in = step(rotate_related_FragCoord.y, height / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - height / 2.0 + strokeWidth / 2.0));`,\r\n        `    return x_in * y_in;`,\r\n        `}`\r\n    ],\r\n\r\n    [\r\n        `float inRectBorder() {`,\r\n        `    vec2 flip_pos = position;`,\r\n        `    flip_pos.y = viewport.y - position.y;`,\r\n        `    mat2 rotate_mat = mat2(`,\r\n        `        cos(rotate), sin(rotate),`,\r\n        `        -sin(rotate), cos(rotate)`,\r\n        `    );`,\r\n        `    vec2 rotate_related_FragCoord = rotate_mat * (gl_FragCoord.xy / pixelRatio - flip_pos);`,\r\n        `    float x_in_outer = step(rotate_related_FragCoord.x, width / 2.0 + strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - width / 2.0 - strokeWidth / 2.0));`,\r\n        `    float y_in_outer = step(rotate_related_FragCoord.y, height / 2.0 + strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - height / 2.0 - strokeWidth / 2.0));`,\r\n        `    float x_in_inner = step(rotate_related_FragCoord.x, width / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.x, - width / 2.0 + strokeWidth / 2.0));`,\r\n        `    float y_in_inner = step(rotate_related_FragCoord.y, height / 2.0 - strokeWidth / 2.0) * (1.0 - step(rotate_related_FragCoord.y, - height / 2.0 + strokeWidth / 2.0));`,\r\n        ``,\r\n        `    return x_in_outer * y_in_outer * (1.0 - x_in_inner * y_in_inner);`,\r\n        `}`\r\n    ],\r\n\r\n    [\r\n        `float inCircle() {`,\r\n        `    vec2 flip_pos = position;`,\r\n        `    flip_pos.y = viewport.y - position.y;`,\r\n        `    float dist = distance(gl_FragCoord.xy / pixelRatio, flip_pos);`,\r\n        `    float dist_in_r = step(dist, r - strokeWidth / 2.);`,\r\n        `    return dist_in_r;`,\r\n        `}`\r\n    ],\r\n\r\n    [\r\n        `float inCircleBorder() {`,\r\n        `    if (strokeWidth == 0.) {`,\r\n        `      return 0.;`,\r\n        `    }`,\r\n        `    vec2 flip_pos = position;`,\r\n        `    flip_pos.y = viewport.y - position.y;`,\r\n        ``,\r\n        `    float dist = distance(gl_FragCoord.xy / pixelRatio, flip_pos);`,\r\n        `    float drawOuter = 1. - smoothstep((r + strokeWidth / 2.) * 0.95, (r + strokeWidth / 2.) * 1.05, dist);`,\r\n        `    float drawInner = 1. - step(r - strokeWidth / 2., dist);`,\r\n        `    return drawOuter * (1. - drawInner);`,\r\n        `}`\r\n    ]\r\n]\r\nfragment.main = [\r\n    `void main(void) {`,\r\n    `    if (shape == 0.0) {`,\r\n    `        // circle shape`,\r\n    `        // border check, using 0.5(center of smoothstep)`,\r\n    `        if (inCircle() < 1. && (strokeWidth < 0.8 || inCircleBorder() < 0.5)) {`,\r\n    `            discard;`,\r\n    `        }`,\r\n    `        fragmentColor = inCircleBorder() * vec4(strokeColor.rgb * strokeColor.a, strokeColor.a) + inCircle() * vec4(fill.rgb * fill.a, fill.a);`,\r\n    `    } else if (shape == 1.0) {`,\r\n    `        // rect shape`,\r\n    `        fragmentColor = inRectBorder() * vec4(strokeColor.rgb * strokeColor.a, strokeColor.a) + inRect() * vec4(fill.rgb * fill.a, fill.a);`,\r\n    `    } else if (shape == 2.0) {`,\r\n    `        // triangle shape`,\r\n    `        fragmentColor = inTriangleBorder() * vec4(strokeColor.rgb * strokeColor.a, strokeColor.a) + inTriangle() * vec4(fill.rgb * fill.a, fill.a);`,\r\n    `    }`,\r\n    `}`\r\n]\r\n\r\nconst idFragment = fragment.copy()\r\nidFragment.inputs['id'] = 'vec4'\r\n// delete old fragmentColor\r\nidFragment.main.splice(7, 1)\r\nidFragment.main.splice(9, 1)\r\nidFragment.main.splice(11, 1)\r\n// add new fragmentColor\r\nidFragment.main.splice(-1, 0, `fragmentColor = id;`)\r\n\r\nexport { vertex, idVertex, fragment, idFragment }\r\n","/**\r\n * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>\r\n * @description utility functions for renderer\r\n */\r\n\r\nimport { Color } from '../interfaces'\r\nimport { Variable, RenderAttribute } from './interfaces'\r\n\r\n/**\r\n * compile webgl shader\r\n * @param gl WebGL instance\r\n * @param shaderStr shader file in string\r\n * @param shaderType vertex or fragment shader\r\n */\r\nexport function compileShader(\r\n    gl: WebGL2RenderingContext,\r\n    shaderStr: string,\r\n    shaderType: number\r\n): WebGLShader {\r\n    const shader = gl.createShader(shaderType)\r\n    gl.shaderSource(shader, shaderStr)\r\n    gl.compileShader(shader)\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        throw new Error('Shader compile failed: ' + gl.getShaderInfoLog(shader))\r\n    }\r\n\r\n    return shader\r\n}\r\n\r\n/**\r\n * generate WebGL program\r\n * @param gl WebGL instance\r\n * @param vertShaderStr vertex shader in string format\r\n * @param fragShaderStr fragment shader in string format\r\n * @param attributes attributes\r\n */\r\nexport function createProgram(\r\n    gl: WebGL2RenderingContext,\r\n    vertShaderStr: string,\r\n    fragShaderStr: string,\r\n    attributes: Map<string, RenderAttribute>\r\n): WebGLProgram {\r\n    const vertShader = compileShader(gl, vertShaderStr, gl.VERTEX_SHADER)\r\n    const fragShader = compileShader(gl, fragShaderStr, gl.FRAGMENT_SHADER)\r\n\r\n    const program = gl.createProgram()\r\n\r\n    attributes.forEach((attr) => {\r\n        gl.bindAttribLocation(program, attr.location, attr.name)\r\n    })\r\n\r\n    gl.attachShader(program, vertShader)\r\n    gl.attachShader(program, fragShader)\r\n\r\n    gl.linkProgram(program)\r\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n        throw new Error(`Could not link shaders: ${gl.getProgramInfoLog(program)}`)\r\n    }\r\n\r\n    return program\r\n}\r\n\r\n/**\r\n * create WebGL array buffer given data array\r\n * @param gl WebGL context\r\n * @param data data to store in buffer\r\n * @returns WebGL buffer store given data\r\n */\r\nexport function createArrayBuffer(gl: WebGL2RenderingContext, data: Float32Array): WebGLBuffer {\r\n    const buffer = gl.createBuffer()\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer)\r\n    gl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW)\r\n    return buffer\r\n}\r\n\r\n/**\r\n * extract attributes from a shader sring\r\n * @param {string} shaderStr\r\n * @returns {RenderAttribute[]} attributes array\r\n */\r\nexport function extractAttributesFromShader(shaderStr: string): Map<string, RenderAttribute> {\r\n    const matchings = shaderStr.match(/in\\s.*;/g)\r\n    const attributesMap = new Map()\r\n    matchings.forEach((match, location) => {\r\n        const name = match.split(' ')[2].slice(0, -1)\r\n        const type = match.split(' ')[1]\r\n        let size = 1\r\n        if (type.slice(0, 3) === 'vec') {\r\n            size = Number(type.slice(-1))\r\n        }\r\n        let isBuildIn = false\r\n        if (name === 'inVertexPos') {\r\n            // an instance is formed by two triangles,\r\n            // thus we need four point positions to initial the instance\r\n            // more details: https://panjiacheng.site/wiki/2019/06/06/webGL/WebGL-BatchDraw%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB+%E7%90%86%E8%A7%A3/\r\n            isBuildIn = true\r\n        }\r\n        attributesMap.set(name, {\r\n            name,\r\n            size, // the space of one attribute, e.g. vec3 ocuppies 3 units of space\r\n            location, // the appearance order of one attribute in the shader code, which is equal to the result of getAttribLocation\r\n            isBuildIn, // which means four vertices in one element: inVertexPos\r\n            extractAttributeValueFrom: () => [] // a function which is use to append an element into the array of this attribute\r\n        })\r\n    })\r\n    return attributesMap\r\n}\r\n\r\n/**\r\n * encode a render id as color to pass in texture\r\n * @param id render id\r\n */\r\nexport function encodeRenderId(id: number): Color {\r\n    // split a large number by 8-bit: id = concat(a, b, g, r), and normalize them into (0, 1)\r\n    const r = (id & 255) / 255.0\r\n    const g = ((id >> 8) & 255) / 255.0\r\n    const b = ((id >> 16) & 255) / 255.0\r\n    const a = ((id >> 24) & 255) / 255.0\r\n    return { r, g, b, a }\r\n}\r\n\r\n/**\r\n * decode pixel value to number\r\n * @param pixelVal a pixel's value on texture\r\n */\r\nexport function decodeRenderId(pixelVal: Uint8Array): number {\r\n    // parse normalized parts of id number, bit shift to origin position and concat\r\n    const renderId = pixelVal[0] | (pixelVal[1] << 8) | (pixelVal[2] << 16) | (pixelVal[3] << 24)\r\n    return renderId\r\n}\r\n\r\nexport class Shader {\r\n    public inputs: Variable = {}\r\n    public outputs: Variable = {}\r\n    public uniforms: Variable = {}\r\n    public methods: string[][] = [[]]\r\n    public main: string[] = []\r\n    private header = `#version 300 es\\nprecision highp float;\\n`\r\n    public copy() {\r\n        const copyShader = new Shader()\r\n        copyShader.inputs = { ...this.inputs }\r\n        copyShader.outputs = { ...this.outputs }\r\n        copyShader.uniforms = { ...this.uniforms }\r\n        copyShader.main = this.main.map((str) => str)\r\n        copyShader.methods = this.methods.map((method) => method.map((str) => str))\r\n        return copyShader\r\n    }\r\n    public connect() {\r\n        const variablesPrefix = [\r\n            { prefix: 'in', variables: this.inputs },\r\n            { prefix: 'out', variables: this.outputs },\r\n            { prefix: 'uniform', variables: this.uniforms }\r\n        ]\r\n        const variableDefinitions = variablesPrefix\r\n            .map((variablePrefix) =>\r\n                Object.entries(variablePrefix.variables)\r\n                    .map(([name, type]) => {\r\n                        return `${variablePrefix.prefix} ${type} ${name};\\n`\r\n                    })\r\n                    .join('')\r\n            )\r\n            .join('')\r\n\r\n        return (\r\n            this.header +\r\n            variableDefinitions +\r\n            this.methods.map((method) => method.join('\\n')).join('\\n') +\r\n            '\\n' +\r\n            this.main.join('\\n')\r\n        )\r\n    }\r\n}\r\n","export const EMPTY_FUNCTION = () => {}\r\n","/**\r\n * Test whether a string can be a valid id of a Node.\r\n * @param {string} value: the string tobe tested\r\n * @returns {boolean}\r\n */\r\nexport function isValidId(value: string) {\r\n    return value !== undefined && typeof value === 'string' && value.length > 0\r\n}\r\n","/**\r\n * @author Jiacheng Pan <jackieanxis@gmail.com>\r\n * @description Map2 is a Map data structure which maps two keys to one value.\r\n * @Usage same to Map data structure in ES6.\r\n * @dependences None\r\n */\r\n\r\nconst JOIN = String.fromCharCode(7)\r\nconst isKeys = (keys: Array<string>) => {\r\n    return (\r\n        keys instanceof Array &&\r\n        keys.length === 2 &&\r\n        keys.every((key) => key !== undefined && key !== null)\r\n    )\r\n}\r\nclass Map2 {\r\n    private map = new Map()\r\n    public constructor(entries?: Array<Array<any>>) {\r\n        if (entries instanceof Array) {\r\n            entries.forEach((entry) => {\r\n                let [key, value] = entry\r\n                this.set(key, value)\r\n            })\r\n        }\r\n    }\r\n    public get size() {\r\n        return this.map.size\r\n    }\r\n\r\n    public delete(keys: Array<string>) {\r\n        if (isKeys(keys)) {\r\n            const key = keys.join(JOIN)\r\n            const key_ = keys[1] + JOIN + keys[0]\r\n            let map = this.map\r\n            map.delete(key)\r\n            map.delete(key_)\r\n        }\r\n    }\r\n\r\n    public set(keys: Array<string>, value: any) {\r\n        if (isKeys(keys)) {\r\n            const key = keys.join(JOIN)\r\n            const key_ = keys[1] + JOIN + keys[0]\r\n            let map = this.map\r\n            if (!map.has(key_)) {\r\n                map.set(key, value)\r\n            } else {\r\n                map.set(key_, value)\r\n            }\r\n        }\r\n        return this\r\n    }\r\n\r\n    public get(keys: Array<string>) {\r\n        if (isKeys(keys)) {\r\n            const key = keys.join(JOIN)\r\n            const key_ = keys[1] + JOIN + keys[0]\r\n            return this.map.get(key) || this.map.get(key_)\r\n        } else {\r\n            return undefined\r\n        }\r\n    }\r\n\r\n    public has(keys: Array<string>) {\r\n        if (isKeys(keys)) {\r\n            const key = keys.join(JOIN)\r\n            const key_ = keys[1] + JOIN + keys[0]\r\n            return this.map.has(key) || this.map.has(key_)\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    public forEach(func: Function) {\r\n        this.map.forEach((value, key) => {\r\n            let keys = key.split(JOIN)\r\n            func(value, keys, this)\r\n        })\r\n    }\r\n\r\n    public entries() {\r\n        return [...this.map.entries()].map((entry) => {\r\n            const key = entry[0].split(JOIN)\r\n            const value = entry[1]\r\n            return [key, value]\r\n        })\r\n    }\r\n\r\n    public keys() {\r\n        let keys = [...this.map.keys()]\r\n        return keys.map((key) => key.split(JOIN))\r\n    }\r\n\r\n    public values() {\r\n        return [...this.map.values()]\r\n    }\r\n}\r\n\r\nexport default Map2\r\n","/**\r\n * @author Xiaodong Zhao <zhaoxiaodong@zju.edu.cn>\r\n * @description some utility functions\r\n */\r\n\r\nimport { NodeLinkData } from '../interfaces'\r\n\r\n/**\r\n * given a graph data with position, return a copy of graph, with position transformed to center of given size\r\n * @param graph node link graph data\r\n * @param size graph size (max(width, height))\r\n * @param centerX x pos of graph center\r\n * @param centerY y pos of graph center\r\n */\r\nexport function transformGraphPosition(\r\n    graph: NodeLinkData,\r\n    size: number,\r\n    centerX: number,\r\n    centerY: number\r\n) {\r\n    const targetGraph: NodeLinkData = JSON.parse(JSON.stringify(graph))\r\n    const xs = targetGraph.nodes.map((node) => node.x)\r\n    const ys = targetGraph.nodes.map((node) => node.y)\r\n    const xMin = Math.min(...xs)\r\n    const xMax = Math.max(...xs)\r\n    const yMin = Math.min(...ys)\r\n    const yMax = Math.max(...ys)\r\n\r\n    const xMid = (xMin + xMax) / 2\r\n    const yMid = (yMin + yMax) / 2\r\n\r\n    targetGraph.nodes.forEach((node) => {\r\n        node.x = ((node.x - xMid) / (xMax - xMin)) * size + centerX\r\n        node.y = ((node.y - yMid) / (yMax - yMin)) * size + centerY\r\n    })\r\n\r\n    return targetGraph\r\n}\r\n\r\n/**\r\n * the function is to override object recursively\r\n * @param overriddenObject: the Object to be overridden\r\n * @param overridingObject: the Object to override the overridden Object\r\n */\r\nexport function override(overriddenObject: object, overridingObject: object) {\r\n    if (overriddenObject !== Object(overriddenObject)) {\r\n        // overriddenObject is not an object\r\n        if (overridingObject !== Object(overridingObject)) {\r\n            // overridingObject is not an object\r\n            return overridingObject\r\n        } else {\r\n            return JSON.parse(JSON.stringify(overridingObject)) // deep copy\r\n        }\r\n    }\r\n\r\n    const object = JSON.parse(JSON.stringify(overriddenObject)) // deep copy\r\n    for (const key in overridingObject) {\r\n        if (key in object && overridingObject[key] === Object(overridingObject[key])) {\r\n            // if overridingObject[key] is an object\r\n            object[key] = override(object[key], overridingObject[key])\r\n        } else {\r\n            object[key] = overridingObject[key]\r\n        }\r\n    }\r\n    return object\r\n}\r\n"],"file":"bundle.dev.js"}